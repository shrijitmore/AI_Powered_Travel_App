{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2019 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.FilterStackFactory = exports.FilterStack = void 0;\n  class FilterStack {\n    constructor(filters) {\n      this.filters = filters;\n    }\n    sendMetadata(metadata) {\n      let result = metadata;\n      for (let i = 0; i < this.filters.length; i++) {\n        result = this.filters[i].sendMetadata(result);\n      }\n      return result;\n    }\n    receiveMetadata(metadata) {\n      let result = metadata;\n      for (let i = this.filters.length - 1; i >= 0; i--) {\n        result = this.filters[i].receiveMetadata(result);\n      }\n      return result;\n    }\n    sendMessage(message) {\n      let result = message;\n      for (let i = 0; i < this.filters.length; i++) {\n        result = this.filters[i].sendMessage(result);\n      }\n      return result;\n    }\n    receiveMessage(message) {\n      let result = message;\n      for (let i = this.filters.length - 1; i >= 0; i--) {\n        result = this.filters[i].receiveMessage(result);\n      }\n      return result;\n    }\n    receiveTrailers(status) {\n      let result = status;\n      for (let i = this.filters.length - 1; i >= 0; i--) {\n        result = this.filters[i].receiveTrailers(result);\n      }\n      return result;\n    }\n    push(filters) {\n      this.filters.unshift(...filters);\n    }\n    getFilters() {\n      return this.filters;\n    }\n  }\n  exports.FilterStack = FilterStack;\n  class FilterStackFactory {\n    constructor(factories) {\n      this.factories = factories;\n    }\n    push(filterFactories) {\n      this.factories.unshift(...filterFactories);\n    }\n    clone() {\n      return new FilterStackFactory([...this.factories]);\n    }\n    createFilter() {\n      return new FilterStack(this.factories.map(factory => factory.createFilter()));\n    }\n  }\n  exports.FilterStackFactory = FilterStackFactory;\n});","lineCount":86,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,2,18,0,"Object"],[20,8,18,6],[20,9,18,7,"defineProperty"],[20,23,18,21],[20,24,18,22,"exports"],[20,31,18,29],[20,33,18,31],[20,45,18,43],[20,47,18,45],[21,4,18,47,"value"],[21,9,18,52],[21,11,18,54],[22,2,18,59],[22,3,18,60],[22,4,18,61],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"FilterStackFactory"],[23,28,19,26],[23,31,19,29,"exports"],[23,38,19,36],[23,39,19,37,"FilterStack"],[23,50,19,48],[23,53,19,51],[23,58,19,56],[23,59,19,57],[24,2,20,0],[24,8,20,6,"FilterStack"],[24,19,20,17],[24,20,20,18],[25,4,21,4,"constructor"],[25,15,21,15,"constructor"],[25,16,21,16,"filters"],[25,23,21,23],[25,25,21,25],[26,6,22,8],[26,10,22,12],[26,11,22,13,"filters"],[26,18,22,20],[26,21,22,23,"filters"],[26,28,22,30],[27,4,23,4],[28,4,24,4,"sendMetadata"],[28,16,24,16,"sendMetadata"],[28,17,24,17,"metadata"],[28,25,24,25],[28,27,24,27],[29,6,25,8],[29,10,25,12,"result"],[29,16,25,18],[29,19,25,21,"metadata"],[29,27,25,29],[30,6,26,8],[30,11,26,13],[30,15,26,17,"i"],[30,16,26,18],[30,19,26,21],[30,20,26,22],[30,22,26,24,"i"],[30,23,26,25],[30,26,26,28],[30,30,26,32],[30,31,26,33,"filters"],[30,38,26,40],[30,39,26,41,"length"],[30,45,26,47],[30,47,26,49,"i"],[30,48,26,50],[30,50,26,52],[30,52,26,54],[31,8,27,12,"result"],[31,14,27,18],[31,17,27,21],[31,21,27,25],[31,22,27,26,"filters"],[31,29,27,33],[31,30,27,34,"i"],[31,31,27,35],[31,32,27,36],[31,33,27,37,"sendMetadata"],[31,45,27,49],[31,46,27,50,"result"],[31,52,27,56],[31,53,27,57],[32,6,28,8],[33,6,29,8],[33,13,29,15,"result"],[33,19,29,21],[34,4,30,4],[35,4,31,4,"receiveMetadata"],[35,19,31,19,"receiveMetadata"],[35,20,31,20,"metadata"],[35,28,31,28],[35,30,31,30],[36,6,32,8],[36,10,32,12,"result"],[36,16,32,18],[36,19,32,21,"metadata"],[36,27,32,29],[37,6,33,8],[37,11,33,13],[37,15,33,17,"i"],[37,16,33,18],[37,19,33,21],[37,23,33,25],[37,24,33,26,"filters"],[37,31,33,33],[37,32,33,34,"length"],[37,38,33,40],[37,41,33,43],[37,42,33,44],[37,44,33,46,"i"],[37,45,33,47],[37,49,33,51],[37,50,33,52],[37,52,33,54,"i"],[37,53,33,55],[37,55,33,57],[37,57,33,59],[38,8,34,12,"result"],[38,14,34,18],[38,17,34,21],[38,21,34,25],[38,22,34,26,"filters"],[38,29,34,33],[38,30,34,34,"i"],[38,31,34,35],[38,32,34,36],[38,33,34,37,"receiveMetadata"],[38,48,34,52],[38,49,34,53,"result"],[38,55,34,59],[38,56,34,60],[39,6,35,8],[40,6,36,8],[40,13,36,15,"result"],[40,19,36,21],[41,4,37,4],[42,4,38,4,"sendMessage"],[42,15,38,15,"sendMessage"],[42,16,38,16,"message"],[42,23,38,23],[42,25,38,25],[43,6,39,8],[43,10,39,12,"result"],[43,16,39,18],[43,19,39,21,"message"],[43,26,39,28],[44,6,40,8],[44,11,40,13],[44,15,40,17,"i"],[44,16,40,18],[44,19,40,21],[44,20,40,22],[44,22,40,24,"i"],[44,23,40,25],[44,26,40,28],[44,30,40,32],[44,31,40,33,"filters"],[44,38,40,40],[44,39,40,41,"length"],[44,45,40,47],[44,47,40,49,"i"],[44,48,40,50],[44,50,40,52],[44,52,40,54],[45,8,41,12,"result"],[45,14,41,18],[45,17,41,21],[45,21,41,25],[45,22,41,26,"filters"],[45,29,41,33],[45,30,41,34,"i"],[45,31,41,35],[45,32,41,36],[45,33,41,37,"sendMessage"],[45,44,41,48],[45,45,41,49,"result"],[45,51,41,55],[45,52,41,56],[46,6,42,8],[47,6,43,8],[47,13,43,15,"result"],[47,19,43,21],[48,4,44,4],[49,4,45,4,"receiveMessage"],[49,18,45,18,"receiveMessage"],[49,19,45,19,"message"],[49,26,45,26],[49,28,45,28],[50,6,46,8],[50,10,46,12,"result"],[50,16,46,18],[50,19,46,21,"message"],[50,26,46,28],[51,6,47,8],[51,11,47,13],[51,15,47,17,"i"],[51,16,47,18],[51,19,47,21],[51,23,47,25],[51,24,47,26,"filters"],[51,31,47,33],[51,32,47,34,"length"],[51,38,47,40],[51,41,47,43],[51,42,47,44],[51,44,47,46,"i"],[51,45,47,47],[51,49,47,51],[51,50,47,52],[51,52,47,54,"i"],[51,53,47,55],[51,55,47,57],[51,57,47,59],[52,8,48,12,"result"],[52,14,48,18],[52,17,48,21],[52,21,48,25],[52,22,48,26,"filters"],[52,29,48,33],[52,30,48,34,"i"],[52,31,48,35],[52,32,48,36],[52,33,48,37,"receiveMessage"],[52,47,48,51],[52,48,48,52,"result"],[52,54,48,58],[52,55,48,59],[53,6,49,8],[54,6,50,8],[54,13,50,15,"result"],[54,19,50,21],[55,4,51,4],[56,4,52,4,"receiveTrailers"],[56,19,52,19,"receiveTrailers"],[56,20,52,20,"status"],[56,26,52,26],[56,28,52,28],[57,6,53,8],[57,10,53,12,"result"],[57,16,53,18],[57,19,53,21,"status"],[57,25,53,27],[58,6,54,8],[58,11,54,13],[58,15,54,17,"i"],[58,16,54,18],[58,19,54,21],[58,23,54,25],[58,24,54,26,"filters"],[58,31,54,33],[58,32,54,34,"length"],[58,38,54,40],[58,41,54,43],[58,42,54,44],[58,44,54,46,"i"],[58,45,54,47],[58,49,54,51],[58,50,54,52],[58,52,54,54,"i"],[58,53,54,55],[58,55,54,57],[58,57,54,59],[59,8,55,12,"result"],[59,14,55,18],[59,17,55,21],[59,21,55,25],[59,22,55,26,"filters"],[59,29,55,33],[59,30,55,34,"i"],[59,31,55,35],[59,32,55,36],[59,33,55,37,"receiveTrailers"],[59,48,55,52],[59,49,55,53,"result"],[59,55,55,59],[59,56,55,60],[60,6,56,8],[61,6,57,8],[61,13,57,15,"result"],[61,19,57,21],[62,4,58,4],[63,4,59,4,"push"],[63,8,59,8,"push"],[63,9,59,9,"filters"],[63,16,59,16],[63,18,59,18],[64,6,60,8],[64,10,60,12],[64,11,60,13,"filters"],[64,18,60,20],[64,19,60,21,"unshift"],[64,26,60,28],[64,27,60,29],[64,30,60,32,"filters"],[64,37,60,39],[64,38,60,40],[65,4,61,4],[66,4,62,4,"getFilters"],[66,14,62,14,"getFilters"],[66,15,62,14],[66,17,62,17],[67,6,63,8],[67,13,63,15],[67,17,63,19],[67,18,63,20,"filters"],[67,25,63,27],[68,4,64,4],[69,2,65,0],[70,2,66,0,"exports"],[70,9,66,7],[70,10,66,8,"FilterStack"],[70,21,66,19],[70,24,66,22,"FilterStack"],[70,35,66,33],[71,2,67,0],[71,8,67,6,"FilterStackFactory"],[71,26,67,24],[71,27,67,25],[72,4,68,4,"constructor"],[72,15,68,15,"constructor"],[72,16,68,16,"factories"],[72,25,68,25],[72,27,68,27],[73,6,69,8],[73,10,69,12],[73,11,69,13,"factories"],[73,20,69,22],[73,23,69,25,"factories"],[73,32,69,34],[74,4,70,4],[75,4,71,4,"push"],[75,8,71,8,"push"],[75,9,71,9,"filterFactories"],[75,24,71,24],[75,26,71,26],[76,6,72,8],[76,10,72,12],[76,11,72,13,"factories"],[76,20,72,22],[76,21,72,23,"unshift"],[76,28,72,30],[76,29,72,31],[76,32,72,34,"filterFactories"],[76,47,72,49],[76,48,72,50],[77,4,73,4],[78,4,74,4,"clone"],[78,9,74,9,"clone"],[78,10,74,9],[78,12,74,12],[79,6,75,8],[79,13,75,15],[79,17,75,19,"FilterStackFactory"],[79,35,75,37],[79,36,75,38],[79,37,75,39],[79,40,75,42],[79,44,75,46],[79,45,75,47,"factories"],[79,54,75,56],[79,55,75,57],[79,56,75,58],[80,4,76,4],[81,4,77,4,"createFilter"],[81,16,77,16,"createFilter"],[81,17,77,16],[81,19,77,19],[82,6,78,8],[82,13,78,15],[82,17,78,19,"FilterStack"],[82,28,78,30],[82,29,78,31],[82,33,78,35],[82,34,78,36,"factories"],[82,43,78,45],[82,44,78,46,"map"],[82,47,78,49],[82,48,78,50,"factory"],[82,55,78,57],[82,59,78,61,"factory"],[82,66,78,68],[82,67,78,69,"createFilter"],[82,79,78,81],[82,80,78,82],[82,81,78,83],[82,82,78,84],[82,83,78,85],[83,4,79,4],[84,2,80,0],[85,2,81,0,"exports"],[85,9,81,7],[85,10,81,8,"FilterStackFactory"],[85,28,81,26],[85,31,81,29,"FilterStackFactory"],[85,49,81,47],[86,0,81,48],[86,3]],"functionMap":{"names":["<global>","FilterStack","FilterStack#constructor","FilterStack#sendMetadata","FilterStack#receiveMetadata","FilterStack#sendMessage","FilterStack#receiveMessage","FilterStack#receiveTrailers","FilterStack#push","FilterStack#getFilters","FilterStackFactory","FilterStackFactory#constructor","FilterStackFactory#push","FilterStackFactory#clone","FilterStackFactory#createFilter","factories.map$argument_0"],"mappings":"AAA;ACmB;ICC;KDE;IEC;KFM;IGC;KHM;IIC;KJM;IKC;KLM;IMC;KNM;IOC;KPE;IQC;KRE;CDC;AUE;ICC;KDE;IEC;KFE;IGC;KHE;IIC;kDCC,iCD;KJC;CVC"}},"type":"js/module"}]}