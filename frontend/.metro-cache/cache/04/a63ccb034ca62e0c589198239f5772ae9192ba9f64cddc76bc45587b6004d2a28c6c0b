{"dependencies":[{"name":"./object","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":23,"index":94},"end":{"line":5,"column":42,"index":113}}],"key":"xOxKVS7k9wOBO7C50gqXbLVMn/0=","exportNames":["*"]}},{"name":"./field","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":15,"index":248},"end":{"line":8,"column":33,"index":266}}],"key":"NvI2xXoYDS7eVNBPYDi7RsbVioc=","exportNames":["*"]}},{"name":"./util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":15,"index":283},"end":{"line":9,"column":32,"index":300}}],"key":"hA8WsniBZrUJ/dmBZgrNdZcEmJ8=","exportNames":["*"]}},{"name":"./oneof","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":15,"index":317},"end":{"line":10,"column":33,"index":335}}],"key":"6NmAiHUhkqvb6p1LAZJI/y3pbuA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  module.exports = Namespace;\n\n  // extends ReflectionObject\n  var ReflectionObject = require(_dependencyMap[0], \"./object\");\n  ((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n  var Field = require(_dependencyMap[1], \"./field\"),\n    util = require(_dependencyMap[2], \"./util\"),\n    OneOf = require(_dependencyMap[3], \"./oneof\");\n  var Type,\n    // cyclic\n    Service, Enum;\n\n  /**\n   * Constructs a new namespace instance.\n   * @name Namespace\n   * @classdesc Reflected namespace.\n   * @extends NamespaceBase\n   * @constructor\n   * @param {string} name Namespace name\n   * @param {Object.<string,*>} [options] Declared options\n   */\n\n  /**\n   * Constructs a namespace from JSON.\n   * @memberof Namespace\n   * @function\n   * @param {string} name Namespace name\n   * @param {Object.<string,*>} json JSON object\n   * @returns {Namespace} Created namespace\n   * @throws {TypeError} If arguments are invalid\n   */\n  Namespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n  };\n\n  /**\n   * Converts an array of reflection objects to JSON.\n   * @memberof Namespace\n   * @param {ReflectionObject[]} array Object array\n   * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n   * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n   */\n  function arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length)) return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i) obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n  }\n  Namespace.arrayToJSON = arrayToJSON;\n\n  /**\n   * Tests if the specified id is reserved.\n   * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n   * @param {number} id Id to test\n   * @returns {boolean} `true` if reserved, otherwise `false`\n   */\n  Namespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved) for (var i = 0; i < reserved.length; ++i) if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id) return true;\n    return false;\n  };\n\n  /**\n   * Tests if the specified name is reserved.\n   * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n   * @param {string} name Name to test\n   * @returns {boolean} `true` if reserved, otherwise `false`\n   */\n  Namespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved) for (var i = 0; i < reserved.length; ++i) if (reserved[i] === name) return true;\n    return false;\n  };\n\n  /**\n   * Not an actual constructor. Use {@link Namespace} instead.\n   * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n   * @exports NamespaceBase\n   * @extends ReflectionObject\n   * @abstract\n   * @constructor\n   * @param {string} name Namespace name\n   * @param {Object.<string,*>} [options] Declared options\n   * @see {@link Namespace}\n   */\n  function Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n\n    /**\n     * Cache lookup calls for any objects contains anywhere under this namespace.\n     * This drastically speeds up resolve for large cross-linked protos where the same\n     * types are looked up repeatedly.\n     * @type {Object.<string,ReflectionObject|null>}\n     * @private\n     */\n    this._lookupCache = {};\n\n    /**\n     * Whether or not objects contained in this namespace need feature resolution.\n     * @type {boolean}\n     * @protected\n     */\n    this._needsRecursiveFeatureResolution = true;\n\n    /**\n     * Whether or not objects contained in this namespace need a resolve.\n     * @type {boolean}\n     * @protected\n     */\n    this._needsRecursiveResolve = true;\n  }\n  function clearCache(namespace) {\n    namespace._nestedArray = null;\n    namespace._lookupCache = {};\n\n    // Also clear parent caches, since they include nested lookups.\n    var parent = namespace;\n    while (parent = parent.parent) {\n      parent._lookupCache = {};\n    }\n    return namespace;\n  }\n\n  /**\n   * Nested objects of this namespace as an array for iteration.\n   * @name NamespaceBase#nestedArray\n   * @type {ReflectionObject[]}\n   * @readonly\n   */\n  Object.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function () {\n      return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n  });\n\n  /**\n   * Namespace descriptor.\n   * @interface INamespace\n   * @property {Object.<string,*>} [options] Namespace options\n   * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n   */\n\n  /**\n   * Any extension field descriptor.\n   * @typedef AnyExtensionField\n   * @type {IExtensionField|IExtensionMapField}\n   */\n\n  /**\n   * Any nested object descriptor.\n   * @typedef AnyNestedObject\n   * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n   */\n\n  /**\n   * Converts this namespace to a namespace descriptor.\n   * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n   * @returns {INamespace} Namespace descriptor\n   */\n  Namespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\"options\", this.options, \"nested\", arrayToJSON(this.nestedArray, toJSONOptions)]);\n  };\n\n  /**\n   * Adds nested objects to this namespace from nested object descriptors.\n   * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n   * @returns {Namespace} `this`\n   */\n  Namespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n      for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n        nested = nestedJson[names[i]];\n        ns.add(\n        // most to least likely\n        (nested.fields !== undefined ? Type.fromJSON : nested.values !== undefined ? Enum.fromJSON : nested.methods !== undefined ? Service.fromJSON : nested.id !== undefined ? Field.fromJSON : Namespace.fromJSON)(names[i], nested));\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Gets the nested object of the specified name.\n   * @param {string} name Nested object name\n   * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n   */\n  Namespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name] || null;\n  };\n\n  /**\n   * Gets the values of the nested {@link Enum|enum} of the specified name.\n   * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n   * @param {string} name Nested enum name\n   * @returns {Object.<string,number>} Enum values\n   * @throws {Error} If there is no such enum\n   */\n  Namespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum) return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n  };\n\n  /**\n   * Adds a nested object to this namespace.\n   * @param {ReflectionObject} object Nested object to add\n   * @returns {Namespace} `this`\n   * @throws {TypeError} If arguments are invalid\n   * @throws {Error} If there is already a nested object with this name\n   */\n  Namespace.prototype.add = function add(object) {\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace)) throw TypeError(\"object must be a valid nested object\");\n    if (!this.nested) this.nested = {};else {\n      var prev = this.get(object.name);\n      if (prev) {\n        if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n          // replace plain namespace but keep existing nested elements and options\n          var nested = prev.nestedArray;\n          for (var i = 0; i < nested.length; ++i) object.add(nested[i]);\n          this.remove(prev);\n          if (!this.nested) this.nested = {};\n          object.setOptions(prev.options, true);\n        } else throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n      }\n    }\n    this.nested[object.name] = object;\n    if (!(this instanceof Type || this instanceof Service || this instanceof Enum || this instanceof Field)) {\n      // This is a package or a root namespace.\n      if (!object._edition) {\n        // Make sure that some edition is set if it hasn't already been specified.\n        object._edition = object._defaultEdition;\n      }\n    }\n    this._needsRecursiveFeatureResolution = true;\n    this._needsRecursiveResolve = true;\n\n    // Also clear parent caches, since they need to recurse down.\n    var parent = this;\n    while (parent = parent.parent) {\n      parent._needsRecursiveFeatureResolution = true;\n      parent._needsRecursiveResolve = true;\n    }\n    object.onAdd(this);\n    return clearCache(this);\n  };\n\n  /**\n   * Removes a nested object from this namespace.\n   * @param {ReflectionObject} object Nested object to remove\n   * @returns {Namespace} `this`\n   * @throws {TypeError} If arguments are invalid\n   * @throws {Error} If `object` is not a member of this namespace\n   */\n  Namespace.prototype.remove = function remove(object) {\n    if (!(object instanceof ReflectionObject)) throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this) throw Error(object + \" is not a member of \" + this);\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length) this.nested = undefined;\n    object.onRemove(this);\n    return clearCache(this);\n  };\n\n  /**\n   * Defines additial namespaces within this one if not yet existing.\n   * @param {string|string[]} path Path to create\n   * @param {*} [json] Nested types to create from JSON\n   * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n   */\n  Namespace.prototype.define = function define(path, json) {\n    if (util.isString(path)) path = path.split(\".\");else if (!Array.isArray(path)) throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\") throw Error(\"path must be relative\");\n    var ptr = this;\n    while (path.length > 0) {\n      var part = path.shift();\n      if (ptr.nested && ptr.nested[part]) {\n        ptr = ptr.nested[part];\n        if (!(ptr instanceof Namespace)) throw Error(\"path conflicts with non-namespace objects\");\n      } else ptr.add(ptr = new Namespace(part));\n    }\n    if (json) ptr.addJSON(json);\n    return ptr;\n  };\n\n  /**\n   * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n   * @returns {Namespace} `this`\n   */\n  Namespace.prototype.resolveAll = function resolveAll() {\n    if (!this._needsRecursiveResolve) return this;\n    this._resolveFeaturesRecursive(this._edition);\n    var nested = this.nestedArray,\n      i = 0;\n    this.resolve();\n    while (i < nested.length) if (nested[i] instanceof Namespace) nested[i++].resolveAll();else nested[i++].resolve();\n    this._needsRecursiveResolve = false;\n    return this;\n  };\n\n  /**\n   * @override\n   */\n  Namespace.prototype._resolveFeaturesRecursive = function _resolveFeaturesRecursive(edition) {\n    if (!this._needsRecursiveFeatureResolution) return this;\n    this._needsRecursiveFeatureResolution = false;\n    edition = this._edition || edition;\n    ReflectionObject.prototype._resolveFeaturesRecursive.call(this, edition);\n    this.nestedArray.forEach(nested => {\n      nested._resolveFeaturesRecursive(edition);\n    });\n    return this;\n  };\n\n  /**\n   * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n   * @param {string|string[]} path Path to look up\n   * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n   * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n   * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n   */\n  Namespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n      parentAlreadyChecked = filterTypes;\n      filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes)) filterTypes = [filterTypes];\n    if (util.isString(path) && path.length) {\n      if (path === \".\") return this.root;\n      path = path.split(\".\");\n    } else if (!path.length) return this;\n    var flatPath = path.join(\".\");\n\n    // Start at root if path is absolute\n    if (path[0] === \"\") return this.root.lookup(path.slice(1), filterTypes);\n\n    // Early bailout for objects with matching absolute paths\n    var found = this.root._fullyQualifiedObjects && this.root._fullyQualifiedObjects[\".\" + flatPath];\n    if (found && (!filterTypes || filterTypes.indexOf(found.constructor) > -1)) {\n      return found;\n    }\n\n    // Do a regular lookup at this namespace and below\n    found = this._lookupImpl(path, flatPath);\n    if (found && (!filterTypes || filterTypes.indexOf(found.constructor) > -1)) {\n      return found;\n    }\n    if (parentAlreadyChecked) return null;\n\n    // If there hasn't been a match, walk up the tree and look more broadly\n    var current = this;\n    while (current.parent) {\n      found = current.parent._lookupImpl(path, flatPath);\n      if (found && (!filterTypes || filterTypes.indexOf(found.constructor) > -1)) {\n        return found;\n      }\n      current = current.parent;\n    }\n    return null;\n  };\n\n  /**\n   * Internal helper for lookup that handles searching just at this namespace and below along with caching.\n   * @param {string[]} path Path to look up\n   * @param {string} flatPath Flattened version of the path to use as a cache key\n   * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n   * @private\n   */\n  Namespace.prototype._lookupImpl = function lookup(path, flatPath) {\n    if (Object.prototype.hasOwnProperty.call(this._lookupCache, flatPath)) {\n      return this._lookupCache[flatPath];\n    }\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    var exact = null;\n    if (found) {\n      if (path.length === 1) {\n        exact = found;\n      } else if (found instanceof Namespace) {\n        path = path.slice(1);\n        exact = found._lookupImpl(path, path.join(\".\"));\n      }\n\n      // Otherwise try each nested namespace\n    } else {\n      for (var i = 0; i < this.nestedArray.length; ++i) if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i]._lookupImpl(path, flatPath))) exact = found;\n    }\n\n    // Set this even when null, so that when we walk up the tree we can quickly bail on repeated checks back down.\n    this._lookupCache[flatPath] = exact;\n    return exact;\n  };\n\n  /**\n   * Looks up the reflection object at the specified path, relative to this namespace.\n   * @name NamespaceBase#lookup\n   * @function\n   * @param {string|string[]} path Path to look up\n   * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n   * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n   * @variation 2\n   */\n  // lookup(path: string, [parentAlreadyChecked: boolean])\n\n  /**\n   * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n   * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n   * @param {string|string[]} path Path to look up\n   * @returns {Type} Looked up type\n   * @throws {Error} If `path` does not point to a type\n   */\n  Namespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [Type]);\n    if (!found) throw Error(\"no such type: \" + path);\n    return found;\n  };\n\n  /**\n   * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n   * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n   * @param {string|string[]} path Path to look up\n   * @returns {Enum} Looked up enum\n   * @throws {Error} If `path` does not point to an enum\n   */\n  Namespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [Enum]);\n    if (!found) throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n  };\n\n  /**\n   * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n   * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n   * @param {string|string[]} path Path to look up\n   * @returns {Type} Looked up type or enum\n   * @throws {Error} If `path` does not point to a type or enum\n   */\n  Namespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [Type, Enum]);\n    if (!found) throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n  };\n\n  /**\n   * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n   * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n   * @param {string|string[]} path Path to look up\n   * @returns {Service} Looked up service\n   * @throws {Error} If `path` does not point to a service\n   */\n  Namespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [Service]);\n    if (!found) throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n  };\n\n  // Sets up cyclic dependencies (called in index-light)\n  Namespace._configure = function (Type_, Service_, Enum_) {\n    Type = Type_;\n    Service = Service_;\n    Enum = Enum_;\n  };\n});","lineCount":476,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"module"],[4,8,2,6],[4,9,2,7,"exports"],[4,16,2,14],[4,19,2,17,"Namespace"],[4,28,2,26],[6,2,4,0],[7,2,5,0],[7,6,5,4,"ReflectionObject"],[7,22,5,20],[7,25,5,23,"require"],[7,32,5,30],[7,33,5,30,"_dependencyMap"],[7,47,5,30],[7,62,5,41],[7,63,5,42],[8,2,6,0],[8,3,6,1],[8,4,6,2,"Namespace"],[8,13,6,11],[8,14,6,12,"prototype"],[8,23,6,21],[8,26,6,24,"Object"],[8,32,6,30],[8,33,6,31,"create"],[8,39,6,37],[8,40,6,38,"ReflectionObject"],[8,56,6,54],[8,57,6,55,"prototype"],[8,66,6,64],[8,67,6,65],[8,69,6,67,"constructor"],[8,80,6,78],[8,83,6,81,"Namespace"],[8,92,6,90],[8,94,6,92,"className"],[8,103,6,101],[8,106,6,104],[8,117,6,115],[9,2,8,0],[9,6,8,4,"Field"],[9,11,8,9],[9,14,8,15,"require"],[9,21,8,22],[9,22,8,22,"_dependencyMap"],[9,36,8,22],[9,50,8,32],[9,51,8,33],[10,4,9,4,"util"],[10,8,9,8],[10,11,9,15,"require"],[10,18,9,22],[10,19,9,22,"_dependencyMap"],[10,33,9,22],[10,46,9,31],[10,47,9,32],[11,4,10,4,"OneOf"],[11,9,10,9],[11,12,10,15,"require"],[11,19,10,22],[11,20,10,22,"_dependencyMap"],[11,34,10,22],[11,48,10,32],[11,49,10,33],[12,2,12,0],[12,6,12,4,"Type"],[12,10,12,8],[13,4,12,13],[14,4,13,4,"Service"],[14,11,13,11],[14,13,14,4,"Enum"],[14,17,14,8],[16,2,16,0],[17,0,17,0],[18,0,18,0],[19,0,19,0],[20,0,20,0],[21,0,21,0],[22,0,22,0],[23,0,23,0],[24,0,24,0],[26,2,26,0],[27,0,27,0],[28,0,28,0],[29,0,29,0],[30,0,30,0],[31,0,31,0],[32,0,32,0],[33,0,33,0],[34,0,34,0],[35,2,35,0,"Namespace"],[35,11,35,9],[35,12,35,10,"fromJSON"],[35,20,35,18],[35,23,35,21],[35,32,35,30,"fromJSON"],[35,40,35,38,"fromJSON"],[35,41,35,39,"name"],[35,45,35,43],[35,47,35,45,"json"],[35,51,35,49],[35,53,35,51],[36,4,36,4],[36,11,36,11],[36,15,36,15,"Namespace"],[36,24,36,24],[36,25,36,25,"name"],[36,29,36,29],[36,31,36,31,"json"],[36,35,36,35],[36,36,36,36,"options"],[36,43,36,43],[36,44,36,44],[36,45,36,45,"addJSON"],[36,52,36,52],[36,53,36,53,"json"],[36,57,36,57],[36,58,36,58,"nested"],[36,64,36,64],[36,65,36,65],[37,2,37,0],[37,3,37,1],[39,2,39,0],[40,0,40,0],[41,0,41,0],[42,0,42,0],[43,0,43,0],[44,0,44,0],[45,0,45,0],[46,2,46,0],[46,11,46,9,"arrayToJSON"],[46,22,46,20,"arrayToJSON"],[46,23,46,21,"array"],[46,28,46,26],[46,30,46,28,"toJSONOptions"],[46,43,46,41],[46,45,46,43],[47,4,47,4],[47,8,47,8],[47,10,47,10,"array"],[47,15,47,15],[47,19,47,19,"array"],[47,24,47,24],[47,25,47,25,"length"],[47,31,47,31],[47,32,47,32],[47,34,48,8],[47,41,48,15,"undefined"],[47,50,48,24],[48,4,49,4],[48,8,49,8,"obj"],[48,11,49,11],[48,14,49,14],[48,15,49,15],[48,16,49,16],[49,4,50,4],[49,9,50,9],[49,13,50,13,"i"],[49,14,50,14],[49,17,50,17],[49,18,50,18],[49,20,50,20,"i"],[49,21,50,21],[49,24,50,24,"array"],[49,29,50,29],[49,30,50,30,"length"],[49,36,50,36],[49,38,50,38],[49,40,50,40,"i"],[49,41,50,41],[49,43,51,8,"obj"],[49,46,51,11],[49,47,51,12,"array"],[49,52,51,17],[49,53,51,18,"i"],[49,54,51,19],[49,55,51,20],[49,56,51,21,"name"],[49,60,51,25],[49,61,51,26],[49,64,51,29,"array"],[49,69,51,34],[49,70,51,35,"i"],[49,71,51,36],[49,72,51,37],[49,73,51,38,"toJSON"],[49,79,51,44],[49,80,51,45,"toJSONOptions"],[49,93,51,58],[49,94,51,59],[50,4,52,4],[50,11,52,11,"obj"],[50,14,52,14],[51,2,53,0],[52,2,55,0,"Namespace"],[52,11,55,9],[52,12,55,10,"arrayToJSON"],[52,23,55,21],[52,26,55,24,"arrayToJSON"],[52,37,55,35],[54,2,57,0],[55,0,58,0],[56,0,59,0],[57,0,60,0],[58,0,61,0],[59,0,62,0],[60,2,63,0,"Namespace"],[60,11,63,9],[60,12,63,10,"isReservedId"],[60,24,63,22],[60,27,63,25],[60,36,63,34,"isReservedId"],[60,48,63,46,"isReservedId"],[60,49,63,47,"reserved"],[60,57,63,55],[60,59,63,57,"id"],[60,61,63,59],[60,63,63,61],[61,4,64,4],[61,8,64,8,"reserved"],[61,16,64,16],[61,18,65,8],[61,23,65,13],[61,27,65,17,"i"],[61,28,65,18],[61,31,65,21],[61,32,65,22],[61,34,65,24,"i"],[61,35,65,25],[61,38,65,28,"reserved"],[61,46,65,36],[61,47,65,37,"length"],[61,53,65,43],[61,55,65,45],[61,57,65,47,"i"],[61,58,65,48],[61,60,66,12],[61,64,66,16],[61,71,66,23,"reserved"],[61,79,66,31],[61,80,66,32,"i"],[61,81,66,33],[61,82,66,34],[61,87,66,39],[61,95,66,47],[61,99,66,51,"reserved"],[61,107,66,59],[61,108,66,60,"i"],[61,109,66,61],[61,110,66,62],[61,111,66,63],[61,112,66,64],[61,113,66,65],[61,117,66,69,"id"],[61,119,66,71],[61,123,66,75,"reserved"],[61,131,66,83],[61,132,66,84,"i"],[61,133,66,85],[61,134,66,86],[61,135,66,87],[61,136,66,88],[61,137,66,89],[61,140,66,92,"id"],[61,142,66,94],[61,144,67,16],[61,151,67,23],[61,155,67,27],[62,4,68,4],[62,11,68,11],[62,16,68,16],[63,2,69,0],[63,3,69,1],[65,2,71,0],[66,0,72,0],[67,0,73,0],[68,0,74,0],[69,0,75,0],[70,0,76,0],[71,2,77,0,"Namespace"],[71,11,77,9],[71,12,77,10,"isReservedName"],[71,26,77,24],[71,29,77,27],[71,38,77,36,"isReservedName"],[71,52,77,50,"isReservedName"],[71,53,77,51,"reserved"],[71,61,77,59],[71,63,77,61,"name"],[71,67,77,65],[71,69,77,67],[72,4,78,4],[72,8,78,8,"reserved"],[72,16,78,16],[72,18,79,8],[72,23,79,13],[72,27,79,17,"i"],[72,28,79,18],[72,31,79,21],[72,32,79,22],[72,34,79,24,"i"],[72,35,79,25],[72,38,79,28,"reserved"],[72,46,79,36],[72,47,79,37,"length"],[72,53,79,43],[72,55,79,45],[72,57,79,47,"i"],[72,58,79,48],[72,60,80,12],[72,64,80,16,"reserved"],[72,72,80,24],[72,73,80,25,"i"],[72,74,80,26],[72,75,80,27],[72,80,80,32,"name"],[72,84,80,36],[72,86,81,16],[72,93,81,23],[72,97,81,27],[73,4,82,4],[73,11,82,11],[73,16,82,16],[74,2,83,0],[74,3,83,1],[76,2,85,0],[77,0,86,0],[78,0,87,0],[79,0,88,0],[80,0,89,0],[81,0,90,0],[82,0,91,0],[83,0,92,0],[84,0,93,0],[85,0,94,0],[86,0,95,0],[87,2,96,0],[87,11,96,9,"Namespace"],[87,20,96,18,"Namespace"],[87,21,96,19,"name"],[87,25,96,23],[87,27,96,25,"options"],[87,34,96,32],[87,36,96,34],[88,4,97,4,"ReflectionObject"],[88,20,97,20],[88,21,97,21,"call"],[88,25,97,25],[88,26,97,26],[88,30,97,30],[88,32,97,32,"name"],[88,36,97,36],[88,38,97,38,"options"],[88,45,97,45],[88,46,97,46],[90,4,99,4],[91,0,100,0],[92,0,101,0],[93,0,102,0],[94,4,103,4],[94,8,103,8],[94,9,103,9,"nested"],[94,15,103,15],[94,18,103,18,"undefined"],[94,27,103,27],[94,28,103,28],[94,29,103,29],[96,4,105,4],[97,0,106,0],[98,0,107,0],[99,0,108,0],[100,0,109,0],[101,4,110,4],[101,8,110,8],[101,9,110,9,"_nestedArray"],[101,21,110,21],[101,24,110,24],[101,28,110,28],[103,4,112,4],[104,0,113,0],[105,0,114,0],[106,0,115,0],[107,0,116,0],[108,0,117,0],[109,0,118,0],[110,4,119,4],[110,8,119,8],[110,9,119,9,"_lookupCache"],[110,21,119,21],[110,24,119,24],[110,25,119,25],[110,26,119,26],[112,4,121,4],[113,0,122,0],[114,0,123,0],[115,0,124,0],[116,0,125,0],[117,4,126,4],[117,8,126,8],[117,9,126,9,"_needsRecursiveFeatureResolution"],[117,41,126,41],[117,44,126,44],[117,48,126,48],[119,4,128,4],[120,0,129,0],[121,0,130,0],[122,0,131,0],[123,0,132,0],[124,4,133,4],[124,8,133,8],[124,9,133,9,"_needsRecursiveResolve"],[124,31,133,31],[124,34,133,34],[124,38,133,38],[125,2,134,0],[126,2,136,0],[126,11,136,9,"clearCache"],[126,21,136,19,"clearCache"],[126,22,136,20,"namespace"],[126,31,136,29],[126,33,136,31],[127,4,137,4,"namespace"],[127,13,137,13],[127,14,137,14,"_nestedArray"],[127,26,137,26],[127,29,137,29],[127,33,137,33],[128,4,138,4,"namespace"],[128,13,138,13],[128,14,138,14,"_lookupCache"],[128,26,138,26],[128,29,138,29],[128,30,138,30],[128,31,138,31],[130,4,140,4],[131,4,141,4],[131,8,141,8,"parent"],[131,14,141,14],[131,17,141,17,"namespace"],[131,26,141,26],[132,4,142,4],[132,11,142,10,"parent"],[132,17,142,16],[132,20,142,19,"parent"],[132,26,142,25],[132,27,142,26,"parent"],[132,33,142,32],[132,35,142,34],[133,6,143,8,"parent"],[133,12,143,14],[133,13,143,15,"_lookupCache"],[133,25,143,27],[133,28,143,30],[133,29,143,31],[133,30,143,32],[134,4,144,4],[135,4,145,4],[135,11,145,11,"namespace"],[135,20,145,20],[136,2,146,0],[138,2,148,0],[139,0,149,0],[140,0,150,0],[141,0,151,0],[142,0,152,0],[143,0,153,0],[144,2,154,0,"Object"],[144,8,154,6],[144,9,154,7,"defineProperty"],[144,23,154,21],[144,24,154,22,"Namespace"],[144,33,154,31],[144,34,154,32,"prototype"],[144,43,154,41],[144,45,154,43],[144,58,154,56],[144,60,154,58],[145,4,155,4,"get"],[145,7,155,7],[145,9,155,9],[145,18,155,9,"get"],[145,19,155,9],[145,21,155,20],[146,6,156,8],[146,13,156,15],[146,17,156,19],[146,18,156,20,"_nestedArray"],[146,30,156,32],[146,35,156,37],[146,39,156,41],[146,40,156,42,"_nestedArray"],[146,52,156,54],[146,55,156,57,"util"],[146,59,156,61],[146,60,156,62,"toArray"],[146,67,156,69],[146,68,156,70],[146,72,156,74],[146,73,156,75,"nested"],[146,79,156,81],[146,80,156,82],[146,81,156,83],[147,4,157,4],[148,2,158,0],[148,3,158,1],[148,4,158,2],[150,2,160,0],[151,0,161,0],[152,0,162,0],[153,0,163,0],[154,0,164,0],[155,0,165,0],[157,2,167,0],[158,0,168,0],[159,0,169,0],[160,0,170,0],[161,0,171,0],[163,2,173,0],[164,0,174,0],[165,0,175,0],[166,0,176,0],[167,0,177,0],[169,2,179,0],[170,0,180,0],[171,0,181,0],[172,0,182,0],[173,0,183,0],[174,2,184,0,"Namespace"],[174,11,184,9],[174,12,184,10,"prototype"],[174,21,184,19],[174,22,184,20,"toJSON"],[174,28,184,26],[174,31,184,29],[174,40,184,38,"toJSON"],[174,46,184,44,"toJSON"],[174,47,184,45,"toJSONOptions"],[174,60,184,58],[174,62,184,60],[175,4,185,4],[175,11,185,11,"util"],[175,15,185,15],[175,16,185,16,"toObject"],[175,24,185,24],[175,25,185,25],[175,26,186,8],[175,35,186,17],[175,37,186,20],[175,41,186,24],[175,42,186,25,"options"],[175,49,186,32],[175,51,187,8],[175,59,187,16],[175,61,187,20,"arrayToJSON"],[175,72,187,31],[175,73,187,32],[175,77,187,36],[175,78,187,37,"nestedArray"],[175,89,187,48],[175,91,187,50,"toJSONOptions"],[175,104,187,63],[175,105,187,64],[175,106,188,5],[175,107,188,6],[176,2,189,0],[176,3,189,1],[178,2,191,0],[179,0,192,0],[180,0,193,0],[181,0,194,0],[182,0,195,0],[183,2,196,0,"Namespace"],[183,11,196,9],[183,12,196,10,"prototype"],[183,21,196,19],[183,22,196,20,"addJSON"],[183,29,196,27],[183,32,196,30],[183,41,196,39,"addJSON"],[183,48,196,46,"addJSON"],[183,49,196,47,"nestedJson"],[183,59,196,57],[183,61,196,59],[184,4,197,4],[184,8,197,8,"ns"],[184,10,197,10],[184,13,197,13],[184,17,197,17],[185,4,198,4],[186,4,199,4],[186,8,199,8,"nestedJson"],[186,18,199,18],[186,20,199,20],[187,6,200,8],[187,11,200,13],[187,15,200,17,"names"],[187,20,200,22],[187,23,200,25,"Object"],[187,29,200,31],[187,30,200,32,"keys"],[187,34,200,36],[187,35,200,37,"nestedJson"],[187,45,200,47],[187,46,200,48],[187,48,200,50,"i"],[187,49,200,51],[187,52,200,54],[187,53,200,55],[187,55,200,57,"nested"],[187,61,200,63],[187,63,200,65,"i"],[187,64,200,66],[187,67,200,69,"names"],[187,72,200,74],[187,73,200,75,"length"],[187,79,200,81],[187,81,200,83],[187,83,200,85,"i"],[187,84,200,86],[187,86,200,88],[188,8,201,12,"nested"],[188,14,201,18],[188,17,201,21,"nestedJson"],[188,27,201,31],[188,28,201,32,"names"],[188,33,201,37],[188,34,201,38,"i"],[188,35,201,39],[188,36,201,40],[188,37,201,41],[189,8,202,12,"ns"],[189,10,202,14],[189,11,202,15,"add"],[189,14,202,18],[190,8,202,20],[191,8,203,16],[191,9,203,18,"nested"],[191,15,203,24],[191,16,203,25,"fields"],[191,22,203,31],[191,27,203,36,"undefined"],[191,36,203,45],[191,39,204,18,"Type"],[191,43,204,22],[191,44,204,23,"fromJSON"],[191,52,204,31],[191,55,205,18,"nested"],[191,61,205,24],[191,62,205,25,"values"],[191,68,205,31],[191,73,205,36,"undefined"],[191,82,205,45],[191,85,206,18,"Enum"],[191,89,206,22],[191,90,206,23,"fromJSON"],[191,98,206,31],[191,101,207,18,"nested"],[191,107,207,24],[191,108,207,25,"methods"],[191,115,207,32],[191,120,207,37,"undefined"],[191,129,207,46],[191,132,208,18,"Service"],[191,139,208,25],[191,140,208,26,"fromJSON"],[191,148,208,34],[191,151,209,18,"nested"],[191,157,209,24],[191,158,209,25,"id"],[191,160,209,27],[191,165,209,32,"undefined"],[191,174,209,41],[191,177,210,18,"Field"],[191,182,210,23],[191,183,210,24,"fromJSON"],[191,191,210,32],[191,194,211,18,"Namespace"],[191,203,211,27],[191,204,211,28,"fromJSON"],[191,212,211,36],[191,214,211,39,"names"],[191,219,211,44],[191,220,211,45,"i"],[191,221,211,46],[191,222,211,47],[191,224,211,49,"nested"],[191,230,211,55],[191,231,212,12],[191,232,212,13],[192,6,213,8],[193,4,214,4],[194,4,215,4],[194,11,215,11],[194,15,215,15],[195,2,216,0],[195,3,216,1],[197,2,218,0],[198,0,219,0],[199,0,220,0],[200,0,221,0],[201,0,222,0],[202,2,223,0,"Namespace"],[202,11,223,9],[202,12,223,10,"prototype"],[202,21,223,19],[202,22,223,20,"get"],[202,25,223,23],[202,28,223,26],[202,37,223,35,"get"],[202,40,223,38,"get"],[202,41,223,39,"name"],[202,45,223,43],[202,47,223,45],[203,4,224,4],[203,11,224,11],[203,15,224,15],[203,16,224,16,"nested"],[203,22,224,22],[203,26,224,26],[203,30,224,30],[203,31,224,31,"nested"],[203,37,224,37],[203,38,224,38,"name"],[203,42,224,42],[203,43,224,43],[203,47,225,11],[203,51,225,15],[204,2,226,0],[204,3,226,1],[206,2,228,0],[207,0,229,0],[208,0,230,0],[209,0,231,0],[210,0,232,0],[211,0,233,0],[212,0,234,0],[213,2,235,0,"Namespace"],[213,11,235,9],[213,12,235,10,"prototype"],[213,21,235,19],[213,22,235,20,"getEnum"],[213,29,235,27],[213,32,235,30],[213,41,235,39,"getEnum"],[213,48,235,46,"getEnum"],[213,49,235,47,"name"],[213,53,235,51],[213,55,235,53],[214,4,236,4],[214,8,236,8],[214,12,236,12],[214,13,236,13,"nested"],[214,19,236,19],[214,23,236,23],[214,27,236,27],[214,28,236,28,"nested"],[214,34,236,34],[214,35,236,35,"name"],[214,39,236,39],[214,40,236,40],[214,52,236,52,"Enum"],[214,56,236,56],[214,58,237,8],[214,65,237,15],[214,69,237,19],[214,70,237,20,"nested"],[214,76,237,26],[214,77,237,27,"name"],[214,81,237,31],[214,82,237,32],[214,83,237,33,"values"],[214,89,237,39],[215,4,238,4],[215,10,238,10,"Error"],[215,15,238,15],[215,16,238,16],[215,32,238,32],[215,35,238,35,"name"],[215,39,238,39],[215,40,238,40],[216,2,239,0],[216,3,239,1],[218,2,241,0],[219,0,242,0],[220,0,243,0],[221,0,244,0],[222,0,245,0],[223,0,246,0],[224,0,247,0],[225,2,248,0,"Namespace"],[225,11,248,9],[225,12,248,10,"prototype"],[225,21,248,19],[225,22,248,20,"add"],[225,25,248,23],[225,28,248,26],[225,37,248,35,"add"],[225,40,248,38,"add"],[225,41,248,39,"object"],[225,47,248,45],[225,49,248,47],[226,4,250,4],[226,8,250,8],[226,10,250,10,"object"],[226,16,250,16],[226,28,250,28,"Field"],[226,33,250,33],[226,37,250,37,"object"],[226,43,250,43],[226,44,250,44,"extend"],[226,50,250,50],[226,55,250,55,"undefined"],[226,64,250,64],[226,68,250,68,"object"],[226,74,250,74],[226,86,250,86,"Type"],[226,90,250,90],[226,94,250,95,"object"],[226,100,250,101],[226,112,250,113,"OneOf"],[226,117,250,118],[226,121,250,122,"object"],[226,127,250,128],[226,139,250,140,"Enum"],[226,143,250,144],[226,147,250,148,"object"],[226,153,250,154],[226,165,250,166,"Service"],[226,172,250,173],[226,176,250,177,"object"],[226,182,250,183],[226,194,250,195,"Namespace"],[226,203,250,204],[226,204,250,205],[226,206,251,8],[226,212,251,14,"TypeError"],[226,221,251,23],[226,222,251,24],[226,260,251,62],[226,261,251,63],[227,4,253,4],[227,8,253,8],[227,9,253,9],[227,13,253,13],[227,14,253,14,"nested"],[227,20,253,20],[227,22,254,8],[227,26,254,12],[227,27,254,13,"nested"],[227,33,254,19],[227,36,254,22],[227,37,254,23],[227,38,254,24],[227,39,254,25],[227,44,255,9],[228,6,256,8],[228,10,256,12,"prev"],[228,14,256,16],[228,17,256,19],[228,21,256,23],[228,22,256,24,"get"],[228,25,256,27],[228,26,256,28,"object"],[228,32,256,34],[228,33,256,35,"name"],[228,37,256,39],[228,38,256,40],[229,6,257,8],[229,10,257,12,"prev"],[229,14,257,16],[229,16,257,18],[230,8,258,12],[230,12,258,16,"prev"],[230,16,258,20],[230,28,258,32,"Namespace"],[230,37,258,41],[230,41,258,45,"object"],[230,47,258,51],[230,59,258,63,"Namespace"],[230,68,258,72],[230,72,258,76],[230,74,258,78,"prev"],[230,78,258,82],[230,90,258,94,"Type"],[230,94,258,98],[230,98,258,102,"prev"],[230,102,258,106],[230,114,258,118,"Service"],[230,121,258,125],[230,122,258,126],[230,124,258,128],[231,10,259,16],[232,10,260,16],[232,14,260,20,"nested"],[232,20,260,26],[232,23,260,29,"prev"],[232,27,260,33],[232,28,260,34,"nestedArray"],[232,39,260,45],[233,10,261,16],[233,15,261,21],[233,19,261,25,"i"],[233,20,261,26],[233,23,261,29],[233,24,261,30],[233,26,261,32,"i"],[233,27,261,33],[233,30,261,36,"nested"],[233,36,261,42],[233,37,261,43,"length"],[233,43,261,49],[233,45,261,51],[233,47,261,53,"i"],[233,48,261,54],[233,50,262,20,"object"],[233,56,262,26],[233,57,262,27,"add"],[233,60,262,30],[233,61,262,31,"nested"],[233,67,262,37],[233,68,262,38,"i"],[233,69,262,39],[233,70,262,40],[233,71,262,41],[234,10,263,16],[234,14,263,20],[234,15,263,21,"remove"],[234,21,263,27],[234,22,263,28,"prev"],[234,26,263,32],[234,27,263,33],[235,10,264,16],[235,14,264,20],[235,15,264,21],[235,19,264,25],[235,20,264,26,"nested"],[235,26,264,32],[235,28,265,20],[235,32,265,24],[235,33,265,25,"nested"],[235,39,265,31],[235,42,265,34],[235,43,265,35],[235,44,265,36],[236,10,266,16,"object"],[236,16,266,22],[236,17,266,23,"setOptions"],[236,27,266,33],[236,28,266,34,"prev"],[236,32,266,38],[236,33,266,39,"options"],[236,40,266,46],[236,42,266,48],[236,46,266,52],[236,47,266,53],[237,8,268,12],[237,9,268,13],[237,15,269,16],[237,21,269,22,"Error"],[237,26,269,27],[237,27,269,28],[237,45,269,46],[237,48,269,49,"object"],[237,54,269,55],[237,55,269,56,"name"],[237,59,269,60],[237,62,269,63],[237,69,269,70],[237,72,269,73],[237,76,269,77],[237,77,269,78],[238,6,270,8],[239,4,271,4],[240,4,272,4],[240,8,272,8],[240,9,272,9,"nested"],[240,15,272,15],[240,16,272,16,"object"],[240,22,272,22],[240,23,272,23,"name"],[240,27,272,27],[240,28,272,28],[240,31,272,31,"object"],[240,37,272,37],[241,4,274,4],[241,8,274,8],[241,10,274,10],[241,14,274,14],[241,26,274,26,"Type"],[241,30,274,30],[241,34,274,34],[241,38,274,38],[241,50,274,50,"Service"],[241,57,274,57],[241,61,274,61],[241,65,274,65],[241,77,274,77,"Enum"],[241,81,274,81],[241,85,274,85],[241,89,274,89],[241,101,274,101,"Field"],[241,106,274,106],[241,107,274,107],[241,109,274,109],[242,6,275,8],[243,6,276,8],[243,10,276,12],[243,11,276,13,"object"],[243,17,276,19],[243,18,276,20,"_edition"],[243,26,276,28],[243,28,276,30],[244,8,277,12],[245,8,278,12,"object"],[245,14,278,18],[245,15,278,19,"_edition"],[245,23,278,27],[245,26,278,30,"object"],[245,32,278,36],[245,33,278,37,"_defaultEdition"],[245,48,278,52],[246,6,279,8],[247,4,280,4],[248,4,282,4],[248,8,282,8],[248,9,282,9,"_needsRecursiveFeatureResolution"],[248,41,282,41],[248,44,282,44],[248,48,282,48],[249,4,283,4],[249,8,283,8],[249,9,283,9,"_needsRecursiveResolve"],[249,31,283,31],[249,34,283,34],[249,38,283,38],[251,4,285,4],[252,4,286,4],[252,8,286,8,"parent"],[252,14,286,14],[252,17,286,17],[252,21,286,21],[253,4,287,4],[253,11,287,10,"parent"],[253,17,287,16],[253,20,287,19,"parent"],[253,26,287,25],[253,27,287,26,"parent"],[253,33,287,32],[253,35,287,34],[254,6,288,8,"parent"],[254,12,288,14],[254,13,288,15,"_needsRecursiveFeatureResolution"],[254,45,288,47],[254,48,288,50],[254,52,288,54],[255,6,289,8,"parent"],[255,12,289,14],[255,13,289,15,"_needsRecursiveResolve"],[255,35,289,37],[255,38,289,40],[255,42,289,44],[256,4,290,4],[257,4,292,4,"object"],[257,10,292,10],[257,11,292,11,"onAdd"],[257,16,292,16],[257,17,292,17],[257,21,292,21],[257,22,292,22],[258,4,293,4],[258,11,293,11,"clearCache"],[258,21,293,21],[258,22,293,22],[258,26,293,26],[258,27,293,27],[259,2,294,0],[259,3,294,1],[261,2,296,0],[262,0,297,0],[263,0,298,0],[264,0,299,0],[265,0,300,0],[266,0,301,0],[267,0,302,0],[268,2,303,0,"Namespace"],[268,11,303,9],[268,12,303,10,"prototype"],[268,21,303,19],[268,22,303,20,"remove"],[268,28,303,26],[268,31,303,29],[268,40,303,38,"remove"],[268,46,303,44,"remove"],[268,47,303,45,"object"],[268,53,303,51],[268,55,303,53],[269,4,305,4],[269,8,305,8],[269,10,305,10,"object"],[269,16,305,16],[269,28,305,28,"ReflectionObject"],[269,44,305,44],[269,45,305,45],[269,47,306,8],[269,53,306,14,"TypeError"],[269,62,306,23],[269,63,306,24],[269,98,306,59],[269,99,306,60],[270,4,307,4],[270,8,307,8,"object"],[270,14,307,14],[270,15,307,15,"parent"],[270,21,307,21],[270,26,307,26],[270,30,307,30],[270,32,308,8],[270,38,308,14,"Error"],[270,43,308,19],[270,44,308,20,"object"],[270,50,308,26],[270,53,308,29],[270,75,308,51],[270,78,308,54],[270,82,308,58],[270,83,308,59],[271,4,310,4],[271,11,310,11],[271,15,310,15],[271,16,310,16,"nested"],[271,22,310,22],[271,23,310,23,"object"],[271,29,310,29],[271,30,310,30,"name"],[271,34,310,34],[271,35,310,35],[272,4,311,4],[272,8,311,8],[272,9,311,9,"Object"],[272,15,311,15],[272,16,311,16,"keys"],[272,20,311,20],[272,21,311,21],[272,25,311,25],[272,26,311,26,"nested"],[272,32,311,32],[272,33,311,33],[272,34,311,34,"length"],[272,40,311,40],[272,42,312,8],[272,46,312,12],[272,47,312,13,"nested"],[272,53,312,19],[272,56,312,22,"undefined"],[272,65,312,31],[273,4,314,4,"object"],[273,10,314,10],[273,11,314,11,"onRemove"],[273,19,314,19],[273,20,314,20],[273,24,314,24],[273,25,314,25],[274,4,315,4],[274,11,315,11,"clearCache"],[274,21,315,21],[274,22,315,22],[274,26,315,26],[274,27,315,27],[275,2,316,0],[275,3,316,1],[277,2,318,0],[278,0,319,0],[279,0,320,0],[280,0,321,0],[281,0,322,0],[282,0,323,0],[283,2,324,0,"Namespace"],[283,11,324,9],[283,12,324,10,"prototype"],[283,21,324,19],[283,22,324,20,"define"],[283,28,324,26],[283,31,324,29],[283,40,324,38,"define"],[283,46,324,44,"define"],[283,47,324,45,"path"],[283,51,324,49],[283,53,324,51,"json"],[283,57,324,55],[283,59,324,57],[284,4,326,4],[284,8,326,8,"util"],[284,12,326,12],[284,13,326,13,"isString"],[284,21,326,21],[284,22,326,22,"path"],[284,26,326,26],[284,27,326,27],[284,29,327,8,"path"],[284,33,327,12],[284,36,327,15,"path"],[284,40,327,19],[284,41,327,20,"split"],[284,46,327,25],[284,47,327,26],[284,50,327,29],[284,51,327,30],[284,52,327,31],[284,57,328,9],[284,61,328,13],[284,62,328,14,"Array"],[284,67,328,19],[284,68,328,20,"isArray"],[284,75,328,27],[284,76,328,28,"path"],[284,80,328,32],[284,81,328,33],[284,83,329,8],[284,89,329,14,"TypeError"],[284,98,329,23],[284,99,329,24],[284,113,329,38],[284,114,329,39],[285,4,330,4],[285,8,330,8,"path"],[285,12,330,12],[285,16,330,16,"path"],[285,20,330,20],[285,21,330,21,"length"],[285,27,330,27],[285,31,330,31,"path"],[285,35,330,35],[285,36,330,36],[285,37,330,37],[285,38,330,38],[285,43,330,43],[285,45,330,45],[285,47,331,8],[285,53,331,14,"Error"],[285,58,331,19],[285,59,331,20],[285,82,331,43],[285,83,331,44],[286,4,333,4],[286,8,333,8,"ptr"],[286,11,333,11],[286,14,333,14],[286,18,333,18],[287,4,334,4],[287,11,334,11,"path"],[287,15,334,15],[287,16,334,16,"length"],[287,22,334,22],[287,25,334,25],[287,26,334,26],[287,28,334,28],[288,6,335,8],[288,10,335,12,"part"],[288,14,335,16],[288,17,335,19,"path"],[288,21,335,23],[288,22,335,24,"shift"],[288,27,335,29],[288,28,335,30],[288,29,335,31],[289,6,336,8],[289,10,336,12,"ptr"],[289,13,336,15],[289,14,336,16,"nested"],[289,20,336,22],[289,24,336,26,"ptr"],[289,27,336,29],[289,28,336,30,"nested"],[289,34,336,36],[289,35,336,37,"part"],[289,39,336,41],[289,40,336,42],[289,42,336,44],[290,8,337,12,"ptr"],[290,11,337,15],[290,14,337,18,"ptr"],[290,17,337,21],[290,18,337,22,"nested"],[290,24,337,28],[290,25,337,29,"part"],[290,29,337,33],[290,30,337,34],[291,8,338,12],[291,12,338,16],[291,14,338,18,"ptr"],[291,17,338,21],[291,29,338,33,"Namespace"],[291,38,338,42],[291,39,338,43],[291,41,339,16],[291,47,339,22,"Error"],[291,52,339,27],[291,53,339,28],[291,96,339,71],[291,97,339,72],[292,6,340,8],[292,7,340,9],[292,13,341,12,"ptr"],[292,16,341,15],[292,17,341,16,"add"],[292,20,341,19],[292,21,341,20,"ptr"],[292,24,341,23],[292,27,341,26],[292,31,341,30,"Namespace"],[292,40,341,39],[292,41,341,40,"part"],[292,45,341,44],[292,46,341,45],[292,47,341,46],[293,4,342,4],[294,4,343,4],[294,8,343,8,"json"],[294,12,343,12],[294,14,344,8,"ptr"],[294,17,344,11],[294,18,344,12,"addJSON"],[294,25,344,19],[294,26,344,20,"json"],[294,30,344,24],[294,31,344,25],[295,4,345,4],[295,11,345,11,"ptr"],[295,14,345,14],[296,2,346,0],[296,3,346,1],[298,2,348,0],[299,0,349,0],[300,0,350,0],[301,0,351,0],[302,2,352,0,"Namespace"],[302,11,352,9],[302,12,352,10,"prototype"],[302,21,352,19],[302,22,352,20,"resolveAll"],[302,32,352,30],[302,35,352,33],[302,44,352,42,"resolveAll"],[302,54,352,52,"resolveAll"],[302,55,352,52],[302,57,352,55],[303,4,353,4],[303,8,353,8],[303,9,353,9],[303,13,353,13],[303,14,353,14,"_needsRecursiveResolve"],[303,36,353,36],[303,38,353,38],[303,45,353,45],[303,49,353,49],[304,4,355,4],[304,8,355,8],[304,9,355,9,"_resolveFeaturesRecursive"],[304,34,355,34],[304,35,355,35],[304,39,355,39],[304,40,355,40,"_edition"],[304,48,355,48],[304,49,355,49],[305,4,357,4],[305,8,357,8,"nested"],[305,14,357,14],[305,17,357,17],[305,21,357,21],[305,22,357,22,"nestedArray"],[305,33,357,33],[306,6,357,35,"i"],[306,7,357,36],[306,10,357,39],[306,11,357,40],[307,4,358,4],[307,8,358,8],[307,9,358,9,"resolve"],[307,16,358,16],[307,17,358,17],[307,18,358,18],[308,4,359,4],[308,11,359,11,"i"],[308,12,359,12],[308,15,359,15,"nested"],[308,21,359,21],[308,22,359,22,"length"],[308,28,359,28],[308,30,360,8],[308,34,360,12,"nested"],[308,40,360,18],[308,41,360,19,"i"],[308,42,360,20],[308,43,360,21],[308,55,360,33,"Namespace"],[308,64,360,42],[308,66,361,12,"nested"],[308,72,361,18],[308,73,361,19,"i"],[308,74,361,20],[308,76,361,22],[308,77,361,23],[308,78,361,24,"resolveAll"],[308,88,361,34],[308,89,361,35],[308,90,361,36],[308,91,361,37],[308,96,363,12,"nested"],[308,102,363,18],[308,103,363,19,"i"],[308,104,363,20],[308,106,363,22],[308,107,363,23],[308,108,363,24,"resolve"],[308,115,363,31],[308,116,363,32],[308,117,363,33],[309,4,364,4],[309,8,364,8],[309,9,364,9,"_needsRecursiveResolve"],[309,31,364,31],[309,34,364,34],[309,39,364,39],[310,4,365,4],[310,11,365,11],[310,15,365,15],[311,2,366,0],[311,3,366,1],[313,2,368,0],[314,0,369,0],[315,0,370,0],[316,2,371,0,"Namespace"],[316,11,371,9],[316,12,371,10,"prototype"],[316,21,371,19],[316,22,371,20,"_resolveFeaturesRecursive"],[316,47,371,45],[316,50,371,48],[316,59,371,57,"_resolveFeaturesRecursive"],[316,84,371,82,"_resolveFeaturesRecursive"],[316,85,371,83,"edition"],[316,92,371,90],[316,94,371,92],[317,4,372,4],[317,8,372,8],[317,9,372,9],[317,13,372,13],[317,14,372,14,"_needsRecursiveFeatureResolution"],[317,46,372,46],[317,48,372,48],[317,55,372,55],[317,59,372,59],[318,4,373,4],[318,8,373,8],[318,9,373,9,"_needsRecursiveFeatureResolution"],[318,41,373,41],[318,44,373,44],[318,49,373,49],[319,4,375,4,"edition"],[319,11,375,11],[319,14,375,14],[319,18,375,18],[319,19,375,19,"_edition"],[319,27,375,27],[319,31,375,31,"edition"],[319,38,375,38],[320,4,377,4,"ReflectionObject"],[320,20,377,20],[320,21,377,21,"prototype"],[320,30,377,30],[320,31,377,31,"_resolveFeaturesRecursive"],[320,56,377,56],[320,57,377,57,"call"],[320,61,377,61],[320,62,377,62],[320,66,377,66],[320,68,377,68,"edition"],[320,75,377,75],[320,76,377,76],[321,4,378,4],[321,8,378,8],[321,9,378,9,"nestedArray"],[321,20,378,20],[321,21,378,21,"forEach"],[321,28,378,28],[321,29,378,29,"nested"],[321,35,378,35],[321,39,378,39],[322,6,379,8,"nested"],[322,12,379,14],[322,13,379,15,"_resolveFeaturesRecursive"],[322,38,379,40],[322,39,379,41,"edition"],[322,46,379,48],[322,47,379,49],[323,4,380,4],[323,5,380,5],[323,6,380,6],[324,4,381,4],[324,11,381,11],[324,15,381,15],[325,2,382,0],[325,3,382,1],[327,2,384,0],[328,0,385,0],[329,0,386,0],[330,0,387,0],[331,0,388,0],[332,0,389,0],[333,0,390,0],[334,2,391,0,"Namespace"],[334,11,391,9],[334,12,391,10,"prototype"],[334,21,391,19],[334,22,391,20,"lookup"],[334,28,391,26],[334,31,391,29],[334,40,391,38,"lookup"],[334,46,391,44,"lookup"],[334,47,391,45,"path"],[334,51,391,49],[334,53,391,51,"filterTypes"],[334,64,391,62],[334,66,391,64,"parentAlreadyChecked"],[334,86,391,84],[334,88,391,86],[335,4,392,4],[336,4,393,4],[336,8,393,8],[336,15,393,15,"filterTypes"],[336,26,393,26],[336,31,393,31],[336,40,393,40],[336,42,393,42],[337,6,394,8,"parentAlreadyChecked"],[337,26,394,28],[337,29,394,31,"filterTypes"],[337,40,394,42],[338,6,395,8,"filterTypes"],[338,17,395,19],[338,20,395,22,"undefined"],[338,29,395,31],[339,4,396,4],[339,5,396,5],[339,11,396,11],[339,15,396,15,"filterTypes"],[339,26,396,26],[339,30,396,30],[339,31,396,31,"Array"],[339,36,396,36],[339,37,396,37,"isArray"],[339,44,396,44],[339,45,396,45,"filterTypes"],[339,56,396,56],[339,57,396,57],[339,59,397,8,"filterTypes"],[339,70,397,19],[339,73,397,22],[339,74,397,24,"filterTypes"],[339,85,397,35],[339,86,397,37],[340,4,399,4],[340,8,399,8,"util"],[340,12,399,12],[340,13,399,13,"isString"],[340,21,399,21],[340,22,399,22,"path"],[340,26,399,26],[340,27,399,27],[340,31,399,31,"path"],[340,35,399,35],[340,36,399,36,"length"],[340,42,399,42],[340,44,399,44],[341,6,400,8],[341,10,400,12,"path"],[341,14,400,16],[341,19,400,21],[341,22,400,24],[341,24,401,12],[341,31,401,19],[341,35,401,23],[341,36,401,24,"root"],[341,40,401,28],[342,6,402,8,"path"],[342,10,402,12],[342,13,402,15,"path"],[342,17,402,19],[342,18,402,20,"split"],[342,23,402,25],[342,24,402,26],[342,27,402,29],[342,28,402,30],[343,4,403,4],[343,5,403,5],[343,11,403,11],[343,15,403,15],[343,16,403,16,"path"],[343,20,403,20],[343,21,403,21,"length"],[343,27,403,27],[343,29,404,8],[343,36,404,15],[343,40,404,19],[344,4,406,4],[344,8,406,8,"flatPath"],[344,16,406,16],[344,19,406,19,"path"],[344,23,406,23],[344,24,406,24,"join"],[344,28,406,28],[344,29,406,29],[344,32,406,32],[344,33,406,33],[346,4,408,4],[347,4,409,4],[347,8,409,8,"path"],[347,12,409,12],[347,13,409,13],[347,14,409,14],[347,15,409,15],[347,20,409,20],[347,22,409,22],[347,24,410,8],[347,31,410,15],[347,35,410,19],[347,36,410,20,"root"],[347,40,410,24],[347,41,410,25,"lookup"],[347,47,410,31],[347,48,410,32,"path"],[347,52,410,36],[347,53,410,37,"slice"],[347,58,410,42],[347,59,410,43],[347,60,410,44],[347,61,410,45],[347,63,410,47,"filterTypes"],[347,74,410,58],[347,75,410,59],[349,4,412,4],[350,4,413,4],[350,8,413,8,"found"],[350,13,413,13],[350,16,413,16],[350,20,413,20],[350,21,413,21,"root"],[350,25,413,25],[350,26,413,26,"_fullyQualifiedObjects"],[350,48,413,48],[350,52,413,52],[350,56,413,56],[350,57,413,57,"root"],[350,61,413,61],[350,62,413,62,"_fullyQualifiedObjects"],[350,84,413,84],[350,85,413,85],[350,88,413,88],[350,91,413,91,"flatPath"],[350,99,413,99],[350,100,413,100],[351,4,414,4],[351,8,414,8,"found"],[351,13,414,13],[351,18,414,18],[351,19,414,19,"filterTypes"],[351,30,414,30],[351,34,414,34,"filterTypes"],[351,45,414,45],[351,46,414,46,"indexOf"],[351,53,414,53],[351,54,414,54,"found"],[351,59,414,59],[351,60,414,60,"constructor"],[351,71,414,71],[351,72,414,72],[351,75,414,75],[351,76,414,76],[351,77,414,77],[351,78,414,78],[351,80,414,80],[352,6,415,8],[352,13,415,15,"found"],[352,18,415,20],[353,4,416,4],[355,4,418,4],[356,4,419,4,"found"],[356,9,419,9],[356,12,419,12],[356,16,419,16],[356,17,419,17,"_lookupImpl"],[356,28,419,28],[356,29,419,29,"path"],[356,33,419,33],[356,35,419,35,"flatPath"],[356,43,419,43],[356,44,419,44],[357,4,420,4],[357,8,420,8,"found"],[357,13,420,13],[357,18,420,18],[357,19,420,19,"filterTypes"],[357,30,420,30],[357,34,420,34,"filterTypes"],[357,45,420,45],[357,46,420,46,"indexOf"],[357,53,420,53],[357,54,420,54,"found"],[357,59,420,59],[357,60,420,60,"constructor"],[357,71,420,71],[357,72,420,72],[357,75,420,75],[357,76,420,76],[357,77,420,77],[357,78,420,78],[357,80,420,80],[358,6,421,8],[358,13,421,15,"found"],[358,18,421,20],[359,4,422,4],[360,4,424,4],[360,8,424,8,"parentAlreadyChecked"],[360,28,424,28],[360,30,425,8],[360,37,425,15],[360,41,425,19],[362,4,427,4],[363,4,428,4],[363,8,428,8,"current"],[363,15,428,15],[363,18,428,18],[363,22,428,22],[364,4,429,4],[364,11,429,11,"current"],[364,18,429,18],[364,19,429,19,"parent"],[364,25,429,25],[364,27,429,27],[365,6,430,8,"found"],[365,11,430,13],[365,14,430,16,"current"],[365,21,430,23],[365,22,430,24,"parent"],[365,28,430,30],[365,29,430,31,"_lookupImpl"],[365,40,430,42],[365,41,430,43,"path"],[365,45,430,47],[365,47,430,49,"flatPath"],[365,55,430,57],[365,56,430,58],[366,6,431,8],[366,10,431,12,"found"],[366,15,431,17],[366,20,431,22],[366,21,431,23,"filterTypes"],[366,32,431,34],[366,36,431,38,"filterTypes"],[366,47,431,49],[366,48,431,50,"indexOf"],[366,55,431,57],[366,56,431,58,"found"],[366,61,431,63],[366,62,431,64,"constructor"],[366,73,431,75],[366,74,431,76],[366,77,431,79],[366,78,431,80],[366,79,431,81],[366,80,431,82],[366,82,431,84],[367,8,432,12],[367,15,432,19,"found"],[367,20,432,24],[368,6,433,8],[369,6,434,8,"current"],[369,13,434,15],[369,16,434,18,"current"],[369,23,434,25],[369,24,434,26,"parent"],[369,30,434,32],[370,4,435,4],[371,4,436,4],[371,11,436,11],[371,15,436,15],[372,2,437,0],[372,3,437,1],[374,2,439,0],[375,0,440,0],[376,0,441,0],[377,0,442,0],[378,0,443,0],[379,0,444,0],[380,0,445,0],[381,2,446,0,"Namespace"],[381,11,446,9],[381,12,446,10,"prototype"],[381,21,446,19],[381,22,446,20,"_lookupImpl"],[381,33,446,31],[381,36,446,34],[381,45,446,43,"lookup"],[381,51,446,49,"lookup"],[381,52,446,50,"path"],[381,56,446,54],[381,58,446,56,"flatPath"],[381,66,446,64],[381,68,446,66],[382,4,447,4],[382,8,447,7,"Object"],[382,14,447,13],[382,15,447,14,"prototype"],[382,24,447,23],[382,25,447,24,"hasOwnProperty"],[382,39,447,38],[382,40,447,39,"call"],[382,44,447,43],[382,45,447,44],[382,49,447,48],[382,50,447,49,"_lookupCache"],[382,62,447,61],[382,64,447,63,"flatPath"],[382,72,447,71],[382,73,447,72],[382,75,447,74],[383,6,448,8],[383,13,448,15],[383,17,448,19],[383,18,448,20,"_lookupCache"],[383,30,448,32],[383,31,448,33,"flatPath"],[383,39,448,41],[383,40,448,42],[384,4,449,4],[386,4,451,4],[387,4,452,4],[387,8,452,8,"found"],[387,13,452,13],[387,16,452,16],[387,20,452,20],[387,21,452,21,"get"],[387,24,452,24],[387,25,452,25,"path"],[387,29,452,29],[387,30,452,30],[387,31,452,31],[387,32,452,32],[387,33,452,33],[388,4,453,4],[388,8,453,8,"exact"],[388,13,453,13],[388,16,453,16],[388,20,453,20],[389,4,454,4],[389,8,454,8,"found"],[389,13,454,13],[389,15,454,15],[390,6,455,8],[390,10,455,12,"path"],[390,14,455,16],[390,15,455,17,"length"],[390,21,455,23],[390,26,455,28],[390,27,455,29],[390,29,455,31],[391,8,456,12,"exact"],[391,13,456,17],[391,16,456,20,"found"],[391,21,456,25],[392,6,457,8],[392,7,457,9],[392,13,457,15],[392,17,457,19,"found"],[392,22,457,24],[392,34,457,36,"Namespace"],[392,43,457,45],[392,45,457,47],[393,8,458,12,"path"],[393,12,458,16],[393,15,458,19,"path"],[393,19,458,23],[393,20,458,24,"slice"],[393,25,458,29],[393,26,458,30],[393,27,458,31],[393,28,458,32],[394,8,459,12,"exact"],[394,13,459,17],[394,16,459,20,"found"],[394,21,459,25],[394,22,459,26,"_lookupImpl"],[394,33,459,37],[394,34,459,38,"path"],[394,38,459,42],[394,40,459,44,"path"],[394,44,459,48],[394,45,459,49,"join"],[394,49,459,53],[394,50,459,54],[394,53,459,57],[394,54,459,58],[394,55,459,59],[395,6,460,8],[397,6,462,4],[398,4,463,4],[398,5,463,5],[398,11,463,11],[399,6,464,8],[399,11,464,13],[399,15,464,17,"i"],[399,16,464,18],[399,19,464,21],[399,20,464,22],[399,22,464,24,"i"],[399,23,464,25],[399,26,464,28],[399,30,464,32],[399,31,464,33,"nestedArray"],[399,42,464,44],[399,43,464,45,"length"],[399,49,464,51],[399,51,464,53],[399,53,464,55,"i"],[399,54,464,56],[399,56,465,12],[399,60,465,16],[399,64,465,20],[399,65,465,21,"_nestedArray"],[399,77,465,33],[399,78,465,34,"i"],[399,79,465,35],[399,80,465,36],[399,92,465,48,"Namespace"],[399,101,465,57],[399,106,465,62,"found"],[399,111,465,67],[399,114,465,70],[399,118,465,74],[399,119,465,75,"_nestedArray"],[399,131,465,87],[399,132,465,88,"i"],[399,133,465,89],[399,134,465,90],[399,135,465,91,"_lookupImpl"],[399,146,465,102],[399,147,465,103,"path"],[399,151,465,107],[399,153,465,109,"flatPath"],[399,161,465,117],[399,162,465,118],[399,163,465,119],[399,165,466,16,"exact"],[399,170,466,21],[399,173,466,24,"found"],[399,178,466,29],[400,4,467,4],[402,4,469,4],[403,4,470,4],[403,8,470,8],[403,9,470,9,"_lookupCache"],[403,21,470,21],[403,22,470,22,"flatPath"],[403,30,470,30],[403,31,470,31],[403,34,470,34,"exact"],[403,39,470,39],[404,4,471,4],[404,11,471,11,"exact"],[404,16,471,16],[405,2,472,0],[405,3,472,1],[407,2,474,0],[408,0,475,0],[409,0,476,0],[410,0,477,0],[411,0,478,0],[412,0,479,0],[413,0,480,0],[414,0,481,0],[415,0,482,0],[416,2,483,0],[418,2,485,0],[419,0,486,0],[420,0,487,0],[421,0,488,0],[422,0,489,0],[423,0,490,0],[424,0,491,0],[425,2,492,0,"Namespace"],[425,11,492,9],[425,12,492,10,"prototype"],[425,21,492,19],[425,22,492,20,"lookupType"],[425,32,492,30],[425,35,492,33],[425,44,492,42,"lookupType"],[425,54,492,52,"lookupType"],[425,55,492,53,"path"],[425,59,492,57],[425,61,492,59],[426,4,493,4],[426,8,493,8,"found"],[426,13,493,13],[426,16,493,16],[426,20,493,20],[426,21,493,21,"lookup"],[426,27,493,27],[426,28,493,28,"path"],[426,32,493,32],[426,34,493,34],[426,35,493,36,"Type"],[426,39,493,40],[426,40,493,42],[426,41,493,43],[427,4,494,4],[427,8,494,8],[427,9,494,9,"found"],[427,14,494,14],[427,16,495,8],[427,22,495,14,"Error"],[427,27,495,19],[427,28,495,20],[427,44,495,36],[427,47,495,39,"path"],[427,51,495,43],[427,52,495,44],[428,4,496,4],[428,11,496,11,"found"],[428,16,496,16],[429,2,497,0],[429,3,497,1],[431,2,499,0],[432,0,500,0],[433,0,501,0],[434,0,502,0],[435,0,503,0],[436,0,504,0],[437,0,505,0],[438,2,506,0,"Namespace"],[438,11,506,9],[438,12,506,10,"prototype"],[438,21,506,19],[438,22,506,20,"lookupEnum"],[438,32,506,30],[438,35,506,33],[438,44,506,42,"lookupEnum"],[438,54,506,52,"lookupEnum"],[438,55,506,53,"path"],[438,59,506,57],[438,61,506,59],[439,4,507,4],[439,8,507,8,"found"],[439,13,507,13],[439,16,507,16],[439,20,507,20],[439,21,507,21,"lookup"],[439,27,507,27],[439,28,507,28,"path"],[439,32,507,32],[439,34,507,34],[439,35,507,36,"Enum"],[439,39,507,40],[439,40,507,42],[439,41,507,43],[440,4,508,4],[440,8,508,8],[440,9,508,9,"found"],[440,14,508,14],[440,16,509,8],[440,22,509,14,"Error"],[440,27,509,19],[440,28,509,20],[440,44,509,36],[440,47,509,39,"path"],[440,51,509,43],[440,54,509,46],[440,61,509,53],[440,64,509,56],[440,68,509,60],[440,69,509,61],[441,4,510,4],[441,11,510,11,"found"],[441,16,510,16],[442,2,511,0],[442,3,511,1],[444,2,513,0],[445,0,514,0],[446,0,515,0],[447,0,516,0],[448,0,517,0],[449,0,518,0],[450,0,519,0],[451,2,520,0,"Namespace"],[451,11,520,9],[451,12,520,10,"prototype"],[451,21,520,19],[451,22,520,20,"lookupTypeOrEnum"],[451,38,520,36],[451,41,520,39],[451,50,520,48,"lookupTypeOrEnum"],[451,66,520,64,"lookupTypeOrEnum"],[451,67,520,65,"path"],[451,71,520,69],[451,73,520,71],[452,4,521,4],[452,8,521,8,"found"],[452,13,521,13],[452,16,521,16],[452,20,521,20],[452,21,521,21,"lookup"],[452,27,521,27],[452,28,521,28,"path"],[452,32,521,32],[452,34,521,34],[452,35,521,36,"Type"],[452,39,521,40],[452,41,521,42,"Enum"],[452,45,521,46],[452,46,521,48],[452,47,521,49],[453,4,522,4],[453,8,522,8],[453,9,522,9,"found"],[453,14,522,14],[453,16,523,8],[453,22,523,14,"Error"],[453,27,523,19],[453,28,523,20],[453,52,523,44],[453,55,523,47,"path"],[453,59,523,51],[453,62,523,54],[453,69,523,61],[453,72,523,64],[453,76,523,68],[453,77,523,69],[454,4,524,4],[454,11,524,11,"found"],[454,16,524,16],[455,2,525,0],[455,3,525,1],[457,2,527,0],[458,0,528,0],[459,0,529,0],[460,0,530,0],[461,0,531,0],[462,0,532,0],[463,0,533,0],[464,2,534,0,"Namespace"],[464,11,534,9],[464,12,534,10,"prototype"],[464,21,534,19],[464,22,534,20,"lookupService"],[464,35,534,33],[464,38,534,36],[464,47,534,45,"lookupService"],[464,60,534,58,"lookupService"],[464,61,534,59,"path"],[464,65,534,63],[464,67,534,65],[465,4,535,4],[465,8,535,8,"found"],[465,13,535,13],[465,16,535,16],[465,20,535,20],[465,21,535,21,"lookup"],[465,27,535,27],[465,28,535,28,"path"],[465,32,535,32],[465,34,535,34],[465,35,535,36,"Service"],[465,42,535,43],[465,43,535,45],[465,44,535,46],[466,4,536,4],[466,8,536,8],[466,9,536,9,"found"],[466,14,536,14],[466,16,537,8],[466,22,537,14,"Error"],[466,27,537,19],[466,28,537,20],[466,47,537,39],[466,50,537,42,"path"],[466,54,537,46],[466,57,537,49],[466,64,537,56],[466,67,537,59],[466,71,537,63],[466,72,537,64],[467,4,538,4],[467,11,538,11,"found"],[467,16,538,16],[468,2,539,0],[468,3,539,1],[470,2,541,0],[471,2,542,0,"Namespace"],[471,11,542,9],[471,12,542,10,"_configure"],[471,22,542,20],[471,25,542,23],[471,35,542,32,"Type_"],[471,40,542,37],[471,42,542,39,"Service_"],[471,50,542,47],[471,52,542,49,"Enum_"],[471,57,542,54],[471,59,542,56],[472,4,543,4,"Type"],[472,8,543,8],[472,11,543,14,"Type_"],[472,16,543,19],[473,4,544,4,"Service"],[473,11,544,11],[473,14,544,14,"Service_"],[473,22,544,22],[474,4,545,4,"Enum"],[474,8,545,8],[474,11,545,14,"Enum_"],[474,16,545,19],[475,2,546,0],[475,3,546,1],[476,0,546,2],[476,3]],"functionMap":{"names":["<global>","fromJSON","arrayToJSON","isReservedId","isReservedName","Namespace","clearCache","Object.defineProperty$argument_2.get","toJSON","addJSON","get","getEnum","add","remove","define","resolveAll","_resolveFeaturesRecursive","nestedArray.forEach$argument_0","lookup","lookupType","lookupEnum","lookupTypeOrEnum","lookupService","Namespace._configure"],"mappings":"AAA;qBCkC;CDE;AES;CFO;yBGU;CHM;2BIQ;CJM;AKa;CLsC;AME;CNU;SOS;KPE;6BQ2B;CRK;8BSO;CToB;0BUO;CVG;8BWS;CXI;0BYS;CZ8C;6BaS;Cba;6BcQ;CdsB;iCeM;Cfc;gDgBK;6BCO;KDE;ChBE;6BkBS;ClB8C;kCkBS;ClB0B;iCmBoB;CnBK;iCoBS;CpBK;uCqBS;CrBK;oCsBS;CtBK;uBuBG;CvBI"}},"type":"js/module"}]}