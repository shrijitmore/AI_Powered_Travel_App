{"dependencies":[{"name":"./tokenize","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":16,"index":117},"end":{"line":7,"column":37,"index":138}}],"key":"RqBZexol4i+dX2euwqpR5GvmcOU=","exportNames":["*"]}},{"name":"./root","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":16,"index":156},"end":{"line":8,"column":33,"index":173}}],"key":"+623+1eejohPOqcdir5tNi6op/g=","exportNames":["*"]}},{"name":"./type","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":191},"end":{"line":9,"column":33,"index":208}}],"key":"V60QbB0X0zRp7FrHbxVhvo3GiWE=","exportNames":["*"]}},{"name":"./field","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":16,"index":226},"end":{"line":10,"column":34,"index":244}}],"key":"NvI2xXoYDS7eVNBPYDi7RsbVioc=","exportNames":["*"]}},{"name":"./mapfield","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":262},"end":{"line":11,"column":37,"index":283}}],"key":"MMmudVnVxEglPCDovE2ztoOe6EI=","exportNames":["*"]}},{"name":"./oneof","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":16,"index":301},"end":{"line":12,"column":34,"index":319}}],"key":"6NmAiHUhkqvb6p1LAZJI/y3pbuA=","exportNames":["*"]}},{"name":"./enum","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":16,"index":337},"end":{"line":13,"column":33,"index":354}}],"key":"gyum9HaiytxYUYAerYZvNHG09ko=","exportNames":["*"]}},{"name":"./service","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":372},"end":{"line":14,"column":36,"index":392}}],"key":"SjCFclpm2vEeBKEx+WKCb/xzWJU=","exportNames":["*"]}},{"name":"./method","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":16,"index":410},"end":{"line":15,"column":35,"index":429}}],"key":"3KWs9YDw9VAu1AlI6q+CsToc0yY=","exportNames":["*"]}},{"name":"./object","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":23,"index":454},"end":{"line":16,"column":42,"index":473}}],"key":"xOxKVS7k9wOBO7C50gqXbLVMn/0=","exportNames":["*"]}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":16,"index":491},"end":{"line":17,"column":34,"index":509}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo=","exportNames":["*"]}},{"name":"./util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":16,"index":527},"end":{"line":18,"column":33,"index":544}}],"key":"hA8WsniBZrUJ/dmBZgrNdZcEmJ8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  module.exports = parse;\n  parse.filename = null;\n  parse.defaults = {\n    keepCase: false\n  };\n  var tokenize = require(_dependencyMap[0], \"./tokenize\"),\n    Root = require(_dependencyMap[1], \"./root\"),\n    Type = require(_dependencyMap[2], \"./type\"),\n    Field = require(_dependencyMap[3], \"./field\"),\n    MapField = require(_dependencyMap[4], \"./mapfield\"),\n    OneOf = require(_dependencyMap[5], \"./oneof\"),\n    Enum = require(_dependencyMap[6], \"./enum\"),\n    Service = require(_dependencyMap[7], \"./service\"),\n    Method = require(_dependencyMap[8], \"./method\"),\n    ReflectionObject = require(_dependencyMap[9], \"./object\"),\n    types = require(_dependencyMap[10], \"./types\"),\n    util = require(_dependencyMap[11], \"./util\");\n  var base10Re = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re = /^0[0-7]+$/,\n    base8NegRe = /^-?0[0-7]+$/,\n    numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/;\n\n  /**\n   * Result object returned from {@link parse}.\n   * @interface IParserResult\n   * @property {string|undefined} package Package name, if declared\n   * @property {string[]|undefined} imports Imports, if any\n   * @property {string[]|undefined} weakImports Weak imports, if any\n   * @property {Root} root Populated root instance\n   */\n\n  /**\n   * Options modifying the behavior of {@link parse}.\n   * @interface IParseOptions\n   * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n   * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n   * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n   */\n\n  /**\n   * Options modifying the behavior of JSON serialization.\n   * @interface IToJSONOptions\n   * @property {boolean} [keepComments=false] Serializes comments.\n   */\n\n  /**\n   * Parses the given .proto source and returns an object with the parsed contents.\n   * @param {string} source Source contents\n   * @param {Root} root Root to populate\n   * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n   * @returns {IParserResult} Parser result\n   * @property {string} filename=null Currently processing file name for error reporting, if known\n   * @property {IParseOptions} defaults Default {@link IParseOptions}\n   */\n  function parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n      options = root;\n      root = new Root();\n    }\n    if (!options) options = parse.defaults;\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n      next = tn.next,\n      push = tn.push,\n      peek = tn.peek,\n      skip = tn.skip,\n      cmnt = tn.cmnt;\n    var head = true,\n      pkg,\n      imports,\n      weakImports,\n      edition = \"proto2\";\n    var ptr = root;\n    var topLevelObjects = [];\n    var topLevelOptions = {};\n    var applyCase = options.keepCase ? function (name) {\n      return name;\n    } : util.camelCase;\n    function resolveFileFeatures() {\n      topLevelObjects.forEach(obj => {\n        obj._edition = edition;\n        Object.keys(topLevelOptions).forEach(opt => {\n          if (obj.getOption(opt) !== undefined) return;\n          obj.setOption(opt, topLevelOptions[opt], true);\n        });\n      });\n    }\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n      var filename = parse.filename;\n      if (!insideTryCatch) parse.filename = null;\n      return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n    function readString() {\n      var values = [],\n        token;\n      do {\n        /* istanbul ignore if */\n        if ((token = next()) !== \"\\\"\" && token !== \"'\") throw illegal(token);\n        values.push(next());\n        skip(token);\n        token = peek();\n      } while (token === \"\\\"\" || token === \"'\");\n      return values.join(\"\");\n    }\n    function readValue(acceptTypeRef) {\n      var token = next();\n      switch (token) {\n        case \"'\":\n        case \"\\\"\":\n          push(token);\n          return readString();\n        case \"true\":\n        case \"TRUE\":\n          return true;\n        case \"false\":\n        case \"FALSE\":\n          return false;\n      }\n      try {\n        return parseNumber(token, /* insideTryCatch */true);\n      } catch (e) {\n        /* istanbul ignore else */\n        if (acceptTypeRef && typeRefRe.test(token)) return token;\n\n        /* istanbul ignore next */\n        throw illegal(token, \"value\");\n      }\n    }\n    function readRanges(target, acceptStrings) {\n      var token, start;\n      do {\n        if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\")) {\n          var str = readString();\n          target.push(str);\n          if (edition >= 2023) {\n            throw illegal(str, \"id\");\n          }\n        } else {\n          try {\n            target.push([start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start]);\n          } catch (err) {\n            if (acceptStrings && typeRefRe.test(token) && edition >= 2023) {\n              target.push(token);\n            } else {\n              throw err;\n            }\n          }\n        }\n      } while (skip(\",\", true));\n      var dummy = {\n        options: undefined\n      };\n      dummy.setOption = function (name, value) {\n        if (this.options === undefined) this.options = {};\n        this.options[name] = value;\n      };\n      ifBlock(dummy, function parseRange_block(token) {\n        /* istanbul ignore else */\n        if (token === \"option\") {\n          parseOption(dummy, token); // skip\n          skip(\";\");\n        } else throw illegal(token);\n      }, function parseRange_line() {\n        parseInlineOptions(dummy); // skip\n      });\n    }\n    function parseNumber(token, insideTryCatch) {\n      var sign = 1;\n      if (token.charAt(0) === \"-\") {\n        sign = -1;\n        token = token.substring(1);\n      }\n      switch (token) {\n        case \"inf\":\n        case \"INF\":\n        case \"Inf\":\n          return sign * Infinity;\n        case \"nan\":\n        case \"NAN\":\n        case \"Nan\":\n        case \"NaN\":\n          return NaN;\n        case \"0\":\n          return 0;\n      }\n      if (base10Re.test(token)) return sign * parseInt(token, 10);\n      if (base16Re.test(token)) return sign * parseInt(token, 16);\n      if (base8Re.test(token)) return sign * parseInt(token, 8);\n\n      /* istanbul ignore else */\n      if (numberRe.test(token)) return sign * parseFloat(token);\n\n      /* istanbul ignore next */\n      throw illegal(token, \"number\", insideTryCatch);\n    }\n    function parseId(token, acceptNegative) {\n      switch (token) {\n        case \"max\":\n        case \"MAX\":\n        case \"Max\":\n          return 536870911;\n        case \"0\":\n          return 0;\n      }\n\n      /* istanbul ignore if */\n      if (!acceptNegative && token.charAt(0) === \"-\") throw illegal(token, \"id\");\n      if (base10NegRe.test(token)) return parseInt(token, 10);\n      if (base16NegRe.test(token)) return parseInt(token, 16);\n\n      /* istanbul ignore else */\n      if (base8NegRe.test(token)) return parseInt(token, 8);\n\n      /* istanbul ignore next */\n      throw illegal(token, \"id\");\n    }\n    function parsePackage() {\n      /* istanbul ignore if */\n      if (pkg !== undefined) throw illegal(\"package\");\n      pkg = next();\n\n      /* istanbul ignore if */\n      if (!typeRefRe.test(pkg)) throw illegal(pkg, \"name\");\n      ptr = ptr.define(pkg);\n      skip(\";\");\n    }\n    function parseImport() {\n      var token = peek();\n      var whichImports;\n      switch (token) {\n        case \"weak\":\n          whichImports = weakImports || (weakImports = []);\n          next();\n          break;\n        case \"public\":\n          next();\n        // eslint-disable-next-line no-fallthrough\n        default:\n          whichImports = imports || (imports = []);\n          break;\n      }\n      token = readString();\n      skip(\";\");\n      whichImports.push(token);\n    }\n    function parseSyntax() {\n      skip(\"=\");\n      edition = readString();\n\n      /* istanbul ignore if */\n      if (edition < 2023) throw illegal(edition, \"syntax\");\n      skip(\";\");\n    }\n    function parseEdition() {\n      skip(\"=\");\n      edition = readString();\n      const supportedEditions = [\"2023\"];\n\n      /* istanbul ignore if */\n      if (!supportedEditions.includes(edition)) throw illegal(edition, \"edition\");\n      skip(\";\");\n    }\n    function parseCommon(parent, token) {\n      switch (token) {\n        case \"option\":\n          parseOption(parent, token);\n          skip(\";\");\n          return true;\n        case \"message\":\n          parseType(parent, token);\n          return true;\n        case \"enum\":\n          parseEnum(parent, token);\n          return true;\n        case \"service\":\n          parseService(parent, token);\n          return true;\n        case \"extend\":\n          parseExtension(parent, token);\n          return true;\n      }\n      return false;\n    }\n    function ifBlock(obj, fnIf, fnElse) {\n      var trailingLine = tn.line;\n      if (obj) {\n        if (typeof obj.comment !== \"string\") {\n          obj.comment = cmnt(); // try block-type comment\n        }\n        obj.filename = parse.filename;\n      }\n      if (skip(\"{\", true)) {\n        var token;\n        while ((token = next()) !== \"}\") fnIf(token);\n        skip(\";\", true);\n      } else {\n        if (fnElse) fnElse();\n        skip(\";\");\n        if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment)) obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n      }\n    }\n    function parseType(parent, token) {\n      /* istanbul ignore if */\n      if (!nameRe.test(token = next())) throw illegal(token, \"type name\");\n      var type = new Type(token);\n      ifBlock(type, function parseType_block(token) {\n        if (parseCommon(type, token)) return;\n        switch (token) {\n          case \"map\":\n            parseMapField(type, token);\n            break;\n          case \"required\":\n            if (edition !== \"proto2\") throw illegal(token);\n          /* eslint-disable no-fallthrough */\n          case \"repeated\":\n            parseField(type, token);\n            break;\n          case \"optional\":\n            /* istanbul ignore if */\n            if (edition === \"proto3\") {\n              parseField(type, \"proto3_optional\");\n            } else if (edition !== \"proto2\") {\n              throw illegal(token);\n            } else {\n              parseField(type, \"optional\");\n            }\n            break;\n          case \"oneof\":\n            parseOneOf(type, token);\n            break;\n          case \"extensions\":\n            readRanges(type.extensions || (type.extensions = []));\n            break;\n          case \"reserved\":\n            readRanges(type.reserved || (type.reserved = []), true);\n            break;\n          default:\n            /* istanbul ignore if */\n            if (edition === \"proto2\" || !typeRefRe.test(token)) {\n              throw illegal(token);\n            }\n            push(token);\n            parseField(type, \"optional\");\n            break;\n        }\n      });\n      parent.add(type);\n      if (parent === ptr) {\n        topLevelObjects.push(type);\n      }\n    }\n    function parseField(parent, rule, extend) {\n      var type = next();\n      if (type === \"group\") {\n        parseGroup(parent, rule);\n        return;\n      }\n      // Type names can consume multiple tokens, in multiple variants:\n      //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\n      //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n      //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n      //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\n      // Keep reading tokens until we get a type name with no period at the end,\n      // and the next token does not start with a period.\n      while (type.endsWith(\".\") || peek().startsWith(\".\")) {\n        type += next();\n      }\n\n      /* istanbul ignore if */\n      if (!typeRefRe.test(type)) throw illegal(type, \"type\");\n      var name = next();\n\n      /* istanbul ignore if */\n\n      if (!nameRe.test(name)) throw illegal(name, \"name\");\n      name = applyCase(name);\n      skip(\"=\");\n      var field = new Field(name, parseId(next()), type, rule, extend);\n      ifBlock(field, function parseField_block(token) {\n        /* istanbul ignore else */\n        if (token === \"option\") {\n          parseOption(field, token);\n          skip(\";\");\n        } else throw illegal(token);\n      }, function parseField_line() {\n        parseInlineOptions(field);\n      });\n      if (rule === \"proto3_optional\") {\n        // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n        var oneof = new OneOf(\"_\" + name);\n        field.setOption(\"proto3_optional\", true);\n        oneof.add(field);\n        parent.add(oneof);\n      } else {\n        parent.add(field);\n      }\n      if (parent === ptr) {\n        topLevelObjects.push(field);\n      }\n    }\n    function parseGroup(parent, rule) {\n      if (edition >= 2023) {\n        throw illegal(\"group\");\n      }\n      var name = next();\n\n      /* istanbul ignore if */\n      if (!nameRe.test(name)) throw illegal(name, \"name\");\n      var fieldName = util.lcFirst(name);\n      if (name === fieldName) name = util.ucFirst(name);\n      skip(\"=\");\n      var id = parseId(next());\n      var type = new Type(name);\n      type.group = true;\n      var field = new Field(fieldName, id, name, rule);\n      field.filename = parse.filename;\n      ifBlock(type, function parseGroup_block(token) {\n        switch (token) {\n          case \"option\":\n            parseOption(type, token);\n            skip(\";\");\n            break;\n          case \"required\":\n          case \"repeated\":\n            parseField(type, token);\n            break;\n          case \"optional\":\n            /* istanbul ignore if */\n            if (edition === \"proto3\") {\n              parseField(type, \"proto3_optional\");\n            } else {\n              parseField(type, \"optional\");\n            }\n            break;\n          case \"message\":\n            parseType(type, token);\n            break;\n          case \"enum\":\n            parseEnum(type, token);\n            break;\n          case \"reserved\":\n            readRanges(type.reserved || (type.reserved = []), true);\n            break;\n\n          /* istanbul ignore next */\n          default:\n            throw illegal(token);\n          // there are no groups with proto3 semantics\n        }\n      });\n      parent.add(type).add(field);\n    }\n    function parseMapField(parent) {\n      skip(\"<\");\n      var keyType = next();\n\n      /* istanbul ignore if */\n      if (types.mapKey[keyType] === undefined) throw illegal(keyType, \"type\");\n      skip(\",\");\n      var valueType = next();\n\n      /* istanbul ignore if */\n      if (!typeRefRe.test(valueType)) throw illegal(valueType, \"type\");\n      skip(\">\");\n      var name = next();\n\n      /* istanbul ignore if */\n      if (!nameRe.test(name)) throw illegal(name, \"name\");\n      skip(\"=\");\n      var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n      ifBlock(field, function parseMapField_block(token) {\n        /* istanbul ignore else */\n        if (token === \"option\") {\n          parseOption(field, token);\n          skip(\";\");\n        } else throw illegal(token);\n      }, function parseMapField_line() {\n        parseInlineOptions(field);\n      });\n      parent.add(field);\n    }\n    function parseOneOf(parent, token) {\n      /* istanbul ignore if */\n      if (!nameRe.test(token = next())) throw illegal(token, \"name\");\n      var oneof = new OneOf(applyCase(token));\n      ifBlock(oneof, function parseOneOf_block(token) {\n        if (token === \"option\") {\n          parseOption(oneof, token);\n          skip(\";\");\n        } else {\n          push(token);\n          parseField(oneof, \"optional\");\n        }\n      });\n      parent.add(oneof);\n    }\n    function parseEnum(parent, token) {\n      /* istanbul ignore if */\n      if (!nameRe.test(token = next())) throw illegal(token, \"name\");\n      var enm = new Enum(token);\n      ifBlock(enm, function parseEnum_block(token) {\n        switch (token) {\n          case \"option\":\n            parseOption(enm, token);\n            skip(\";\");\n            break;\n          case \"reserved\":\n            readRanges(enm.reserved || (enm.reserved = []), true);\n            if (enm.reserved === undefined) enm.reserved = [];\n            break;\n          default:\n            parseEnumValue(enm, token);\n        }\n      });\n      parent.add(enm);\n      if (parent === ptr) {\n        topLevelObjects.push(enm);\n      }\n    }\n    function parseEnumValue(parent, token) {\n      /* istanbul ignore if */\n      if (!nameRe.test(token)) throw illegal(token, \"name\");\n      skip(\"=\");\n      var value = parseId(next(), true),\n        dummy = {\n          options: undefined\n        };\n      dummy.getOption = function (name) {\n        return this.options[name];\n      };\n      dummy.setOption = function (name, value) {\n        ReflectionObject.prototype.setOption.call(dummy, name, value);\n      };\n      dummy.setParsedOption = function () {\n        return undefined;\n      };\n      ifBlock(dummy, function parseEnumValue_block(token) {\n        /* istanbul ignore else */\n        if (token === \"option\") {\n          parseOption(dummy, token); // skip\n          skip(\";\");\n        } else throw illegal(token);\n      }, function parseEnumValue_line() {\n        parseInlineOptions(dummy); // skip\n      });\n      parent.add(token, value, dummy.comment, dummy.parsedOptions || dummy.options);\n    }\n    function parseOption(parent, token) {\n      var option;\n      var propName;\n      var isOption = true;\n      if (token === \"option\") {\n        token = next();\n      }\n      while (token !== \"=\") {\n        if (token === \"(\") {\n          var parensValue = next();\n          skip(\")\");\n          token = \"(\" + parensValue + \")\";\n        }\n        if (isOption) {\n          isOption = false;\n          if (token.includes(\".\") && !token.includes(\"(\")) {\n            var tokens = token.split(\".\");\n            option = tokens[0] + \".\";\n            token = tokens[1];\n            continue;\n          }\n          option = token;\n        } else {\n          propName = propName ? propName += token : token;\n        }\n        token = next();\n      }\n      var name = propName ? option.concat(propName) : option;\n      var optionValue = parseOptionValue(parent, name);\n      propName = propName && propName[0] === \".\" ? propName.slice(1) : propName;\n      option = option && option[option.length - 1] === \".\" ? option.slice(0, -1) : option;\n      setParsedOption(parent, option, optionValue, propName);\n    }\n    function parseOptionValue(parent, name) {\n      // { a: \"foo\" b { c: \"bar\" } }\n      if (skip(\"{\", true)) {\n        var objectResult = {};\n        while (!skip(\"}\", true)) {\n          /* istanbul ignore if */\n          if (!nameRe.test(token = next())) {\n            throw illegal(token, \"name\");\n          }\n          if (token === null) {\n            throw illegal(token, \"end of input\");\n          }\n          var value;\n          var propName = token;\n          skip(\":\", true);\n          if (peek() === \"{\") {\n            // option (my_option) = {\n            //     repeated_value: [ \"foo\", \"bar\" ]\n            // };\n            value = parseOptionValue(parent, name + \".\" + token);\n          } else if (peek() === \"[\") {\n            value = [];\n            var lastValue;\n            if (skip(\"[\", true)) {\n              do {\n                lastValue = readValue(true);\n                value.push(lastValue);\n              } while (skip(\",\", true));\n              skip(\"]\");\n              if (typeof lastValue !== \"undefined\") {\n                setOption(parent, name + \".\" + token, lastValue);\n              }\n            }\n          } else {\n            value = readValue(true);\n            setOption(parent, name + \".\" + token, value);\n          }\n          var prevValue = objectResult[propName];\n          if (prevValue) value = [].concat(prevValue).concat(value);\n          objectResult[propName] = value;\n\n          // Semicolons and commas can be optional\n          skip(\",\", true);\n          skip(\";\", true);\n        }\n        return objectResult;\n      }\n      var simpleValue = readValue(true);\n      setOption(parent, name, simpleValue);\n      return simpleValue;\n      // Does not enforce a delimiter to be universal\n    }\n    function setOption(parent, name, value) {\n      if (ptr === parent && /^features\\./.test(name)) {\n        topLevelOptions[name] = value;\n        return;\n      }\n      if (parent.setOption) parent.setOption(name, value);\n    }\n    function setParsedOption(parent, name, value, propName) {\n      if (parent.setParsedOption) parent.setParsedOption(name, value, propName);\n    }\n    function parseInlineOptions(parent) {\n      if (skip(\"[\", true)) {\n        do {\n          parseOption(parent, \"option\");\n        } while (skip(\",\", true));\n        skip(\"]\");\n      }\n      return parent;\n    }\n    function parseService(parent, token) {\n      /* istanbul ignore if */\n      if (!nameRe.test(token = next())) throw illegal(token, \"service name\");\n      var service = new Service(token);\n      ifBlock(service, function parseService_block(token) {\n        if (parseCommon(service, token)) {\n          return;\n        }\n\n        /* istanbul ignore else */\n        if (token === \"rpc\") parseMethod(service, token);else throw illegal(token);\n      });\n      parent.add(service);\n      if (parent === ptr) {\n        topLevelObjects.push(service);\n      }\n    }\n    function parseMethod(parent, token) {\n      // Get the comment of the preceding line now (if one exists) in case the\n      // method is defined across multiple lines.\n      var commentText = cmnt();\n      var type = token;\n\n      /* istanbul ignore if */\n      if (!nameRe.test(token = next())) throw illegal(token, \"name\");\n      var name = token,\n        requestType,\n        requestStream,\n        responseType,\n        responseStream;\n      skip(\"(\");\n      if (skip(\"stream\", true)) requestStream = true;\n\n      /* istanbul ignore if */\n      if (!typeRefRe.test(token = next())) throw illegal(token);\n      requestType = token;\n      skip(\")\");\n      skip(\"returns\");\n      skip(\"(\");\n      if (skip(\"stream\", true)) responseStream = true;\n\n      /* istanbul ignore if */\n      if (!typeRefRe.test(token = next())) throw illegal(token);\n      responseType = token;\n      skip(\")\");\n      var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n      method.comment = commentText;\n      ifBlock(method, function parseMethod_block(token) {\n        /* istanbul ignore else */\n        if (token === \"option\") {\n          parseOption(method, token);\n          skip(\";\");\n        } else throw illegal(token);\n      });\n      parent.add(method);\n    }\n    function parseExtension(parent, token) {\n      /* istanbul ignore if */\n      if (!typeRefRe.test(token = next())) throw illegal(token, \"reference\");\n      var reference = token;\n      ifBlock(null, function parseExtension_block(token) {\n        switch (token) {\n          case \"required\":\n          case \"repeated\":\n            parseField(parent, token, reference);\n            break;\n          case \"optional\":\n            /* istanbul ignore if */\n            if (edition === \"proto3\") {\n              parseField(parent, \"proto3_optional\", reference);\n            } else {\n              parseField(parent, \"optional\", reference);\n            }\n            break;\n          default:\n            /* istanbul ignore if */\n            if (edition === \"proto2\" || !typeRefRe.test(token)) throw illegal(token);\n            push(token);\n            parseField(parent, \"optional\", reference);\n            break;\n        }\n      });\n    }\n    var token;\n    while ((token = next()) !== null) {\n      switch (token) {\n        case \"package\":\n          /* istanbul ignore if */\n          if (!head) throw illegal(token);\n          parsePackage();\n          break;\n        case \"import\":\n          /* istanbul ignore if */\n          if (!head) throw illegal(token);\n          parseImport();\n          break;\n        case \"syntax\":\n          /* istanbul ignore if */\n          if (!head) throw illegal(token);\n          parseSyntax();\n          break;\n        case \"edition\":\n          /* istanbul ignore if */\n          if (!head) throw illegal(token);\n          parseEdition();\n          break;\n        case \"option\":\n          parseOption(ptr, token);\n          skip(\";\", true);\n          break;\n        default:\n          /* istanbul ignore else */\n          if (parseCommon(ptr, token)) {\n            head = false;\n            continue;\n          }\n\n          /* istanbul ignore next */\n          throw illegal(token);\n      }\n    }\n    resolveFileFeatures();\n    parse.filename = null;\n    return {\n      \"package\": pkg,\n      \"imports\": imports,\n      weakImports: weakImports,\n      root: root\n    };\n  }\n\n  /**\n   * Parses the given .proto source and returns an object with the parsed contents.\n   * @name parse\n   * @function\n   * @param {string} source Source contents\n   * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n   * @returns {IParserResult} Parser result\n   * @property {string} filename=null Currently processing file name for error reporting, if known\n   * @property {IParseOptions} defaults Default {@link IParseOptions}\n   * @variation 2\n   */\n});","lineCount":805,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"module"],[4,8,2,6],[4,9,2,7,"exports"],[4,16,2,14],[4,19,2,17,"parse"],[4,24,2,22],[5,2,4,0,"parse"],[5,7,4,5],[5,8,4,6,"filename"],[5,16,4,14],[5,19,4,17],[5,23,4,21],[6,2,5,0,"parse"],[6,7,5,5],[6,8,5,6,"defaults"],[6,16,5,14],[6,19,5,17],[7,4,5,19,"keepCase"],[7,12,5,27],[7,14,5,29],[8,2,5,35],[8,3,5,36],[9,2,7,0],[9,6,7,4,"tokenize"],[9,14,7,12],[9,17,7,16,"require"],[9,24,7,23],[9,25,7,23,"_dependencyMap"],[9,39,7,23],[9,56,7,36],[9,57,7,37],[10,4,8,4,"Root"],[10,8,8,8],[10,11,8,16,"require"],[10,18,8,23],[10,19,8,23,"_dependencyMap"],[10,33,8,23],[10,46,8,32],[10,47,8,33],[11,4,9,4,"Type"],[11,8,9,8],[11,11,9,16,"require"],[11,18,9,23],[11,19,9,23,"_dependencyMap"],[11,33,9,23],[11,46,9,32],[11,47,9,33],[12,4,10,4,"Field"],[12,9,10,9],[12,12,10,16,"require"],[12,19,10,23],[12,20,10,23,"_dependencyMap"],[12,34,10,23],[12,48,10,33],[12,49,10,34],[13,4,11,4,"MapField"],[13,12,11,12],[13,15,11,16,"require"],[13,22,11,23],[13,23,11,23,"_dependencyMap"],[13,37,11,23],[13,54,11,36],[13,55,11,37],[14,4,12,4,"OneOf"],[14,9,12,9],[14,12,12,16,"require"],[14,19,12,23],[14,20,12,23,"_dependencyMap"],[14,34,12,23],[14,48,12,33],[14,49,12,34],[15,4,13,4,"Enum"],[15,8,13,8],[15,11,13,16,"require"],[15,18,13,23],[15,19,13,23,"_dependencyMap"],[15,33,13,23],[15,46,13,32],[15,47,13,33],[16,4,14,4,"Service"],[16,11,14,11],[16,14,14,16,"require"],[16,21,14,23],[16,22,14,23,"_dependencyMap"],[16,36,14,23],[16,52,14,35],[16,53,14,36],[17,4,15,4,"Method"],[17,10,15,10],[17,13,15,16,"require"],[17,20,15,23],[17,21,15,23,"_dependencyMap"],[17,35,15,23],[17,50,15,34],[17,51,15,35],[18,4,16,4,"ReflectionObject"],[18,20,16,20],[18,23,16,23,"require"],[18,30,16,30],[18,31,16,30,"_dependencyMap"],[18,45,16,30],[18,60,16,41],[18,61,16,42],[19,4,17,4,"types"],[19,9,17,9],[19,12,17,16,"require"],[19,19,17,23],[19,20,17,23,"_dependencyMap"],[19,34,17,23],[19,49,17,33],[19,50,17,34],[20,4,18,4,"util"],[20,8,18,8],[20,11,18,16,"require"],[20,18,18,23],[20,19,18,23,"_dependencyMap"],[20,33,18,23],[20,47,18,32],[20,48,18,33],[21,2,20,0],[21,6,20,4,"base10Re"],[21,14,20,12],[21,17,20,18],[21,32,20,33],[22,4,21,4,"base10NegRe"],[22,15,21,15],[22,18,21,18],[22,35,21,35],[23,4,22,4,"base16Re"],[23,12,22,12],[23,15,22,18],[23,35,22,38],[24,4,23,4,"base16NegRe"],[24,15,23,15],[24,18,23,18],[24,40,23,40],[25,4,24,4,"base8Re"],[25,11,24,11],[25,14,24,18],[25,25,24,29],[26,4,25,4,"base8NegRe"],[26,14,25,14],[26,17,25,18],[26,30,25,31],[27,4,26,4,"numberRe"],[27,12,26,12],[27,15,26,18],[27,66,26,69],[28,4,27,4,"nameRe"],[28,10,27,10],[28,13,27,18],[28,39,27,44],[29,4,28,4,"typeRefRe"],[29,13,28,13],[29,16,28,18],[29,78,28,80],[31,2,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[40,2,39,0],[41,0,40,0],[42,0,41,0],[43,0,42,0],[44,0,43,0],[45,0,44,0],[46,0,45,0],[48,2,47,0],[49,0,48,0],[50,0,49,0],[51,0,50,0],[52,0,51,0],[54,2,53,0],[55,0,54,0],[56,0,55,0],[57,0,56,0],[58,0,57,0],[59,0,58,0],[60,0,59,0],[61,0,60,0],[62,0,61,0],[63,2,62,0],[63,11,62,9,"parse"],[63,16,62,14,"parse"],[63,17,62,15,"source"],[63,23,62,21],[63,25,62,23,"root"],[63,29,62,27],[63,31,62,29,"options"],[63,38,62,36],[63,40,62,38],[64,4,63,4],[65,4,64,4],[65,8,64,8],[65,10,64,10,"root"],[65,14,64,14],[65,26,64,26,"Root"],[65,30,64,30],[65,31,64,31],[65,33,64,33],[66,6,65,8,"options"],[66,13,65,15],[66,16,65,18,"root"],[66,20,65,22],[67,6,66,8,"root"],[67,10,66,12],[67,13,66,15],[67,17,66,19,"Root"],[67,21,66,23],[67,22,66,24],[67,23,66,25],[68,4,67,4],[69,4,68,4],[69,8,68,8],[69,9,68,9,"options"],[69,16,68,16],[69,18,69,8,"options"],[69,25,69,15],[69,28,69,18,"parse"],[69,33,69,23],[69,34,69,24,"defaults"],[69,42,69,32],[70,4,71,4],[70,8,71,8,"preferTrailingComment"],[70,29,71,29],[70,32,71,32,"options"],[70,39,71,39],[70,40,71,40,"preferTrailingComment"],[70,61,71,61],[70,65,71,65],[70,70,71,70],[71,4,72,4],[71,8,72,8,"tn"],[71,10,72,10],[71,13,72,13,"tokenize"],[71,21,72,21],[71,22,72,22,"source"],[71,28,72,28],[71,30,72,30,"options"],[71,37,72,37],[71,38,72,38,"alternateCommentMode"],[71,58,72,58],[71,62,72,62],[71,67,72,67],[71,68,72,68],[72,6,73,8,"next"],[72,10,73,12],[72,13,73,15,"tn"],[72,15,73,17],[72,16,73,18,"next"],[72,20,73,22],[73,6,74,8,"push"],[73,10,74,12],[73,13,74,15,"tn"],[73,15,74,17],[73,16,74,18,"push"],[73,20,74,22],[74,6,75,8,"peek"],[74,10,75,12],[74,13,75,15,"tn"],[74,15,75,17],[74,16,75,18,"peek"],[74,20,75,22],[75,6,76,8,"skip"],[75,10,76,12],[75,13,76,15,"tn"],[75,15,76,17],[75,16,76,18,"skip"],[75,20,76,22],[76,6,77,8,"cmnt"],[76,10,77,12],[76,13,77,15,"tn"],[76,15,77,17],[76,16,77,18,"cmnt"],[76,20,77,22],[77,4,79,4],[77,8,79,8,"head"],[77,12,79,12],[77,15,79,15],[77,19,79,19],[78,6,80,8,"pkg"],[78,9,80,11],[79,6,81,8,"imports"],[79,13,81,15],[80,6,82,8,"weakImports"],[80,17,82,19],[81,6,83,8,"edition"],[81,13,83,15],[81,16,83,18],[81,24,83,26],[82,4,85,4],[82,8,85,8,"ptr"],[82,11,85,11],[82,14,85,14,"root"],[82,18,85,18],[83,4,87,4],[83,8,87,8,"topLevelObjects"],[83,23,87,23],[83,26,87,26],[83,28,87,28],[84,4,88,4],[84,8,88,8,"topLevelOptions"],[84,23,88,23],[84,26,88,26],[84,27,88,27],[84,28,88,28],[85,4,90,4],[85,8,90,8,"applyCase"],[85,17,90,17],[85,20,90,20,"options"],[85,27,90,27],[85,28,90,28,"keepCase"],[85,36,90,36],[85,39,90,39],[85,49,90,48,"name"],[85,53,90,52],[85,55,90,54],[86,6,90,56],[86,13,90,63,"name"],[86,17,90,67],[87,4,90,69],[87,5,90,70],[87,8,90,73,"util"],[87,12,90,77],[87,13,90,78,"camelCase"],[87,22,90,87],[88,4,92,4],[88,13,92,13,"resolveFileFeatures"],[88,32,92,32,"resolveFileFeatures"],[88,33,92,32],[88,35,92,35],[89,6,93,8,"topLevelObjects"],[89,21,93,23],[89,22,93,24,"forEach"],[89,29,93,31],[89,30,93,32,"obj"],[89,33,93,35],[89,37,93,39],[90,8,94,12,"obj"],[90,11,94,15],[90,12,94,16,"_edition"],[90,20,94,24],[90,23,94,27,"edition"],[90,30,94,34],[91,8,95,12,"Object"],[91,14,95,18],[91,15,95,19,"keys"],[91,19,95,23],[91,20,95,24,"topLevelOptions"],[91,35,95,39],[91,36,95,40],[91,37,95,41,"forEach"],[91,44,95,48],[91,45,95,49,"opt"],[91,48,95,52],[91,52,95,56],[92,10,96,16],[92,14,96,20,"obj"],[92,17,96,23],[92,18,96,24,"getOption"],[92,27,96,33],[92,28,96,34,"opt"],[92,31,96,37],[92,32,96,38],[92,37,96,43,"undefined"],[92,46,96,52],[92,48,96,54],[93,10,97,16,"obj"],[93,13,97,19],[93,14,97,20,"setOption"],[93,23,97,29],[93,24,97,30,"opt"],[93,27,97,33],[93,29,97,35,"topLevelOptions"],[93,44,97,50],[93,45,97,51,"opt"],[93,48,97,54],[93,49,97,55],[93,51,97,57],[93,55,97,61],[93,56,97,62],[94,8,98,12],[94,9,98,13],[94,10,98,14],[95,6,99,8],[95,7,99,9],[95,8,99,10],[96,4,100,4],[98,4,102,4],[99,4,103,4],[99,13,103,13,"illegal"],[99,20,103,20,"illegal"],[99,21,103,21,"token"],[99,26,103,26],[99,28,103,28,"name"],[99,32,103,32],[99,34,103,34,"insideTryCatch"],[99,48,103,48],[99,50,103,50],[100,6,104,8],[100,10,104,12,"filename"],[100,18,104,20],[100,21,104,23,"parse"],[100,26,104,28],[100,27,104,29,"filename"],[100,35,104,37],[101,6,105,8],[101,10,105,12],[101,11,105,13,"insideTryCatch"],[101,25,105,27],[101,27,106,12,"parse"],[101,32,106,17],[101,33,106,18,"filename"],[101,41,106,26],[101,44,106,29],[101,48,106,33],[102,6,107,8],[102,13,107,15,"Error"],[102,18,107,20],[102,19,107,21],[102,29,107,31],[102,33,107,35,"name"],[102,37,107,39],[102,41,107,43],[102,48,107,50],[102,49,107,51],[102,52,107,54],[102,56,107,58],[102,59,107,61,"token"],[102,64,107,66],[102,67,107,69],[102,72,107,74],[102,76,107,78,"filename"],[102,84,107,86],[102,87,107,89,"filename"],[102,95,107,97],[102,98,107,100],[102,102,107,104],[102,105,107,107],[102,107,107,109],[102,108,107,110],[102,111,107,113],[102,118,107,120],[102,121,107,123,"tn"],[102,123,107,125],[102,124,107,126,"line"],[102,128,107,130],[102,131,107,133],[102,134,107,136],[102,135,107,137],[103,4,108,4],[104,4,110,4],[104,13,110,13,"readString"],[104,23,110,23,"readString"],[104,24,110,23],[104,26,110,26],[105,6,111,8],[105,10,111,12,"values"],[105,16,111,18],[105,19,111,21],[105,21,111,23],[106,8,112,12,"token"],[106,13,112,17],[107,6,113,8],[107,9,113,11],[108,8,114,12],[109,8,115,12],[109,12,115,16],[109,13,115,17,"token"],[109,18,115,22],[109,21,115,25,"next"],[109,25,115,29],[109,26,115,30],[109,27,115,31],[109,33,115,37],[109,37,115,41],[109,41,115,45,"token"],[109,46,115,50],[109,51,115,55],[109,54,115,58],[109,56,116,16],[109,62,116,22,"illegal"],[109,69,116,29],[109,70,116,30,"token"],[109,75,116,35],[109,76,116,36],[110,8,118,12,"values"],[110,14,118,18],[110,15,118,19,"push"],[110,19,118,23],[110,20,118,24,"next"],[110,24,118,28],[110,25,118,29],[110,26,118,30],[110,27,118,31],[111,8,119,12,"skip"],[111,12,119,16],[111,13,119,17,"token"],[111,18,119,22],[111,19,119,23],[112,8,120,12,"token"],[112,13,120,17],[112,16,120,20,"peek"],[112,20,120,24],[112,21,120,25],[112,22,120,26],[113,6,121,8],[113,7,121,9],[113,15,121,17,"token"],[113,20,121,22],[113,25,121,27],[113,29,121,31],[113,33,121,35,"token"],[113,38,121,40],[113,43,121,45],[113,46,121,48],[114,6,122,8],[114,13,122,15,"values"],[114,19,122,21],[114,20,122,22,"join"],[114,24,122,26],[114,25,122,27],[114,27,122,29],[114,28,122,30],[115,4,123,4],[116,4,125,4],[116,13,125,13,"readValue"],[116,22,125,22,"readValue"],[116,23,125,23,"acceptTypeRef"],[116,36,125,36],[116,38,125,38],[117,6,126,8],[117,10,126,12,"token"],[117,15,126,17],[117,18,126,20,"next"],[117,22,126,24],[117,23,126,25],[117,24,126,26],[118,6,127,8],[118,14,127,16,"token"],[118,19,127,21],[119,8,128,12],[119,13,128,17],[119,16,128,20],[120,8,129,12],[120,13,129,17],[120,17,129,21],[121,10,130,16,"push"],[121,14,130,20],[121,15,130,21,"token"],[121,20,130,26],[121,21,130,27],[122,10,131,16],[122,17,131,23,"readString"],[122,27,131,33],[122,28,131,34],[122,29,131,35],[123,8,132,12],[123,13,132,17],[123,19,132,23],[124,8,132,25],[124,13,132,30],[124,19,132,36],[125,10,133,16],[125,17,133,23],[125,21,133,27],[126,8,134,12],[126,13,134,17],[126,20,134,24],[127,8,134,26],[127,13,134,31],[127,20,134,38],[128,10,135,16],[128,17,135,23],[128,22,135,28],[129,6,136,8],[130,6,137,8],[130,10,137,12],[131,8,138,12],[131,15,138,19,"parseNumber"],[131,26,138,30],[131,27,138,31,"token"],[131,32,138,36],[131,34,138,38],[131,54,138,59],[131,58,138,63],[131,59,138,64],[132,6,139,8],[132,7,139,9],[132,8,139,10],[132,15,139,17,"e"],[132,16,139,18],[132,18,139,20],[133,8,140,12],[134,8,141,12],[134,12,141,16,"acceptTypeRef"],[134,25,141,29],[134,29,141,33,"typeRefRe"],[134,38,141,42],[134,39,141,43,"test"],[134,43,141,47],[134,44,141,48,"token"],[134,49,141,53],[134,50,141,54],[134,52,142,16],[134,59,142,23,"token"],[134,64,142,28],[136,8,144,12],[137,8,145,12],[137,14,145,18,"illegal"],[137,21,145,25],[137,22,145,26,"token"],[137,27,145,31],[137,29,145,33],[137,36,145,40],[137,37,145,41],[138,6,146,8],[139,4,147,4],[140,4,149,4],[140,13,149,13,"readRanges"],[140,23,149,23,"readRanges"],[140,24,149,24,"target"],[140,30,149,30],[140,32,149,32,"acceptStrings"],[140,45,149,45],[140,47,149,47],[141,6,150,8],[141,10,150,12,"token"],[141,15,150,17],[141,17,150,19,"start"],[141,22,150,24],[142,6,151,8],[142,9,151,11],[143,8,152,12],[143,12,152,16,"acceptStrings"],[143,25,152,29],[143,30,152,34],[143,31,152,35,"token"],[143,36,152,40],[143,39,152,43,"peek"],[143,43,152,47],[143,44,152,48],[143,45,152,49],[143,51,152,55],[143,55,152,59],[143,59,152,63,"token"],[143,64,152,68],[143,69,152,73],[143,72,152,76],[143,73,152,77],[143,75,152,79],[144,10,153,16],[144,14,153,20,"str"],[144,17,153,23],[144,20,153,26,"readString"],[144,30,153,36],[144,31,153,37],[144,32,153,38],[145,10,154,16,"target"],[145,16,154,22],[145,17,154,23,"push"],[145,21,154,27],[145,22,154,28,"str"],[145,25,154,31],[145,26,154,32],[146,10,155,16],[146,14,155,20,"edition"],[146,21,155,27],[146,25,155,31],[146,29,155,35],[146,31,155,37],[147,12,156,20],[147,18,156,26,"illegal"],[147,25,156,33],[147,26,156,34,"str"],[147,29,156,37],[147,31,156,39],[147,35,156,43],[147,36,156,44],[148,10,157,16],[149,8,158,12],[149,9,158,13],[149,15,158,19],[150,10,159,16],[150,14,159,20],[151,12,160,20,"target"],[151,18,160,26],[151,19,160,27,"push"],[151,23,160,31],[151,24,160,32],[151,25,160,34,"start"],[151,30,160,39],[151,33,160,42,"parseId"],[151,40,160,49],[151,41,160,50,"next"],[151,45,160,54],[151,46,160,55],[151,47,160,56],[151,48,160,57],[151,50,160,59,"skip"],[151,54,160,63],[151,55,160,64],[151,59,160,68],[151,61,160,70],[151,65,160,74],[151,66,160,75],[151,69,160,78,"parseId"],[151,76,160,85],[151,77,160,86,"next"],[151,81,160,90],[151,82,160,91],[151,83,160,92],[151,84,160,93],[151,87,160,96,"start"],[151,92,160,101],[151,93,160,103],[151,94,160,104],[152,10,161,16],[152,11,161,17],[152,12,161,18],[152,19,161,25,"err"],[152,22,161,28],[152,24,161,30],[153,12,162,20],[153,16,162,24,"acceptStrings"],[153,29,162,37],[153,33,162,41,"typeRefRe"],[153,42,162,50],[153,43,162,51,"test"],[153,47,162,55],[153,48,162,56,"token"],[153,53,162,61],[153,54,162,62],[153,58,162,66,"edition"],[153,65,162,73],[153,69,162,77],[153,73,162,81],[153,75,162,83],[154,14,163,24,"target"],[154,20,163,30],[154,21,163,31,"push"],[154,25,163,35],[154,26,163,36,"token"],[154,31,163,41],[154,32,163,42],[155,12,164,20],[155,13,164,21],[155,19,164,27],[156,14,165,24],[156,20,165,30,"err"],[156,23,165,33],[157,12,166,20],[158,10,167,16],[159,8,168,12],[160,6,169,8],[160,7,169,9],[160,15,169,17,"skip"],[160,19,169,21],[160,20,169,22],[160,23,169,25],[160,25,169,27],[160,29,169,31],[160,30,169,32],[161,6,170,8],[161,10,170,12,"dummy"],[161,15,170,17],[161,18,170,20],[162,8,170,21,"options"],[162,15,170,28],[162,17,170,30,"undefined"],[163,6,170,39],[163,7,170,40],[164,6,171,8,"dummy"],[164,11,171,13],[164,12,171,14,"setOption"],[164,21,171,23],[164,24,171,26],[164,34,171,35,"name"],[164,38,171,39],[164,40,171,41,"value"],[164,45,171,46],[164,47,171,48],[165,8,172,10],[165,12,172,14],[165,16,172,18],[165,17,172,19,"options"],[165,24,172,26],[165,29,172,31,"undefined"],[165,38,172,40],[165,40,172,42],[165,44,172,46],[165,45,172,47,"options"],[165,52,172,54],[165,55,172,57],[165,56,172,58],[165,57,172,59],[166,8,173,10],[166,12,173,14],[166,13,173,15,"options"],[166,20,173,22],[166,21,173,23,"name"],[166,25,173,27],[166,26,173,28],[166,29,173,31,"value"],[166,34,173,36],[167,6,174,8],[167,7,174,9],[168,6,175,8,"ifBlock"],[168,13,175,15],[168,14,176,12,"dummy"],[168,19,176,17],[168,21,177,12],[168,30,177,21,"parseRange_block"],[168,46,177,37,"parseRange_block"],[168,47,177,38,"token"],[168,52,177,43],[168,54,177,45],[169,8,178,14],[170,8,179,14],[170,12,179,18,"token"],[170,17,179,23],[170,22,179,28],[170,30,179,36],[170,32,179,38],[171,10,180,16,"parseOption"],[171,21,180,27],[171,22,180,28,"dummy"],[171,27,180,33],[171,29,180,35,"token"],[171,34,180,40],[171,35,180,41],[171,36,180,42],[171,37,180,44],[172,10,181,16,"skip"],[172,14,181,20],[172,15,181,21],[172,18,181,24],[172,19,181,25],[173,8,182,14],[173,9,182,15],[173,15,183,16],[173,21,183,22,"illegal"],[173,28,183,29],[173,29,183,30,"token"],[173,34,183,35],[173,35,183,36],[174,6,184,12],[174,7,184,13],[174,9,185,12],[174,18,185,21,"parseRange_line"],[174,33,185,36,"parseRange_line"],[174,34,185,36],[174,36,185,39],[175,8,186,14,"parseInlineOptions"],[175,26,186,32],[175,27,186,33,"dummy"],[175,32,186,38],[175,33,186,39],[175,34,186,40],[175,35,186,42],[176,6,187,12],[176,7,187,13],[176,8,187,14],[177,4,188,4],[178,4,190,4],[178,13,190,13,"parseNumber"],[178,24,190,24,"parseNumber"],[178,25,190,25,"token"],[178,30,190,30],[178,32,190,32,"insideTryCatch"],[178,46,190,46],[178,48,190,48],[179,6,191,8],[179,10,191,12,"sign"],[179,14,191,16],[179,17,191,19],[179,18,191,20],[180,6,192,8],[180,10,192,12,"token"],[180,15,192,17],[180,16,192,18,"charAt"],[180,22,192,24],[180,23,192,25],[180,24,192,26],[180,25,192,27],[180,30,192,32],[180,33,192,35],[180,35,192,37],[181,8,193,12,"sign"],[181,12,193,16],[181,15,193,19],[181,16,193,20],[181,17,193,21],[182,8,194,12,"token"],[182,13,194,17],[182,16,194,20,"token"],[182,21,194,25],[182,22,194,26,"substring"],[182,31,194,35],[182,32,194,36],[182,33,194,37],[182,34,194,38],[183,6,195,8],[184,6,196,8],[184,14,196,16,"token"],[184,19,196,21],[185,8,197,12],[185,13,197,17],[185,18,197,22],[186,8,197,24],[186,13,197,29],[186,18,197,34],[187,8,197,36],[187,13,197,41],[187,18,197,46],[188,10,198,16],[188,17,198,23,"sign"],[188,21,198,27],[188,24,198,30,"Infinity"],[188,32,198,38],[189,8,199,12],[189,13,199,17],[189,18,199,22],[190,8,199,24],[190,13,199,29],[190,18,199,34],[191,8,199,36],[191,13,199,41],[191,18,199,46],[192,8,199,48],[192,13,199,53],[192,18,199,58],[193,10,200,16],[193,17,200,23,"NaN"],[193,20,200,26],[194,8,201,12],[194,13,201,17],[194,16,201,20],[195,10,202,16],[195,17,202,23],[195,18,202,24],[196,6,203,8],[197,6,204,8],[197,10,204,12,"base10Re"],[197,18,204,20],[197,19,204,21,"test"],[197,23,204,25],[197,24,204,26,"token"],[197,29,204,31],[197,30,204,32],[197,32,205,12],[197,39,205,19,"sign"],[197,43,205,23],[197,46,205,26,"parseInt"],[197,54,205,34],[197,55,205,35,"token"],[197,60,205,40],[197,62,205,42],[197,64,205,44],[197,65,205,45],[198,6,206,8],[198,10,206,12,"base16Re"],[198,18,206,20],[198,19,206,21,"test"],[198,23,206,25],[198,24,206,26,"token"],[198,29,206,31],[198,30,206,32],[198,32,207,12],[198,39,207,19,"sign"],[198,43,207,23],[198,46,207,26,"parseInt"],[198,54,207,34],[198,55,207,35,"token"],[198,60,207,40],[198,62,207,42],[198,64,207,44],[198,65,207,45],[199,6,208,8],[199,10,208,12,"base8Re"],[199,17,208,19],[199,18,208,20,"test"],[199,22,208,24],[199,23,208,25,"token"],[199,28,208,30],[199,29,208,31],[199,31,209,12],[199,38,209,19,"sign"],[199,42,209,23],[199,45,209,26,"parseInt"],[199,53,209,34],[199,54,209,35,"token"],[199,59,209,40],[199,61,209,42],[199,62,209,43],[199,63,209,44],[201,6,211,8],[202,6,212,8],[202,10,212,12,"numberRe"],[202,18,212,20],[202,19,212,21,"test"],[202,23,212,25],[202,24,212,26,"token"],[202,29,212,31],[202,30,212,32],[202,32,213,12],[202,39,213,19,"sign"],[202,43,213,23],[202,46,213,26,"parseFloat"],[202,56,213,36],[202,57,213,37,"token"],[202,62,213,42],[202,63,213,43],[204,6,215,8],[205,6,216,8],[205,12,216,14,"illegal"],[205,19,216,21],[205,20,216,22,"token"],[205,25,216,27],[205,27,216,29],[205,35,216,37],[205,37,216,39,"insideTryCatch"],[205,51,216,53],[205,52,216,54],[206,4,217,4],[207,4,219,4],[207,13,219,13,"parseId"],[207,20,219,20,"parseId"],[207,21,219,21,"token"],[207,26,219,26],[207,28,219,28,"acceptNegative"],[207,42,219,42],[207,44,219,44],[208,6,220,8],[208,14,220,16,"token"],[208,19,220,21],[209,8,221,12],[209,13,221,17],[209,18,221,22],[210,8,221,24],[210,13,221,29],[210,18,221,34],[211,8,221,36],[211,13,221,41],[211,18,221,46],[212,10,222,16],[212,17,222,23],[212,26,222,32],[213,8,223,12],[213,13,223,17],[213,16,223,20],[214,10,224,16],[214,17,224,23],[214,18,224,24],[215,6,225,8],[217,6,227,8],[218,6,228,8],[218,10,228,12],[218,11,228,13,"acceptNegative"],[218,25,228,27],[218,29,228,31,"token"],[218,34,228,36],[218,35,228,37,"charAt"],[218,41,228,43],[218,42,228,44],[218,43,228,45],[218,44,228,46],[218,49,228,51],[218,52,228,54],[218,54,229,12],[218,60,229,18,"illegal"],[218,67,229,25],[218,68,229,26,"token"],[218,73,229,31],[218,75,229,33],[218,79,229,37],[218,80,229,38],[219,6,231,8],[219,10,231,12,"base10NegRe"],[219,21,231,23],[219,22,231,24,"test"],[219,26,231,28],[219,27,231,29,"token"],[219,32,231,34],[219,33,231,35],[219,35,232,12],[219,42,232,19,"parseInt"],[219,50,232,27],[219,51,232,28,"token"],[219,56,232,33],[219,58,232,35],[219,60,232,37],[219,61,232,38],[220,6,233,8],[220,10,233,12,"base16NegRe"],[220,21,233,23],[220,22,233,24,"test"],[220,26,233,28],[220,27,233,29,"token"],[220,32,233,34],[220,33,233,35],[220,35,234,12],[220,42,234,19,"parseInt"],[220,50,234,27],[220,51,234,28,"token"],[220,56,234,33],[220,58,234,35],[220,60,234,37],[220,61,234,38],[222,6,236,8],[223,6,237,8],[223,10,237,12,"base8NegRe"],[223,20,237,22],[223,21,237,23,"test"],[223,25,237,27],[223,26,237,28,"token"],[223,31,237,33],[223,32,237,34],[223,34,238,12],[223,41,238,19,"parseInt"],[223,49,238,27],[223,50,238,28,"token"],[223,55,238,33],[223,57,238,35],[223,58,238,36],[223,59,238,37],[225,6,240,8],[226,6,241,8],[226,12,241,14,"illegal"],[226,19,241,21],[226,20,241,22,"token"],[226,25,241,27],[226,27,241,29],[226,31,241,33],[226,32,241,34],[227,4,242,4],[228,4,244,4],[228,13,244,13,"parsePackage"],[228,25,244,25,"parsePackage"],[228,26,244,25],[228,28,244,28],[229,6,245,8],[230,6,246,8],[230,10,246,12,"pkg"],[230,13,246,15],[230,18,246,20,"undefined"],[230,27,246,29],[230,29,247,12],[230,35,247,18,"illegal"],[230,42,247,25],[230,43,247,26],[230,52,247,35],[230,53,247,36],[231,6,249,8,"pkg"],[231,9,249,11],[231,12,249,14,"next"],[231,16,249,18],[231,17,249,19],[231,18,249,20],[233,6,251,8],[234,6,252,8],[234,10,252,12],[234,11,252,13,"typeRefRe"],[234,20,252,22],[234,21,252,23,"test"],[234,25,252,27],[234,26,252,28,"pkg"],[234,29,252,31],[234,30,252,32],[234,32,253,12],[234,38,253,18,"illegal"],[234,45,253,25],[234,46,253,26,"pkg"],[234,49,253,29],[234,51,253,31],[234,57,253,37],[234,58,253,38],[235,6,255,8,"ptr"],[235,9,255,11],[235,12,255,14,"ptr"],[235,15,255,17],[235,16,255,18,"define"],[235,22,255,24],[235,23,255,25,"pkg"],[235,26,255,28],[235,27,255,29],[236,6,257,8,"skip"],[236,10,257,12],[236,11,257,13],[236,14,257,16],[236,15,257,17],[237,4,258,4],[238,4,260,4],[238,13,260,13,"parseImport"],[238,24,260,24,"parseImport"],[238,25,260,24],[238,27,260,27],[239,6,261,8],[239,10,261,12,"token"],[239,15,261,17],[239,18,261,20,"peek"],[239,22,261,24],[239,23,261,25],[239,24,261,26],[240,6,262,8],[240,10,262,12,"whichImports"],[240,22,262,24],[241,6,263,8],[241,14,263,16,"token"],[241,19,263,21],[242,8,264,12],[242,13,264,17],[242,19,264,23],[243,10,265,16,"whichImports"],[243,22,265,28],[243,25,265,31,"weakImports"],[243,36,265,42],[243,41,265,47,"weakImports"],[243,52,265,58],[243,55,265,61],[243,57,265,63],[243,58,265,64],[244,10,266,16,"next"],[244,14,266,20],[244,15,266,21],[244,16,266,22],[245,10,267,16],[246,8,268,12],[246,13,268,17],[246,21,268,25],[247,10,269,16,"next"],[247,14,269,20],[247,15,269,21],[247,16,269,22],[248,8,270,16],[249,8,271,12],[250,10,272,16,"whichImports"],[250,22,272,28],[250,25,272,31,"imports"],[250,32,272,38],[250,37,272,43,"imports"],[250,44,272,50],[250,47,272,53],[250,49,272,55],[250,50,272,56],[251,10,273,16],[252,6,274,8],[253,6,275,8,"token"],[253,11,275,13],[253,14,275,16,"readString"],[253,24,275,26],[253,25,275,27],[253,26,275,28],[254,6,276,8,"skip"],[254,10,276,12],[254,11,276,13],[254,14,276,16],[254,15,276,17],[255,6,277,8,"whichImports"],[255,18,277,20],[255,19,277,21,"push"],[255,23,277,25],[255,24,277,26,"token"],[255,29,277,31],[255,30,277,32],[256,4,278,4],[257,4,280,4],[257,13,280,13,"parseSyntax"],[257,24,280,24,"parseSyntax"],[257,25,280,24],[257,27,280,27],[258,6,281,8,"skip"],[258,10,281,12],[258,11,281,13],[258,14,281,16],[258,15,281,17],[259,6,282,8,"edition"],[259,13,282,15],[259,16,282,18,"readString"],[259,26,282,28],[259,27,282,29],[259,28,282,30],[261,6,284,8],[262,6,285,8],[262,10,285,12,"edition"],[262,17,285,19],[262,20,285,22],[262,24,285,26],[262,26,286,12],[262,32,286,18,"illegal"],[262,39,286,25],[262,40,286,26,"edition"],[262,47,286,33],[262,49,286,35],[262,57,286,43],[262,58,286,44],[263,6,288,8,"skip"],[263,10,288,12],[263,11,288,13],[263,14,288,16],[263,15,288,17],[264,4,289,4],[265,4,291,4],[265,13,291,13,"parseEdition"],[265,25,291,25,"parseEdition"],[265,26,291,25],[265,28,291,28],[266,6,292,8,"skip"],[266,10,292,12],[266,11,292,13],[266,14,292,16],[266,15,292,17],[267,6,293,8,"edition"],[267,13,293,15],[267,16,293,18,"readString"],[267,26,293,28],[267,27,293,29],[267,28,293,30],[268,6,294,8],[268,12,294,14,"supportedEditions"],[268,29,294,31],[268,32,294,34],[268,33,294,35],[268,39,294,41],[268,40,294,42],[270,6,296,8],[271,6,297,8],[271,10,297,12],[271,11,297,13,"supportedEditions"],[271,28,297,30],[271,29,297,31,"includes"],[271,37,297,39],[271,38,297,40,"edition"],[271,45,297,47],[271,46,297,48],[271,48,298,12],[271,54,298,18,"illegal"],[271,61,298,25],[271,62,298,26,"edition"],[271,69,298,33],[271,71,298,35],[271,80,298,44],[271,81,298,45],[272,6,300,8,"skip"],[272,10,300,12],[272,11,300,13],[272,14,300,16],[272,15,300,17],[273,4,301,4],[274,4,304,4],[274,13,304,13,"parseCommon"],[274,24,304,24,"parseCommon"],[274,25,304,25,"parent"],[274,31,304,31],[274,33,304,33,"token"],[274,38,304,38],[274,40,304,40],[275,6,305,8],[275,14,305,16,"token"],[275,19,305,21],[276,8,307,12],[276,13,307,17],[276,21,307,25],[277,10,308,16,"parseOption"],[277,21,308,27],[277,22,308,28,"parent"],[277,28,308,34],[277,30,308,36,"token"],[277,35,308,41],[277,36,308,42],[278,10,309,16,"skip"],[278,14,309,20],[278,15,309,21],[278,18,309,24],[278,19,309,25],[279,10,310,16],[279,17,310,23],[279,21,310,27],[280,8,312,12],[280,13,312,17],[280,22,312,26],[281,10,313,16,"parseType"],[281,19,313,25],[281,20,313,26,"parent"],[281,26,313,32],[281,28,313,34,"token"],[281,33,313,39],[281,34,313,40],[282,10,314,16],[282,17,314,23],[282,21,314,27],[283,8,316,12],[283,13,316,17],[283,19,316,23],[284,10,317,16,"parseEnum"],[284,19,317,25],[284,20,317,26,"parent"],[284,26,317,32],[284,28,317,34,"token"],[284,33,317,39],[284,34,317,40],[285,10,318,16],[285,17,318,23],[285,21,318,27],[286,8,320,12],[286,13,320,17],[286,22,320,26],[287,10,321,16,"parseService"],[287,22,321,28],[287,23,321,29,"parent"],[287,29,321,35],[287,31,321,37,"token"],[287,36,321,42],[287,37,321,43],[288,10,322,16],[288,17,322,23],[288,21,322,27],[289,8,324,12],[289,13,324,17],[289,21,324,25],[290,10,325,16,"parseExtension"],[290,24,325,30],[290,25,325,31,"parent"],[290,31,325,37],[290,33,325,39,"token"],[290,38,325,44],[290,39,325,45],[291,10,326,16],[291,17,326,23],[291,21,326,27],[292,6,327,8],[293,6,328,8],[293,13,328,15],[293,18,328,20],[294,4,329,4],[295,4,331,4],[295,13,331,13,"ifBlock"],[295,20,331,20,"ifBlock"],[295,21,331,21,"obj"],[295,24,331,24],[295,26,331,26,"fnIf"],[295,30,331,30],[295,32,331,32,"fnElse"],[295,38,331,38],[295,40,331,40],[296,6,332,8],[296,10,332,12,"trailingLine"],[296,22,332,24],[296,25,332,27,"tn"],[296,27,332,29],[296,28,332,30,"line"],[296,32,332,34],[297,6,333,8],[297,10,333,12,"obj"],[297,13,333,15],[297,15,333,17],[298,8,334,12],[298,12,334,15],[298,19,334,22,"obj"],[298,22,334,25],[298,23,334,26,"comment"],[298,30,334,33],[298,35,334,38],[298,43,334,46],[298,45,334,48],[299,10,335,14,"obj"],[299,13,335,17],[299,14,335,18,"comment"],[299,21,335,25],[299,24,335,28,"cmnt"],[299,28,335,32],[299,29,335,33],[299,30,335,34],[299,31,335,35],[299,32,335,36],[300,8,336,12],[301,8,337,12,"obj"],[301,11,337,15],[301,12,337,16,"filename"],[301,20,337,24],[301,23,337,27,"parse"],[301,28,337,32],[301,29,337,33,"filename"],[301,37,337,41],[302,6,338,8],[303,6,339,8],[303,10,339,12,"skip"],[303,14,339,16],[303,15,339,17],[303,18,339,20],[303,20,339,22],[303,24,339,26],[303,25,339,27],[303,27,339,29],[304,8,340,12],[304,12,340,16,"token"],[304,17,340,21],[305,8,341,12],[305,15,341,19],[305,16,341,20,"token"],[305,21,341,25],[305,24,341,28,"next"],[305,28,341,32],[305,29,341,33],[305,30,341,34],[305,36,341,40],[305,39,341,43],[305,41,342,16,"fnIf"],[305,45,342,20],[305,46,342,21,"token"],[305,51,342,26],[305,52,342,27],[306,8,343,12,"skip"],[306,12,343,16],[306,13,343,17],[306,16,343,20],[306,18,343,22],[306,22,343,26],[306,23,343,27],[307,6,344,8],[307,7,344,9],[307,13,344,15],[308,8,345,12],[308,12,345,16,"fnElse"],[308,18,345,22],[308,20,346,16,"fnElse"],[308,26,346,22],[308,27,346,23],[308,28,346,24],[309,8,347,12,"skip"],[309,12,347,16],[309,13,347,17],[309,16,347,20],[309,17,347,21],[310,8,348,12],[310,12,348,16,"obj"],[310,15,348,19],[310,20,348,24],[310,27,348,31,"obj"],[310,30,348,34],[310,31,348,35,"comment"],[310,38,348,42],[310,43,348,47],[310,51,348,55],[310,55,348,59,"preferTrailingComment"],[310,76,348,80],[310,77,348,81],[310,79,349,16,"obj"],[310,82,349,19],[310,83,349,20,"comment"],[310,90,349,27],[310,93,349,30,"cmnt"],[310,97,349,34],[310,98,349,35,"trailingLine"],[310,110,349,47],[310,111,349,48],[310,115,349,52,"obj"],[310,118,349,55],[310,119,349,56,"comment"],[310,126,349,63],[310,127,349,64],[310,128,349,65],[311,6,350,8],[312,4,351,4],[313,4,353,4],[313,13,353,13,"parseType"],[313,22,353,22,"parseType"],[313,23,353,23,"parent"],[313,29,353,29],[313,31,353,31,"token"],[313,36,353,36],[313,38,353,38],[314,6,355,8],[315,6,356,8],[315,10,356,12],[315,11,356,13,"nameRe"],[315,17,356,19],[315,18,356,20,"test"],[315,22,356,24],[315,23,356,25,"token"],[315,28,356,30],[315,31,356,33,"next"],[315,35,356,37],[315,36,356,38],[315,37,356,39],[315,38,356,40],[315,40,357,12],[315,46,357,18,"illegal"],[315,53,357,25],[315,54,357,26,"token"],[315,59,357,31],[315,61,357,33],[315,72,357,44],[315,73,357,45],[316,6,359,8],[316,10,359,12,"type"],[316,14,359,16],[316,17,359,19],[316,21,359,23,"Type"],[316,25,359,27],[316,26,359,28,"token"],[316,31,359,33],[316,32,359,34],[317,6,360,8,"ifBlock"],[317,13,360,15],[317,14,360,16,"type"],[317,18,360,20],[317,20,360,22],[317,29,360,31,"parseType_block"],[317,44,360,46,"parseType_block"],[317,45,360,47,"token"],[317,50,360,52],[317,52,360,54],[318,8,361,12],[318,12,361,16,"parseCommon"],[318,23,361,27],[318,24,361,28,"type"],[318,28,361,32],[318,30,361,34,"token"],[318,35,361,39],[318,36,361,40],[318,38,362,16],[319,8,364,12],[319,16,364,20,"token"],[319,21,364,25],[320,10,366,16],[320,15,366,21],[320,20,366,26],[321,12,367,20,"parseMapField"],[321,25,367,33],[321,26,367,34,"type"],[321,30,367,38],[321,32,367,40,"token"],[321,37,367,45],[321,38,367,46],[322,12,368,20],[323,10,370,16],[323,15,370,21],[323,25,370,31],[324,12,371,20],[324,16,371,24,"edition"],[324,23,371,31],[324,28,371,36],[324,36,371,44],[324,38,372,24],[324,44,372,30,"illegal"],[324,51,372,37],[324,52,372,38,"token"],[324,57,372,43],[324,58,372,44],[325,10,373,16],[326,10,374,16],[326,15,374,21],[326,25,374,31],[327,12,375,20,"parseField"],[327,22,375,30],[327,23,375,31,"type"],[327,27,375,35],[327,29,375,37,"token"],[327,34,375,42],[327,35,375,43],[328,12,376,20],[329,10,378,16],[329,15,378,21],[329,25,378,31],[330,12,379,20],[331,12,380,20],[331,16,380,24,"edition"],[331,23,380,31],[331,28,380,36],[331,36,380,44],[331,38,380,46],[332,14,381,24,"parseField"],[332,24,381,34],[332,25,381,35,"type"],[332,29,381,39],[332,31,381,41],[332,48,381,58],[332,49,381,59],[333,12,382,20],[333,13,382,21],[333,19,382,27],[333,23,382,31,"edition"],[333,30,382,38],[333,35,382,43],[333,43,382,51],[333,45,382,53],[334,14,383,24],[334,20,383,30,"illegal"],[334,27,383,37],[334,28,383,38,"token"],[334,33,383,43],[334,34,383,44],[335,12,384,20],[335,13,384,21],[335,19,384,27],[336,14,385,24,"parseField"],[336,24,385,34],[336,25,385,35,"type"],[336,29,385,39],[336,31,385,41],[336,41,385,51],[336,42,385,52],[337,12,386,20],[338,12,387,20],[339,10,389,16],[339,15,389,21],[339,22,389,28],[340,12,390,20,"parseOneOf"],[340,22,390,30],[340,23,390,31,"type"],[340,27,390,35],[340,29,390,37,"token"],[340,34,390,42],[340,35,390,43],[341,12,391,20],[342,10,393,16],[342,15,393,21],[342,27,393,33],[343,12,394,20,"readRanges"],[343,22,394,30],[343,23,394,31,"type"],[343,27,394,35],[343,28,394,36,"extensions"],[343,38,394,46],[343,43,394,51,"type"],[343,47,394,55],[343,48,394,56,"extensions"],[343,58,394,66],[343,61,394,69],[343,63,394,71],[343,64,394,72],[343,65,394,73],[344,12,395,20],[345,10,397,16],[345,15,397,21],[345,25,397,31],[346,12,398,20,"readRanges"],[346,22,398,30],[346,23,398,31,"type"],[346,27,398,35],[346,28,398,36,"reserved"],[346,36,398,44],[346,41,398,49,"type"],[346,45,398,53],[346,46,398,54,"reserved"],[346,54,398,62],[346,57,398,65],[346,59,398,67],[346,60,398,68],[346,62,398,70],[346,66,398,74],[346,67,398,75],[347,12,399,20],[348,10,401,16],[349,12,402,20],[350,12,403,20],[350,16,403,24,"edition"],[350,23,403,31],[350,28,403,36],[350,36,403,44],[350,40,403,48],[350,41,403,49,"typeRefRe"],[350,50,403,58],[350,51,403,59,"test"],[350,55,403,63],[350,56,403,64,"token"],[350,61,403,69],[350,62,403,70],[350,64,403,72],[351,14,404,24],[351,20,404,30,"illegal"],[351,27,404,37],[351,28,404,38,"token"],[351,33,404,43],[351,34,404,44],[352,12,405,20],[353,12,407,20,"push"],[353,16,407,24],[353,17,407,25,"token"],[353,22,407,30],[353,23,407,31],[354,12,408,20,"parseField"],[354,22,408,30],[354,23,408,31,"type"],[354,27,408,35],[354,29,408,37],[354,39,408,47],[354,40,408,48],[355,12,409,20],[356,8,410,12],[357,6,411,8],[357,7,411,9],[357,8,411,10],[358,6,412,8,"parent"],[358,12,412,14],[358,13,412,15,"add"],[358,16,412,18],[358,17,412,19,"type"],[358,21,412,23],[358,22,412,24],[359,6,413,8],[359,10,413,12,"parent"],[359,16,413,18],[359,21,413,23,"ptr"],[359,24,413,26],[359,26,413,28],[360,8,414,12,"topLevelObjects"],[360,23,414,27],[360,24,414,28,"push"],[360,28,414,32],[360,29,414,33,"type"],[360,33,414,37],[360,34,414,38],[361,6,415,8],[362,4,416,4],[363,4,418,4],[363,13,418,13,"parseField"],[363,23,418,23,"parseField"],[363,24,418,24,"parent"],[363,30,418,30],[363,32,418,32,"rule"],[363,36,418,36],[363,38,418,38,"extend"],[363,44,418,44],[363,46,418,46],[364,6,419,8],[364,10,419,12,"type"],[364,14,419,16],[364,17,419,19,"next"],[364,21,419,23],[364,22,419,24],[364,23,419,25],[365,6,420,8],[365,10,420,12,"type"],[365,14,420,16],[365,19,420,21],[365,26,420,28],[365,28,420,30],[366,8,421,12,"parseGroup"],[366,18,421,22],[366,19,421,23,"parent"],[366,25,421,29],[366,27,421,31,"rule"],[366,31,421,35],[366,32,421,36],[367,8,422,12],[368,6,423,8],[369,6,424,8],[370,6,425,8],[371,6,426,8],[372,6,427,8],[373,6,428,8],[374,6,429,8],[375,6,430,8],[376,6,431,8],[376,13,431,15,"type"],[376,17,431,19],[376,18,431,20,"endsWith"],[376,26,431,28],[376,27,431,29],[376,30,431,32],[376,31,431,33],[376,35,431,37,"peek"],[376,39,431,41],[376,40,431,42],[376,41,431,43],[376,42,431,44,"startsWith"],[376,52,431,54],[376,53,431,55],[376,56,431,58],[376,57,431,59],[376,59,431,61],[377,8,432,12,"type"],[377,12,432,16],[377,16,432,20,"next"],[377,20,432,24],[377,21,432,25],[377,22,432,26],[378,6,433,8],[380,6,435,8],[381,6,436,8],[381,10,436,12],[381,11,436,13,"typeRefRe"],[381,20,436,22],[381,21,436,23,"test"],[381,25,436,27],[381,26,436,28,"type"],[381,30,436,32],[381,31,436,33],[381,33,437,12],[381,39,437,18,"illegal"],[381,46,437,25],[381,47,437,26,"type"],[381,51,437,30],[381,53,437,32],[381,59,437,38],[381,60,437,39],[382,6,439,8],[382,10,439,12,"name"],[382,14,439,16],[382,17,439,19,"next"],[382,21,439,23],[382,22,439,24],[382,23,439,25],[384,6,441,8],[386,6,443,8],[386,10,443,12],[386,11,443,13,"nameRe"],[386,17,443,19],[386,18,443,20,"test"],[386,22,443,24],[386,23,443,25,"name"],[386,27,443,29],[386,28,443,30],[386,30,444,12],[386,36,444,18,"illegal"],[386,43,444,25],[386,44,444,26,"name"],[386,48,444,30],[386,50,444,32],[386,56,444,38],[386,57,444,39],[387,6,446,8,"name"],[387,10,446,12],[387,13,446,15,"applyCase"],[387,22,446,24],[387,23,446,25,"name"],[387,27,446,29],[387,28,446,30],[388,6,447,8,"skip"],[388,10,447,12],[388,11,447,13],[388,14,447,16],[388,15,447,17],[389,6,449,8],[389,10,449,12,"field"],[389,15,449,17],[389,18,449,20],[389,22,449,24,"Field"],[389,27,449,29],[389,28,449,30,"name"],[389,32,449,34],[389,34,449,36,"parseId"],[389,41,449,43],[389,42,449,44,"next"],[389,46,449,48],[389,47,449,49],[389,48,449,50],[389,49,449,51],[389,51,449,53,"type"],[389,55,449,57],[389,57,449,59,"rule"],[389,61,449,63],[389,63,449,65,"extend"],[389,69,449,71],[389,70,449,72],[390,6,451,8,"ifBlock"],[390,13,451,15],[390,14,451,16,"field"],[390,19,451,21],[390,21,451,23],[390,30,451,32,"parseField_block"],[390,46,451,48,"parseField_block"],[390,47,451,49,"token"],[390,52,451,54],[390,54,451,56],[391,8,453,12],[392,8,454,12],[392,12,454,16,"token"],[392,17,454,21],[392,22,454,26],[392,30,454,34],[392,32,454,36],[393,10,455,16,"parseOption"],[393,21,455,27],[393,22,455,28,"field"],[393,27,455,33],[393,29,455,35,"token"],[393,34,455,40],[393,35,455,41],[394,10,456,16,"skip"],[394,14,456,20],[394,15,456,21],[394,18,456,24],[394,19,456,25],[395,8,457,12],[395,9,457,13],[395,15,458,16],[395,21,458,22,"illegal"],[395,28,458,29],[395,29,458,30,"token"],[395,34,458,35],[395,35,458,36],[396,6,460,8],[396,7,460,9],[396,9,460,11],[396,18,460,20,"parseField_line"],[396,33,460,35,"parseField_line"],[396,34,460,35],[396,36,460,38],[397,8,461,12,"parseInlineOptions"],[397,26,461,30],[397,27,461,31,"field"],[397,32,461,36],[397,33,461,37],[398,6,462,8],[398,7,462,9],[398,8,462,10],[399,6,464,8],[399,10,464,12,"rule"],[399,14,464,16],[399,19,464,21],[399,36,464,38],[399,38,464,40],[400,8,465,12],[401,8,466,12],[401,12,466,16,"oneof"],[401,17,466,21],[401,20,466,24],[401,24,466,28,"OneOf"],[401,29,466,33],[401,30,466,34],[401,33,466,37],[401,36,466,40,"name"],[401,40,466,44],[401,41,466,45],[402,8,467,12,"field"],[402,13,467,17],[402,14,467,18,"setOption"],[402,23,467,27],[402,24,467,28],[402,41,467,45],[402,43,467,47],[402,47,467,51],[402,48,467,52],[403,8,468,12,"oneof"],[403,13,468,17],[403,14,468,18,"add"],[403,17,468,21],[403,18,468,22,"field"],[403,23,468,27],[403,24,468,28],[404,8,469,12,"parent"],[404,14,469,18],[404,15,469,19,"add"],[404,18,469,22],[404,19,469,23,"oneof"],[404,24,469,28],[404,25,469,29],[405,6,470,8],[405,7,470,9],[405,13,470,15],[406,8,471,12,"parent"],[406,14,471,18],[406,15,471,19,"add"],[406,18,471,22],[406,19,471,23,"field"],[406,24,471,28],[406,25,471,29],[407,6,472,8],[408,6,473,8],[408,10,473,12,"parent"],[408,16,473,18],[408,21,473,23,"ptr"],[408,24,473,26],[408,26,473,28],[409,8,474,12,"topLevelObjects"],[409,23,474,27],[409,24,474,28,"push"],[409,28,474,32],[409,29,474,33,"field"],[409,34,474,38],[409,35,474,39],[410,6,475,8],[411,4,476,4],[412,4,478,4],[412,13,478,13,"parseGroup"],[412,23,478,23,"parseGroup"],[412,24,478,24,"parent"],[412,30,478,30],[412,32,478,32,"rule"],[412,36,478,36],[412,38,478,38],[413,6,479,8],[413,10,479,12,"edition"],[413,17,479,19],[413,21,479,23],[413,25,479,27],[413,27,479,29],[414,8,480,12],[414,14,480,18,"illegal"],[414,21,480,25],[414,22,480,26],[414,29,480,33],[414,30,480,34],[415,6,481,8],[416,6,482,8],[416,10,482,12,"name"],[416,14,482,16],[416,17,482,19,"next"],[416,21,482,23],[416,22,482,24],[416,23,482,25],[418,6,484,8],[419,6,485,8],[419,10,485,12],[419,11,485,13,"nameRe"],[419,17,485,19],[419,18,485,20,"test"],[419,22,485,24],[419,23,485,25,"name"],[419,27,485,29],[419,28,485,30],[419,30,486,12],[419,36,486,18,"illegal"],[419,43,486,25],[419,44,486,26,"name"],[419,48,486,30],[419,50,486,32],[419,56,486,38],[419,57,486,39],[420,6,488,8],[420,10,488,12,"fieldName"],[420,19,488,21],[420,22,488,24,"util"],[420,26,488,28],[420,27,488,29,"lcFirst"],[420,34,488,36],[420,35,488,37,"name"],[420,39,488,41],[420,40,488,42],[421,6,489,8],[421,10,489,12,"name"],[421,14,489,16],[421,19,489,21,"fieldName"],[421,28,489,30],[421,30,490,12,"name"],[421,34,490,16],[421,37,490,19,"util"],[421,41,490,23],[421,42,490,24,"ucFirst"],[421,49,490,31],[421,50,490,32,"name"],[421,54,490,36],[421,55,490,37],[422,6,491,8,"skip"],[422,10,491,12],[422,11,491,13],[422,14,491,16],[422,15,491,17],[423,6,492,8],[423,10,492,12,"id"],[423,12,492,14],[423,15,492,17,"parseId"],[423,22,492,24],[423,23,492,25,"next"],[423,27,492,29],[423,28,492,30],[423,29,492,31],[423,30,492,32],[424,6,493,8],[424,10,493,12,"type"],[424,14,493,16],[424,17,493,19],[424,21,493,23,"Type"],[424,25,493,27],[424,26,493,28,"name"],[424,30,493,32],[424,31,493,33],[425,6,494,8,"type"],[425,10,494,12],[425,11,494,13,"group"],[425,16,494,18],[425,19,494,21],[425,23,494,25],[426,6,495,8],[426,10,495,12,"field"],[426,15,495,17],[426,18,495,20],[426,22,495,24,"Field"],[426,27,495,29],[426,28,495,30,"fieldName"],[426,37,495,39],[426,39,495,41,"id"],[426,41,495,43],[426,43,495,45,"name"],[426,47,495,49],[426,49,495,51,"rule"],[426,53,495,55],[426,54,495,56],[427,6,496,8,"field"],[427,11,496,13],[427,12,496,14,"filename"],[427,20,496,22],[427,23,496,25,"parse"],[427,28,496,30],[427,29,496,31,"filename"],[427,37,496,39],[428,6,497,8,"ifBlock"],[428,13,497,15],[428,14,497,16,"type"],[428,18,497,20],[428,20,497,22],[428,29,497,31,"parseGroup_block"],[428,45,497,47,"parseGroup_block"],[428,46,497,48,"token"],[428,51,497,53],[428,53,497,55],[429,8,498,12],[429,16,498,20,"token"],[429,21,498,25],[430,10,500,16],[430,15,500,21],[430,23,500,29],[431,12,501,20,"parseOption"],[431,23,501,31],[431,24,501,32,"type"],[431,28,501,36],[431,30,501,38,"token"],[431,35,501,43],[431,36,501,44],[432,12,502,20,"skip"],[432,16,502,24],[432,17,502,25],[432,20,502,28],[432,21,502,29],[433,12,503,20],[434,10,504,16],[434,15,504,21],[434,25,504,31],[435,10,505,16],[435,15,505,21],[435,25,505,31],[436,12,506,20,"parseField"],[436,22,506,30],[436,23,506,31,"type"],[436,27,506,35],[436,29,506,37,"token"],[436,34,506,42],[436,35,506,43],[437,12,507,20],[438,10,509,16],[438,15,509,21],[438,25,509,31],[439,12,510,20],[440,12,511,20],[440,16,511,24,"edition"],[440,23,511,31],[440,28,511,36],[440,36,511,44],[440,38,511,46],[441,14,512,24,"parseField"],[441,24,512,34],[441,25,512,35,"type"],[441,29,512,39],[441,31,512,41],[441,48,512,58],[441,49,512,59],[442,12,513,20],[442,13,513,21],[442,19,513,27],[443,14,514,24,"parseField"],[443,24,514,34],[443,25,514,35,"type"],[443,29,514,39],[443,31,514,41],[443,41,514,51],[443,42,514,52],[444,12,515,20],[445,12,516,20],[446,10,518,16],[446,15,518,21],[446,24,518,30],[447,12,519,20,"parseType"],[447,21,519,29],[447,22,519,30,"type"],[447,26,519,34],[447,28,519,36,"token"],[447,33,519,41],[447,34,519,42],[448,12,520,20],[449,10,522,16],[449,15,522,21],[449,21,522,27],[450,12,523,20,"parseEnum"],[450,21,523,29],[450,22,523,30,"type"],[450,26,523,34],[450,28,523,36,"token"],[450,33,523,41],[450,34,523,42],[451,12,524,20],[452,10,526,16],[452,15,526,21],[452,25,526,31],[453,12,527,20,"readRanges"],[453,22,527,30],[453,23,527,31,"type"],[453,27,527,35],[453,28,527,36,"reserved"],[453,36,527,44],[453,41,527,49,"type"],[453,45,527,53],[453,46,527,54,"reserved"],[453,54,527,62],[453,57,527,65],[453,59,527,67],[453,60,527,68],[453,62,527,70],[453,66,527,74],[453,67,527,75],[454,12,528,20],[456,10,530,16],[457,10,531,16],[458,12,532,20],[458,18,532,26,"illegal"],[458,25,532,33],[458,26,532,34,"token"],[458,31,532,39],[458,32,532,40],[459,10,532,42],[460,8,533,12],[461,6,534,8],[461,7,534,9],[461,8,534,10],[462,6,535,8,"parent"],[462,12,535,14],[462,13,535,15,"add"],[462,16,535,18],[462,17,535,19,"type"],[462,21,535,23],[462,22,535,24],[462,23,536,15,"add"],[462,26,536,18],[462,27,536,19,"field"],[462,32,536,24],[462,33,536,25],[463,4,537,4],[464,4,539,4],[464,13,539,13,"parseMapField"],[464,26,539,26,"parseMapField"],[464,27,539,27,"parent"],[464,33,539,33],[464,35,539,35],[465,6,540,8,"skip"],[465,10,540,12],[465,11,540,13],[465,14,540,16],[465,15,540,17],[466,6,541,8],[466,10,541,12,"keyType"],[466,17,541,19],[466,20,541,22,"next"],[466,24,541,26],[466,25,541,27],[466,26,541,28],[468,6,543,8],[469,6,544,8],[469,10,544,12,"types"],[469,15,544,17],[469,16,544,18,"mapKey"],[469,22,544,24],[469,23,544,25,"keyType"],[469,30,544,32],[469,31,544,33],[469,36,544,38,"undefined"],[469,45,544,47],[469,47,545,12],[469,53,545,18,"illegal"],[469,60,545,25],[469,61,545,26,"keyType"],[469,68,545,33],[469,70,545,35],[469,76,545,41],[469,77,545,42],[470,6,547,8,"skip"],[470,10,547,12],[470,11,547,13],[470,14,547,16],[470,15,547,17],[471,6,548,8],[471,10,548,12,"valueType"],[471,19,548,21],[471,22,548,24,"next"],[471,26,548,28],[471,27,548,29],[471,28,548,30],[473,6,550,8],[474,6,551,8],[474,10,551,12],[474,11,551,13,"typeRefRe"],[474,20,551,22],[474,21,551,23,"test"],[474,25,551,27],[474,26,551,28,"valueType"],[474,35,551,37],[474,36,551,38],[474,38,552,12],[474,44,552,18,"illegal"],[474,51,552,25],[474,52,552,26,"valueType"],[474,61,552,35],[474,63,552,37],[474,69,552,43],[474,70,552,44],[475,6,554,8,"skip"],[475,10,554,12],[475,11,554,13],[475,14,554,16],[475,15,554,17],[476,6,555,8],[476,10,555,12,"name"],[476,14,555,16],[476,17,555,19,"next"],[476,21,555,23],[476,22,555,24],[476,23,555,25],[478,6,557,8],[479,6,558,8],[479,10,558,12],[479,11,558,13,"nameRe"],[479,17,558,19],[479,18,558,20,"test"],[479,22,558,24],[479,23,558,25,"name"],[479,27,558,29],[479,28,558,30],[479,30,559,12],[479,36,559,18,"illegal"],[479,43,559,25],[479,44,559,26,"name"],[479,48,559,30],[479,50,559,32],[479,56,559,38],[479,57,559,39],[480,6,561,8,"skip"],[480,10,561,12],[480,11,561,13],[480,14,561,16],[480,15,561,17],[481,6,562,8],[481,10,562,12,"field"],[481,15,562,17],[481,18,562,20],[481,22,562,24,"MapField"],[481,30,562,32],[481,31,562,33,"applyCase"],[481,40,562,42],[481,41,562,43,"name"],[481,45,562,47],[481,46,562,48],[481,48,562,50,"parseId"],[481,55,562,57],[481,56,562,58,"next"],[481,60,562,62],[481,61,562,63],[481,62,562,64],[481,63,562,65],[481,65,562,67,"keyType"],[481,72,562,74],[481,74,562,76,"valueType"],[481,83,562,85],[481,84,562,86],[482,6,563,8,"ifBlock"],[482,13,563,15],[482,14,563,16,"field"],[482,19,563,21],[482,21,563,23],[482,30,563,32,"parseMapField_block"],[482,49,563,51,"parseMapField_block"],[482,50,563,52,"token"],[482,55,563,57],[482,57,563,59],[483,8,565,12],[484,8,566,12],[484,12,566,16,"token"],[484,17,566,21],[484,22,566,26],[484,30,566,34],[484,32,566,36],[485,10,567,16,"parseOption"],[485,21,567,27],[485,22,567,28,"field"],[485,27,567,33],[485,29,567,35,"token"],[485,34,567,40],[485,35,567,41],[486,10,568,16,"skip"],[486,14,568,20],[486,15,568,21],[486,18,568,24],[486,19,568,25],[487,8,569,12],[487,9,569,13],[487,15,570,16],[487,21,570,22,"illegal"],[487,28,570,29],[487,29,570,30,"token"],[487,34,570,35],[487,35,570,36],[488,6,572,8],[488,7,572,9],[488,9,572,11],[488,18,572,20,"parseMapField_line"],[488,36,572,38,"parseMapField_line"],[488,37,572,38],[488,39,572,41],[489,8,573,12,"parseInlineOptions"],[489,26,573,30],[489,27,573,31,"field"],[489,32,573,36],[489,33,573,37],[490,6,574,8],[490,7,574,9],[490,8,574,10],[491,6,575,8,"parent"],[491,12,575,14],[491,13,575,15,"add"],[491,16,575,18],[491,17,575,19,"field"],[491,22,575,24],[491,23,575,25],[492,4,576,4],[493,4,578,4],[493,13,578,13,"parseOneOf"],[493,23,578,23,"parseOneOf"],[493,24,578,24,"parent"],[493,30,578,30],[493,32,578,32,"token"],[493,37,578,37],[493,39,578,39],[494,6,580,8],[495,6,581,8],[495,10,581,12],[495,11,581,13,"nameRe"],[495,17,581,19],[495,18,581,20,"test"],[495,22,581,24],[495,23,581,25,"token"],[495,28,581,30],[495,31,581,33,"next"],[495,35,581,37],[495,36,581,38],[495,37,581,39],[495,38,581,40],[495,40,582,12],[495,46,582,18,"illegal"],[495,53,582,25],[495,54,582,26,"token"],[495,59,582,31],[495,61,582,33],[495,67,582,39],[495,68,582,40],[496,6,584,8],[496,10,584,12,"oneof"],[496,15,584,17],[496,18,584,20],[496,22,584,24,"OneOf"],[496,27,584,29],[496,28,584,30,"applyCase"],[496,37,584,39],[496,38,584,40,"token"],[496,43,584,45],[496,44,584,46],[496,45,584,47],[497,6,585,8,"ifBlock"],[497,13,585,15],[497,14,585,16,"oneof"],[497,19,585,21],[497,21,585,23],[497,30,585,32,"parseOneOf_block"],[497,46,585,48,"parseOneOf_block"],[497,47,585,49,"token"],[497,52,585,54],[497,54,585,56],[498,8,586,12],[498,12,586,16,"token"],[498,17,586,21],[498,22,586,26],[498,30,586,34],[498,32,586,36],[499,10,587,16,"parseOption"],[499,21,587,27],[499,22,587,28,"oneof"],[499,27,587,33],[499,29,587,35,"token"],[499,34,587,40],[499,35,587,41],[500,10,588,16,"skip"],[500,14,588,20],[500,15,588,21],[500,18,588,24],[500,19,588,25],[501,8,589,12],[501,9,589,13],[501,15,589,19],[502,10,590,16,"push"],[502,14,590,20],[502,15,590,21,"token"],[502,20,590,26],[502,21,590,27],[503,10,591,16,"parseField"],[503,20,591,26],[503,21,591,27,"oneof"],[503,26,591,32],[503,28,591,34],[503,38,591,44],[503,39,591,45],[504,8,592,12],[505,6,593,8],[505,7,593,9],[505,8,593,10],[506,6,594,8,"parent"],[506,12,594,14],[506,13,594,15,"add"],[506,16,594,18],[506,17,594,19,"oneof"],[506,22,594,24],[506,23,594,25],[507,4,595,4],[508,4,597,4],[508,13,597,13,"parseEnum"],[508,22,597,22,"parseEnum"],[508,23,597,23,"parent"],[508,29,597,29],[508,31,597,31,"token"],[508,36,597,36],[508,38,597,38],[509,6,599,8],[510,6,600,8],[510,10,600,12],[510,11,600,13,"nameRe"],[510,17,600,19],[510,18,600,20,"test"],[510,22,600,24],[510,23,600,25,"token"],[510,28,600,30],[510,31,600,33,"next"],[510,35,600,37],[510,36,600,38],[510,37,600,39],[510,38,600,40],[510,40,601,12],[510,46,601,18,"illegal"],[510,53,601,25],[510,54,601,26,"token"],[510,59,601,31],[510,61,601,33],[510,67,601,39],[510,68,601,40],[511,6,603,8],[511,10,603,12,"enm"],[511,13,603,15],[511,16,603,18],[511,20,603,22,"Enum"],[511,24,603,26],[511,25,603,27,"token"],[511,30,603,32],[511,31,603,33],[512,6,604,8,"ifBlock"],[512,13,604,15],[512,14,604,16,"enm"],[512,17,604,19],[512,19,604,21],[512,28,604,30,"parseEnum_block"],[512,43,604,45,"parseEnum_block"],[512,44,604,46,"token"],[512,49,604,51],[512,51,604,53],[513,8,605,10],[513,16,605,17,"token"],[513,21,605,22],[514,10,606,12],[514,15,606,17],[514,23,606,25],[515,12,607,14,"parseOption"],[515,23,607,25],[515,24,607,26,"enm"],[515,27,607,29],[515,29,607,31,"token"],[515,34,607,36],[515,35,607,37],[516,12,608,14,"skip"],[516,16,608,18],[516,17,608,19],[516,20,608,22],[516,21,608,23],[517,12,609,14],[518,10,611,12],[518,15,611,17],[518,25,611,27],[519,12,612,14,"readRanges"],[519,22,612,24],[519,23,612,25,"enm"],[519,26,612,28],[519,27,612,29,"reserved"],[519,35,612,37],[519,40,612,42,"enm"],[519,43,612,45],[519,44,612,46,"reserved"],[519,52,612,54],[519,55,612,57],[519,57,612,59],[519,58,612,60],[519,60,612,62],[519,64,612,66],[519,65,612,67],[520,12,613,14],[520,16,613,17,"enm"],[520,19,613,20],[520,20,613,21,"reserved"],[520,28,613,29],[520,33,613,34,"undefined"],[520,42,613,43],[520,44,613,45,"enm"],[520,47,613,48],[520,48,613,49,"reserved"],[520,56,613,57],[520,59,613,60],[520,61,613,62],[521,12,614,14],[522,10,616,12],[523,12,617,14,"parseEnumValue"],[523,26,617,28],[523,27,617,29,"enm"],[523,30,617,32],[523,32,617,34,"token"],[523,37,617,39],[523,38,617,40],[524,8,618,10],[525,6,619,8],[525,7,619,9],[525,8,619,10],[526,6,620,8,"parent"],[526,12,620,14],[526,13,620,15,"add"],[526,16,620,18],[526,17,620,19,"enm"],[526,20,620,22],[526,21,620,23],[527,6,621,8],[527,10,621,12,"parent"],[527,16,621,18],[527,21,621,23,"ptr"],[527,24,621,26],[527,26,621,28],[528,8,622,12,"topLevelObjects"],[528,23,622,27],[528,24,622,28,"push"],[528,28,622,32],[528,29,622,33,"enm"],[528,32,622,36],[528,33,622,37],[529,6,623,8],[530,4,624,4],[531,4,626,4],[531,13,626,13,"parseEnumValue"],[531,27,626,27,"parseEnumValue"],[531,28,626,28,"parent"],[531,34,626,34],[531,36,626,36,"token"],[531,41,626,41],[531,43,626,43],[532,6,628,8],[533,6,629,8],[533,10,629,12],[533,11,629,13,"nameRe"],[533,17,629,19],[533,18,629,20,"test"],[533,22,629,24],[533,23,629,25,"token"],[533,28,629,30],[533,29,629,31],[533,31,630,12],[533,37,630,18,"illegal"],[533,44,630,25],[533,45,630,26,"token"],[533,50,630,31],[533,52,630,33],[533,58,630,39],[533,59,630,40],[534,6,632,8,"skip"],[534,10,632,12],[534,11,632,13],[534,14,632,16],[534,15,632,17],[535,6,633,8],[535,10,633,12,"value"],[535,15,633,17],[535,18,633,20,"parseId"],[535,25,633,27],[535,26,633,28,"next"],[535,30,633,32],[535,31,633,33],[535,32,633,34],[535,34,633,36],[535,38,633,40],[535,39,633,41],[536,8,634,12,"dummy"],[536,13,634,17],[536,16,634,20],[537,10,635,16,"options"],[537,17,635,23],[537,19,635,25,"undefined"],[538,8,636,12],[538,9,636,13],[539,6,637,8,"dummy"],[539,11,637,13],[539,12,637,14,"getOption"],[539,21,637,23],[539,24,637,26],[539,34,637,35,"name"],[539,38,637,39],[539,40,637,41],[540,8,638,12],[540,15,638,19],[540,19,638,23],[540,20,638,24,"options"],[540,27,638,31],[540,28,638,32,"name"],[540,32,638,36],[540,33,638,37],[541,6,639,8],[541,7,639,9],[542,6,640,8,"dummy"],[542,11,640,13],[542,12,640,14,"setOption"],[542,21,640,23],[542,24,640,26],[542,34,640,35,"name"],[542,38,640,39],[542,40,640,41,"value"],[542,45,640,46],[542,47,640,48],[543,8,641,12,"ReflectionObject"],[543,24,641,28],[543,25,641,29,"prototype"],[543,34,641,38],[543,35,641,39,"setOption"],[543,44,641,48],[543,45,641,49,"call"],[543,49,641,53],[543,50,641,54,"dummy"],[543,55,641,59],[543,57,641,61,"name"],[543,61,641,65],[543,63,641,67,"value"],[543,68,641,72],[543,69,641,73],[544,6,642,8],[544,7,642,9],[545,6,643,8,"dummy"],[545,11,643,13],[545,12,643,14,"setParsedOption"],[545,27,643,29],[545,30,643,32],[545,42,643,43],[546,8,644,12],[546,15,644,19,"undefined"],[546,24,644,28],[547,6,645,8],[547,7,645,9],[548,6,646,8,"ifBlock"],[548,13,646,15],[548,14,646,16,"dummy"],[548,19,646,21],[548,21,646,23],[548,30,646,32,"parseEnumValue_block"],[548,50,646,52,"parseEnumValue_block"],[548,51,646,53,"token"],[548,56,646,58],[548,58,646,60],[549,8,648,12],[550,8,649,12],[550,12,649,16,"token"],[550,17,649,21],[550,22,649,26],[550,30,649,34],[550,32,649,36],[551,10,650,16,"parseOption"],[551,21,650,27],[551,22,650,28,"dummy"],[551,27,650,33],[551,29,650,35,"token"],[551,34,650,40],[551,35,650,41],[551,36,650,42],[551,37,650,43],[552,10,651,16,"skip"],[552,14,651,20],[552,15,651,21],[552,18,651,24],[552,19,651,25],[553,8,652,12],[553,9,652,13],[553,15,653,16],[553,21,653,22,"illegal"],[553,28,653,29],[553,29,653,30,"token"],[553,34,653,35],[553,35,653,36],[554,6,655,8],[554,7,655,9],[554,9,655,11],[554,18,655,20,"parseEnumValue_line"],[554,37,655,39,"parseEnumValue_line"],[554,38,655,39],[554,40,655,42],[555,8,656,12,"parseInlineOptions"],[555,26,656,30],[555,27,656,31,"dummy"],[555,32,656,36],[555,33,656,37],[555,34,656,38],[555,35,656,39],[556,6,657,8],[556,7,657,9],[556,8,657,10],[557,6,658,8,"parent"],[557,12,658,14],[557,13,658,15,"add"],[557,16,658,18],[557,17,658,19,"token"],[557,22,658,24],[557,24,658,26,"value"],[557,29,658,31],[557,31,658,33,"dummy"],[557,36,658,38],[557,37,658,39,"comment"],[557,44,658,46],[557,46,658,48,"dummy"],[557,51,658,53],[557,52,658,54,"parsedOptions"],[557,65,658,67],[557,69,658,71,"dummy"],[557,74,658,76],[557,75,658,77,"options"],[557,82,658,84],[557,83,658,85],[558,4,659,4],[559,4,661,4],[559,13,661,13,"parseOption"],[559,24,661,24,"parseOption"],[559,25,661,25,"parent"],[559,31,661,31],[559,33,661,33,"token"],[559,38,661,38],[559,40,661,40],[560,6,662,12],[560,10,662,16,"option"],[560,16,662,22],[561,6,663,12],[561,10,663,16,"propName"],[561,18,663,24],[562,6,664,12],[562,10,664,16,"isOption"],[562,18,664,24],[562,21,664,27],[562,25,664,31],[563,6,665,12],[563,10,665,16,"token"],[563,15,665,21],[563,20,665,26],[563,28,665,34],[563,30,665,36],[564,8,666,16,"token"],[564,13,666,21],[564,16,666,24,"next"],[564,20,666,28],[564,21,666,29],[564,22,666,30],[565,6,667,12],[566,6,669,12],[566,13,669,19,"token"],[566,18,669,24],[566,23,669,29],[566,26,669,32],[566,28,669,34],[567,8,670,16],[567,12,670,20,"token"],[567,17,670,25],[567,22,670,30],[567,25,670,33],[567,27,670,35],[568,10,671,20],[568,14,671,24,"parensValue"],[568,25,671,35],[568,28,671,38,"next"],[568,32,671,42],[568,33,671,43],[568,34,671,44],[569,10,672,20,"skip"],[569,14,672,24],[569,15,672,25],[569,18,672,28],[569,19,672,29],[570,10,673,20,"token"],[570,15,673,25],[570,18,673,28],[570,21,673,31],[570,24,673,34,"parensValue"],[570,35,673,45],[570,38,673,48],[570,41,673,51],[571,8,674,16],[572,8,675,16],[572,12,675,20,"isOption"],[572,20,675,28],[572,22,675,30],[573,10,676,20,"isOption"],[573,18,676,28],[573,21,676,31],[573,26,676,36],[574,10,677,20],[574,14,677,24,"token"],[574,19,677,29],[574,20,677,30,"includes"],[574,28,677,38],[574,29,677,39],[574,32,677,42],[574,33,677,43],[574,37,677,47],[574,38,677,48,"token"],[574,43,677,53],[574,44,677,54,"includes"],[574,52,677,62],[574,53,677,63],[574,56,677,66],[574,57,677,67],[574,59,677,69],[575,12,678,24],[575,16,678,28,"tokens"],[575,22,678,34],[575,25,678,37,"token"],[575,30,678,42],[575,31,678,43,"split"],[575,36,678,48],[575,37,678,49],[575,40,678,52],[575,41,678,53],[576,12,679,24,"option"],[576,18,679,30],[576,21,679,33,"tokens"],[576,27,679,39],[576,28,679,40],[576,29,679,41],[576,30,679,42],[576,33,679,45],[576,36,679,48],[577,12,680,24,"token"],[577,17,680,29],[577,20,680,32,"tokens"],[577,26,680,38],[577,27,680,39],[577,28,680,40],[577,29,680,41],[578,12,681,24],[579,10,682,20],[580,10,683,20,"option"],[580,16,683,26],[580,19,683,29,"token"],[580,24,683,34],[581,8,684,16],[581,9,684,17],[581,15,684,23],[582,10,685,20,"propName"],[582,18,685,28],[582,21,685,31,"propName"],[582,29,685,39],[582,32,685,42,"propName"],[582,40,685,50],[582,44,685,54,"token"],[582,49,685,59],[582,52,685,62,"token"],[582,57,685,67],[583,8,686,16],[584,8,687,16,"token"],[584,13,687,21],[584,16,687,24,"next"],[584,20,687,28],[584,21,687,29],[584,22,687,30],[585,6,688,12],[586,6,689,12],[586,10,689,16,"name"],[586,14,689,20],[586,17,689,23,"propName"],[586,25,689,31],[586,28,689,34,"option"],[586,34,689,40],[586,35,689,41,"concat"],[586,41,689,47],[586,42,689,48,"propName"],[586,50,689,56],[586,51,689,57],[586,54,689,60,"option"],[586,60,689,66],[587,6,690,12],[587,10,690,16,"optionValue"],[587,21,690,27],[587,24,690,30,"parseOptionValue"],[587,40,690,46],[587,41,690,47,"parent"],[587,47,690,53],[587,49,690,55,"name"],[587,53,690,59],[587,54,690,60],[588,6,691,12,"propName"],[588,14,691,20],[588,17,691,23,"propName"],[588,25,691,31],[588,29,691,35,"propName"],[588,37,691,43],[588,38,691,44],[588,39,691,45],[588,40,691,46],[588,45,691,51],[588,48,691,54],[588,51,691,57,"propName"],[588,59,691,65],[588,60,691,66,"slice"],[588,65,691,71],[588,66,691,72],[588,67,691,73],[588,68,691,74],[588,71,691,77,"propName"],[588,79,691,85],[589,6,692,12,"option"],[589,12,692,18],[589,15,692,21,"option"],[589,21,692,27],[589,25,692,31,"option"],[589,31,692,37],[589,32,692,38,"option"],[589,38,692,44],[589,39,692,45,"length"],[589,45,692,51],[589,48,692,54],[589,49,692,55],[589,50,692,56],[589,55,692,61],[589,58,692,64],[589,61,692,67,"option"],[589,67,692,73],[589,68,692,74,"slice"],[589,73,692,79],[589,74,692,80],[589,75,692,81],[589,77,692,83],[589,78,692,84],[589,79,692,85],[589,80,692,86],[589,83,692,89,"option"],[589,89,692,95],[590,6,693,12,"setParsedOption"],[590,21,693,27],[590,22,693,28,"parent"],[590,28,693,34],[590,30,693,36,"option"],[590,36,693,42],[590,38,693,44,"optionValue"],[590,49,693,55],[590,51,693,57,"propName"],[590,59,693,65],[590,60,693,66],[591,4,694,4],[592,4,696,4],[592,13,696,13,"parseOptionValue"],[592,29,696,29,"parseOptionValue"],[592,30,696,30,"parent"],[592,36,696,36],[592,38,696,38,"name"],[592,42,696,42],[592,44,696,44],[593,6,697,8],[594,6,698,8],[594,10,698,12,"skip"],[594,14,698,16],[594,15,698,17],[594,18,698,20],[594,20,698,22],[594,24,698,26],[594,25,698,27],[594,27,698,29],[595,8,699,12],[595,12,699,16,"objectResult"],[595,24,699,28],[595,27,699,31],[595,28,699,32],[595,29,699,33],[596,8,701,12],[596,15,701,19],[596,16,701,20,"skip"],[596,20,701,24],[596,21,701,25],[596,24,701,28],[596,26,701,30],[596,30,701,34],[596,31,701,35],[596,33,701,37],[597,10,702,16],[598,10,703,16],[598,14,703,20],[598,15,703,21,"nameRe"],[598,21,703,27],[598,22,703,28,"test"],[598,26,703,32],[598,27,703,33,"token"],[598,32,703,38],[598,35,703,41,"next"],[598,39,703,45],[598,40,703,46],[598,41,703,47],[598,42,703,48],[598,44,703,50],[599,12,704,20],[599,18,704,26,"illegal"],[599,25,704,33],[599,26,704,34,"token"],[599,31,704,39],[599,33,704,41],[599,39,704,47],[599,40,704,48],[600,10,705,16],[601,10,706,16],[601,14,706,20,"token"],[601,19,706,25],[601,24,706,30],[601,28,706,34],[601,30,706,36],[602,12,707,18],[602,18,707,24,"illegal"],[602,25,707,31],[602,26,707,32,"token"],[602,31,707,37],[602,33,707,39],[602,47,707,53],[602,48,707,54],[603,10,708,16],[604,10,710,16],[604,14,710,20,"value"],[604,19,710,25],[605,10,711,16],[605,14,711,20,"propName"],[605,22,711,28],[605,25,711,31,"token"],[605,30,711,36],[606,10,713,16,"skip"],[606,14,713,20],[606,15,713,21],[606,18,713,24],[606,20,713,26],[606,24,713,30],[606,25,713,31],[607,10,715,16],[607,14,715,20,"peek"],[607,18,715,24],[607,19,715,25],[607,20,715,26],[607,25,715,31],[607,28,715,34],[607,30,715,36],[608,12,716,20],[609,12,717,20],[610,12,718,20],[611,12,719,20,"value"],[611,17,719,25],[611,20,719,28,"parseOptionValue"],[611,36,719,44],[611,37,719,45,"parent"],[611,43,719,51],[611,45,719,53,"name"],[611,49,719,57],[611,52,719,60],[611,55,719,63],[611,58,719,66,"token"],[611,63,719,71],[611,64,719,72],[612,10,720,16],[612,11,720,17],[612,17,720,23],[612,21,720,27,"peek"],[612,25,720,31],[612,26,720,32],[612,27,720,33],[612,32,720,38],[612,35,720,41],[612,37,720,43],[613,12,721,20,"value"],[613,17,721,25],[613,20,721,28],[613,22,721,30],[614,12,722,20],[614,16,722,24,"lastValue"],[614,25,722,33],[615,12,723,20],[615,16,723,24,"skip"],[615,20,723,28],[615,21,723,29],[615,24,723,32],[615,26,723,34],[615,30,723,38],[615,31,723,39],[615,33,723,41],[616,14,724,24],[616,17,724,27],[617,16,725,28,"lastValue"],[617,25,725,37],[617,28,725,40,"readValue"],[617,37,725,49],[617,38,725,50],[617,42,725,54],[617,43,725,55],[618,16,726,28,"value"],[618,21,726,33],[618,22,726,34,"push"],[618,26,726,38],[618,27,726,39,"lastValue"],[618,36,726,48],[618,37,726,49],[619,14,727,24],[619,15,727,25],[619,23,727,33,"skip"],[619,27,727,37],[619,28,727,38],[619,31,727,41],[619,33,727,43],[619,37,727,47],[619,38,727,48],[620,14,728,24,"skip"],[620,18,728,28],[620,19,728,29],[620,22,728,32],[620,23,728,33],[621,14,729,24],[621,18,729,28],[621,25,729,35,"lastValue"],[621,34,729,44],[621,39,729,49],[621,50,729,60],[621,52,729,62],[622,16,730,28,"setOption"],[622,25,730,37],[622,26,730,38,"parent"],[622,32,730,44],[622,34,730,46,"name"],[622,38,730,50],[622,41,730,53],[622,44,730,56],[622,47,730,59,"token"],[622,52,730,64],[622,54,730,66,"lastValue"],[622,63,730,75],[622,64,730,76],[623,14,731,24],[624,12,732,20],[625,10,733,16],[625,11,733,17],[625,17,733,23],[626,12,734,20,"value"],[626,17,734,25],[626,20,734,28,"readValue"],[626,29,734,37],[626,30,734,38],[626,34,734,42],[626,35,734,43],[627,12,735,20,"setOption"],[627,21,735,29],[627,22,735,30,"parent"],[627,28,735,36],[627,30,735,38,"name"],[627,34,735,42],[627,37,735,45],[627,40,735,48],[627,43,735,51,"token"],[627,48,735,56],[627,50,735,58,"value"],[627,55,735,63],[627,56,735,64],[628,10,736,16],[629,10,738,16],[629,14,738,20,"prevValue"],[629,23,738,29],[629,26,738,32,"objectResult"],[629,38,738,44],[629,39,738,45,"propName"],[629,47,738,53],[629,48,738,54],[630,10,740,16],[630,14,740,20,"prevValue"],[630,23,740,29],[630,25,741,20,"value"],[630,30,741,25],[630,33,741,28],[630,35,741,30],[630,36,741,31,"concat"],[630,42,741,37],[630,43,741,38,"prevValue"],[630,52,741,47],[630,53,741,48],[630,54,741,49,"concat"],[630,60,741,55],[630,61,741,56,"value"],[630,66,741,61],[630,67,741,62],[631,10,743,16,"objectResult"],[631,22,743,28],[631,23,743,29,"propName"],[631,31,743,37],[631,32,743,38],[631,35,743,41,"value"],[631,40,743,46],[633,10,745,16],[634,10,746,16,"skip"],[634,14,746,20],[634,15,746,21],[634,18,746,24],[634,20,746,26],[634,24,746,30],[634,25,746,31],[635,10,747,16,"skip"],[635,14,747,20],[635,15,747,21],[635,18,747,24],[635,20,747,26],[635,24,747,30],[635,25,747,31],[636,8,748,12],[637,8,750,12],[637,15,750,19,"objectResult"],[637,27,750,31],[638,6,751,8],[639,6,753,8],[639,10,753,12,"simpleValue"],[639,21,753,23],[639,24,753,26,"readValue"],[639,33,753,35],[639,34,753,36],[639,38,753,40],[639,39,753,41],[640,6,754,8,"setOption"],[640,15,754,17],[640,16,754,18,"parent"],[640,22,754,24],[640,24,754,26,"name"],[640,28,754,30],[640,30,754,32,"simpleValue"],[640,41,754,43],[640,42,754,44],[641,6,755,8],[641,13,755,15,"simpleValue"],[641,24,755,26],[642,6,756,8],[643,4,757,4],[644,4,759,4],[644,13,759,13,"setOption"],[644,22,759,22,"setOption"],[644,23,759,23,"parent"],[644,29,759,29],[644,31,759,31,"name"],[644,35,759,35],[644,37,759,37,"value"],[644,42,759,42],[644,44,759,44],[645,6,760,8],[645,10,760,12,"ptr"],[645,13,760,15],[645,18,760,20,"parent"],[645,24,760,26],[645,28,760,30],[645,41,760,43],[645,42,760,44,"test"],[645,46,760,48],[645,47,760,49,"name"],[645,51,760,53],[645,52,760,54],[645,54,760,56],[646,8,761,12,"topLevelOptions"],[646,23,761,27],[646,24,761,28,"name"],[646,28,761,32],[646,29,761,33],[646,32,761,36,"value"],[646,37,761,41],[647,8,762,12],[648,6,763,8],[649,6,764,8],[649,10,764,12,"parent"],[649,16,764,18],[649,17,764,19,"setOption"],[649,26,764,28],[649,28,765,12,"parent"],[649,34,765,18],[649,35,765,19,"setOption"],[649,44,765,28],[649,45,765,29,"name"],[649,49,765,33],[649,51,765,35,"value"],[649,56,765,40],[649,57,765,41],[650,4,766,4],[651,4,768,4],[651,13,768,13,"setParsedOption"],[651,28,768,28,"setParsedOption"],[651,29,768,29,"parent"],[651,35,768,35],[651,37,768,37,"name"],[651,41,768,41],[651,43,768,43,"value"],[651,48,768,48],[651,50,768,50,"propName"],[651,58,768,58],[651,60,768,60],[652,6,769,8],[652,10,769,12,"parent"],[652,16,769,18],[652,17,769,19,"setParsedOption"],[652,32,769,34],[652,34,770,12,"parent"],[652,40,770,18],[652,41,770,19,"setParsedOption"],[652,56,770,34],[652,57,770,35,"name"],[652,61,770,39],[652,63,770,41,"value"],[652,68,770,46],[652,70,770,48,"propName"],[652,78,770,56],[652,79,770,57],[653,4,771,4],[654,4,773,4],[654,13,773,13,"parseInlineOptions"],[654,31,773,31,"parseInlineOptions"],[654,32,773,32,"parent"],[654,38,773,38],[654,40,773,40],[655,6,774,8],[655,10,774,12,"skip"],[655,14,774,16],[655,15,774,17],[655,18,774,20],[655,20,774,22],[655,24,774,26],[655,25,774,27],[655,27,774,29],[656,8,775,12],[656,11,775,15],[657,10,776,16,"parseOption"],[657,21,776,27],[657,22,776,28,"parent"],[657,28,776,34],[657,30,776,36],[657,38,776,44],[657,39,776,45],[658,8,777,12],[658,9,777,13],[658,17,777,21,"skip"],[658,21,777,25],[658,22,777,26],[658,25,777,29],[658,27,777,31],[658,31,777,35],[658,32,777,36],[659,8,778,12,"skip"],[659,12,778,16],[659,13,778,17],[659,16,778,20],[659,17,778,21],[660,6,779,8],[661,6,780,8],[661,13,780,15,"parent"],[661,19,780,21],[662,4,781,4],[663,4,783,4],[663,13,783,13,"parseService"],[663,25,783,25,"parseService"],[663,26,783,26,"parent"],[663,32,783,32],[663,34,783,34,"token"],[663,39,783,39],[663,41,783,41],[664,6,785,8],[665,6,786,8],[665,10,786,12],[665,11,786,13,"nameRe"],[665,17,786,19],[665,18,786,20,"test"],[665,22,786,24],[665,23,786,25,"token"],[665,28,786,30],[665,31,786,33,"next"],[665,35,786,37],[665,36,786,38],[665,37,786,39],[665,38,786,40],[665,40,787,12],[665,46,787,18,"illegal"],[665,53,787,25],[665,54,787,26,"token"],[665,59,787,31],[665,61,787,33],[665,75,787,47],[665,76,787,48],[666,6,789,8],[666,10,789,12,"service"],[666,17,789,19],[666,20,789,22],[666,24,789,26,"Service"],[666,31,789,33],[666,32,789,34,"token"],[666,37,789,39],[666,38,789,40],[667,6,790,8,"ifBlock"],[667,13,790,15],[667,14,790,16,"service"],[667,21,790,23],[667,23,790,25],[667,32,790,34,"parseService_block"],[667,50,790,52,"parseService_block"],[667,51,790,53,"token"],[667,56,790,58],[667,58,790,60],[668,8,791,12],[668,12,791,16,"parseCommon"],[668,23,791,27],[668,24,791,28,"service"],[668,31,791,35],[668,33,791,37,"token"],[668,38,791,42],[668,39,791,43],[668,41,791,45],[669,10,792,16],[670,8,793,12],[672,8,795,12],[673,8,796,12],[673,12,796,16,"token"],[673,17,796,21],[673,22,796,26],[673,27,796,31],[673,29,797,16,"parseMethod"],[673,40,797,27],[673,41,797,28,"service"],[673,48,797,35],[673,50,797,37,"token"],[673,55,797,42],[673,56,797,43],[673,57,797,44],[673,62,799,16],[673,68,799,22,"illegal"],[673,75,799,29],[673,76,799,30,"token"],[673,81,799,35],[673,82,799,36],[674,6,800,8],[674,7,800,9],[674,8,800,10],[675,6,801,8,"parent"],[675,12,801,14],[675,13,801,15,"add"],[675,16,801,18],[675,17,801,19,"service"],[675,24,801,26],[675,25,801,27],[676,6,802,8],[676,10,802,12,"parent"],[676,16,802,18],[676,21,802,23,"ptr"],[676,24,802,26],[676,26,802,28],[677,8,803,12,"topLevelObjects"],[677,23,803,27],[677,24,803,28,"push"],[677,28,803,32],[677,29,803,33,"service"],[677,36,803,40],[677,37,803,41],[678,6,804,8],[679,4,805,4],[680,4,807,4],[680,13,807,13,"parseMethod"],[680,24,807,24,"parseMethod"],[680,25,807,25,"parent"],[680,31,807,31],[680,33,807,33,"token"],[680,38,807,38],[680,40,807,40],[681,6,808,8],[682,6,809,8],[683,6,810,8],[683,10,810,12,"commentText"],[683,21,810,23],[683,24,810,26,"cmnt"],[683,28,810,30],[683,29,810,31],[683,30,810,32],[684,6,812,8],[684,10,812,12,"type"],[684,14,812,16],[684,17,812,19,"token"],[684,22,812,24],[686,6,814,8],[687,6,815,8],[687,10,815,12],[687,11,815,13,"nameRe"],[687,17,815,19],[687,18,815,20,"test"],[687,22,815,24],[687,23,815,25,"token"],[687,28,815,30],[687,31,815,33,"next"],[687,35,815,37],[687,36,815,38],[687,37,815,39],[687,38,815,40],[687,40,816,12],[687,46,816,18,"illegal"],[687,53,816,25],[687,54,816,26,"token"],[687,59,816,31],[687,61,816,33],[687,67,816,39],[687,68,816,40],[688,6,818,8],[688,10,818,12,"name"],[688,14,818,16],[688,17,818,19,"token"],[688,22,818,24],[689,8,819,12,"requestType"],[689,19,819,23],[690,8,819,25,"requestStream"],[690,21,819,38],[691,8,820,12,"responseType"],[691,20,820,24],[692,8,820,26,"responseStream"],[692,22,820,40],[693,6,822,8,"skip"],[693,10,822,12],[693,11,822,13],[693,14,822,16],[693,15,822,17],[694,6,823,8],[694,10,823,12,"skip"],[694,14,823,16],[694,15,823,17],[694,23,823,25],[694,25,823,27],[694,29,823,31],[694,30,823,32],[694,32,824,12,"requestStream"],[694,45,824,25],[694,48,824,28],[694,52,824,32],[696,6,826,8],[697,6,827,8],[697,10,827,12],[697,11,827,13,"typeRefRe"],[697,20,827,22],[697,21,827,23,"test"],[697,25,827,27],[697,26,827,28,"token"],[697,31,827,33],[697,34,827,36,"next"],[697,38,827,40],[697,39,827,41],[697,40,827,42],[697,41,827,43],[697,43,828,12],[697,49,828,18,"illegal"],[697,56,828,25],[697,57,828,26,"token"],[697,62,828,31],[697,63,828,32],[698,6,830,8,"requestType"],[698,17,830,19],[698,20,830,22,"token"],[698,25,830,27],[699,6,831,8,"skip"],[699,10,831,12],[699,11,831,13],[699,14,831,16],[699,15,831,17],[700,6,831,19,"skip"],[700,10,831,23],[700,11,831,24],[700,20,831,33],[700,21,831,34],[701,6,831,36,"skip"],[701,10,831,40],[701,11,831,41],[701,14,831,44],[701,15,831,45],[702,6,832,8],[702,10,832,12,"skip"],[702,14,832,16],[702,15,832,17],[702,23,832,25],[702,25,832,27],[702,29,832,31],[702,30,832,32],[702,32,833,12,"responseStream"],[702,46,833,26],[702,49,833,29],[702,53,833,33],[704,6,835,8],[705,6,836,8],[705,10,836,12],[705,11,836,13,"typeRefRe"],[705,20,836,22],[705,21,836,23,"test"],[705,25,836,27],[705,26,836,28,"token"],[705,31,836,33],[705,34,836,36,"next"],[705,38,836,40],[705,39,836,41],[705,40,836,42],[705,41,836,43],[705,43,837,12],[705,49,837,18,"illegal"],[705,56,837,25],[705,57,837,26,"token"],[705,62,837,31],[705,63,837,32],[706,6,839,8,"responseType"],[706,18,839,20],[706,21,839,23,"token"],[706,26,839,28],[707,6,840,8,"skip"],[707,10,840,12],[707,11,840,13],[707,14,840,16],[707,15,840,17],[708,6,842,8],[708,10,842,12,"method"],[708,16,842,18],[708,19,842,21],[708,23,842,25,"Method"],[708,29,842,31],[708,30,842,32,"name"],[708,34,842,36],[708,36,842,38,"type"],[708,40,842,42],[708,42,842,44,"requestType"],[708,53,842,55],[708,55,842,57,"responseType"],[708,67,842,69],[708,69,842,71,"requestStream"],[708,82,842,84],[708,84,842,86,"responseStream"],[708,98,842,100],[708,99,842,101],[709,6,843,8,"method"],[709,12,843,14],[709,13,843,15,"comment"],[709,20,843,22],[709,23,843,25,"commentText"],[709,34,843,36],[710,6,844,8,"ifBlock"],[710,13,844,15],[710,14,844,16,"method"],[710,20,844,22],[710,22,844,24],[710,31,844,33,"parseMethod_block"],[710,48,844,50,"parseMethod_block"],[710,49,844,51,"token"],[710,54,844,56],[710,56,844,58],[711,8,846,12],[712,8,847,12],[712,12,847,16,"token"],[712,17,847,21],[712,22,847,26],[712,30,847,34],[712,32,847,36],[713,10,848,16,"parseOption"],[713,21,848,27],[713,22,848,28,"method"],[713,28,848,34],[713,30,848,36,"token"],[713,35,848,41],[713,36,848,42],[714,10,849,16,"skip"],[714,14,849,20],[714,15,849,21],[714,18,849,24],[714,19,849,25],[715,8,850,12],[715,9,850,13],[715,15,851,16],[715,21,851,22,"illegal"],[715,28,851,29],[715,29,851,30,"token"],[715,34,851,35],[715,35,851,36],[716,6,853,8],[716,7,853,9],[716,8,853,10],[717,6,854,8,"parent"],[717,12,854,14],[717,13,854,15,"add"],[717,16,854,18],[717,17,854,19,"method"],[717,23,854,25],[717,24,854,26],[718,4,855,4],[719,4,857,4],[719,13,857,13,"parseExtension"],[719,27,857,27,"parseExtension"],[719,28,857,28,"parent"],[719,34,857,34],[719,36,857,36,"token"],[719,41,857,41],[719,43,857,43],[720,6,859,8],[721,6,860,8],[721,10,860,12],[721,11,860,13,"typeRefRe"],[721,20,860,22],[721,21,860,23,"test"],[721,25,860,27],[721,26,860,28,"token"],[721,31,860,33],[721,34,860,36,"next"],[721,38,860,40],[721,39,860,41],[721,40,860,42],[721,41,860,43],[721,43,861,12],[721,49,861,18,"illegal"],[721,56,861,25],[721,57,861,26,"token"],[721,62,861,31],[721,64,861,33],[721,75,861,44],[721,76,861,45],[722,6,863,8],[722,10,863,12,"reference"],[722,19,863,21],[722,22,863,24,"token"],[722,27,863,29],[723,6,864,8,"ifBlock"],[723,13,864,15],[723,14,864,16],[723,18,864,20],[723,20,864,22],[723,29,864,31,"parseExtension_block"],[723,49,864,51,"parseExtension_block"],[723,50,864,52,"token"],[723,55,864,57],[723,57,864,59],[724,8,865,12],[724,16,865,20,"token"],[724,21,865,25],[725,10,867,16],[725,15,867,21],[725,25,867,31],[726,10,868,16],[726,15,868,21],[726,25,868,31],[727,12,869,20,"parseField"],[727,22,869,30],[727,23,869,31,"parent"],[727,29,869,37],[727,31,869,39,"token"],[727,36,869,44],[727,38,869,46,"reference"],[727,47,869,55],[727,48,869,56],[728,12,870,20],[729,10,872,16],[729,15,872,21],[729,25,872,31],[730,12,873,20],[731,12,874,20],[731,16,874,24,"edition"],[731,23,874,31],[731,28,874,36],[731,36,874,44],[731,38,874,46],[732,14,875,24,"parseField"],[732,24,875,34],[732,25,875,35,"parent"],[732,31,875,41],[732,33,875,43],[732,50,875,60],[732,52,875,62,"reference"],[732,61,875,71],[732,62,875,72],[733,12,876,20],[733,13,876,21],[733,19,876,27],[734,14,877,24,"parseField"],[734,24,877,34],[734,25,877,35,"parent"],[734,31,877,41],[734,33,877,43],[734,43,877,53],[734,45,877,55,"reference"],[734,54,877,64],[734,55,877,65],[735,12,878,20],[736,12,879,20],[737,10,881,16],[738,12,882,20],[739,12,883,20],[739,16,883,24,"edition"],[739,23,883,31],[739,28,883,36],[739,36,883,44],[739,40,883,48],[739,41,883,49,"typeRefRe"],[739,50,883,58],[739,51,883,59,"test"],[739,55,883,63],[739,56,883,64,"token"],[739,61,883,69],[739,62,883,70],[739,64,884,24],[739,70,884,30,"illegal"],[739,77,884,37],[739,78,884,38,"token"],[739,83,884,43],[739,84,884,44],[740,12,885,20,"push"],[740,16,885,24],[740,17,885,25,"token"],[740,22,885,30],[740,23,885,31],[741,12,886,20,"parseField"],[741,22,886,30],[741,23,886,31,"parent"],[741,29,886,37],[741,31,886,39],[741,41,886,49],[741,43,886,51,"reference"],[741,52,886,60],[741,53,886,61],[742,12,887,20],[743,8,888,12],[744,6,889,8],[744,7,889,9],[744,8,889,10],[745,4,890,4],[746,4,892,4],[746,8,892,8,"token"],[746,13,892,13],[747,4,893,4],[747,11,893,11],[747,12,893,12,"token"],[747,17,893,17],[747,20,893,20,"next"],[747,24,893,24],[747,25,893,25],[747,26,893,26],[747,32,893,32],[747,36,893,36],[747,38,893,38],[748,6,894,8],[748,14,894,16,"token"],[748,19,894,21],[749,8,896,12],[749,13,896,17],[749,22,896,26],[750,10,898,16],[751,10,899,16],[751,14,899,20],[751,15,899,21,"head"],[751,19,899,25],[751,21,900,20],[751,27,900,26,"illegal"],[751,34,900,33],[751,35,900,34,"token"],[751,40,900,39],[751,41,900,40],[752,10,902,16,"parsePackage"],[752,22,902,28],[752,23,902,29],[752,24,902,30],[753,10,903,16],[754,8,905,12],[754,13,905,17],[754,21,905,25],[755,10,907,16],[756,10,908,16],[756,14,908,20],[756,15,908,21,"head"],[756,19,908,25],[756,21,909,20],[756,27,909,26,"illegal"],[756,34,909,33],[756,35,909,34,"token"],[756,40,909,39],[756,41,909,40],[757,10,911,16,"parseImport"],[757,21,911,27],[757,22,911,28],[757,23,911,29],[758,10,912,16],[759,8,914,12],[759,13,914,17],[759,21,914,25],[760,10,916,16],[761,10,917,16],[761,14,917,20],[761,15,917,21,"head"],[761,19,917,25],[761,21,918,20],[761,27,918,26,"illegal"],[761,34,918,33],[761,35,918,34,"token"],[761,40,918,39],[761,41,918,40],[762,10,920,16,"parseSyntax"],[762,21,920,27],[762,22,920,28],[762,23,920,29],[763,10,921,16],[764,8,923,12],[764,13,923,17],[764,22,923,26],[765,10,924,16],[766,10,925,16],[766,14,925,20],[766,15,925,21,"head"],[766,19,925,25],[766,21,926,20],[766,27,926,26,"illegal"],[766,34,926,33],[766,35,926,34,"token"],[766,40,926,39],[766,41,926,40],[767,10,927,16,"parseEdition"],[767,22,927,28],[767,23,927,29],[767,24,927,30],[768,10,928,16],[769,8,930,12],[769,13,930,17],[769,21,930,25],[770,10,931,16,"parseOption"],[770,21,931,27],[770,22,931,28,"ptr"],[770,25,931,31],[770,27,931,33,"token"],[770,32,931,38],[770,33,931,39],[771,10,932,16,"skip"],[771,14,932,20],[771,15,932,21],[771,18,932,24],[771,20,932,26],[771,24,932,30],[771,25,932,31],[772,10,933,16],[773,8,935,12],[774,10,937,16],[775,10,938,16],[775,14,938,20,"parseCommon"],[775,25,938,31],[775,26,938,32,"ptr"],[775,29,938,35],[775,31,938,37,"token"],[775,36,938,42],[775,37,938,43],[775,39,938,45],[776,12,939,20,"head"],[776,16,939,24],[776,19,939,27],[776,24,939,32],[777,12,940,20],[778,10,941,16],[780,10,943,16],[781,10,944,16],[781,16,944,22,"illegal"],[781,23,944,29],[781,24,944,30,"token"],[781,29,944,35],[781,30,944,36],[782,6,945,8],[783,4,946,4],[784,4,948,4,"resolveFileFeatures"],[784,23,948,23],[784,24,948,24],[784,25,948,25],[785,4,950,4,"parse"],[785,9,950,9],[785,10,950,10,"filename"],[785,18,950,18],[785,21,950,21],[785,25,950,25],[786,4,951,4],[786,11,951,11],[787,6,952,8],[787,15,952,17],[787,17,952,24,"pkg"],[787,20,952,27],[788,6,953,8],[788,15,953,17],[788,17,953,24,"imports"],[788,24,953,31],[789,6,954,9,"weakImports"],[789,17,954,20],[789,19,954,24,"weakImports"],[789,30,954,35],[790,6,955,9,"root"],[790,10,955,13],[790,12,955,24,"root"],[791,4,956,4],[791,5,956,5],[792,2,957,0],[794,2,959,0],[795,0,960,0],[796,0,961,0],[797,0,962,0],[798,0,963,0],[799,0,964,0],[800,0,965,0],[801,0,966,0],[802,0,967,0],[803,0,968,0],[804,0,969,0],[805,0,959,0],[805,3]],"functionMap":{"names":["<global>","parse","<anonymous>","resolveFileFeatures","topLevelObjects.forEach$argument_0","Object.keys.forEach$argument_0","illegal","readString","readValue","readRanges","dummy.setOption","parseRange_block","parseRange_line","parseNumber","parseId","parsePackage","parseImport","parseSyntax","parseEdition","parseCommon","ifBlock","parseType","parseType_block","parseField","parseField_block","parseField_line","parseGroup","parseGroup_block","parseMapField","parseMapField_block","parseMapField_line","parseOneOf","parseOneOf_block","parseEnum","parseEnum_block","parseEnumValue","dummy.getOption","dummy.setParsedOption","parseEnumValue_block","parseEnumValue_line","parseOption","parseOptionValue","setOption","setParsedOption","parseInlineOptions","parseService","parseService_block","parseMethod","parseMethod_block","parseExtension","parseExtension_block"],"mappings":"AAA;AC6D;uCC4B,+BD;IEE;gCCC;iDCE;aDG;SDC;KFC;IKG;KLK;IME;KNa;IOE;KPsB;IQE;0BCsB;SDG;YEG;aFO;YGC;aHE;KRC;IYE;KZ2B;IaE;KbuB;IcE;Kdc;IeE;KfkB;IgBE;KhBS;IiBE;KjBU;IkBG;KlByB;ImBE;KnBoB;IoBE;sBCO;SDmD;KpBK;IsBE;uBCiC;SDS,EE;SFE;KtBc;IyBE;sBCmB;SDqC;KzBG;I2BE;uBCwB;SDS,EE;SFE;K3BE;I8BE;uBCO;SDQ;K9BE;IgCE;qBCO;SDe;KhCK;IkCE;0BCW;SDE;0BzBC;SyBE;gCEC;SFE;uBGC;SHS,EI;SJE;KlCE;IuCE;KvCiC;IwCE;KxC6D;IyCE;KzCO;I0CE;K1CG;I2CE;K3CQ;I4CE;yBCO;SDU;K5CK;I8CE;wBCqC;SDS;K9CE;IgDE;sBCO;SDyB;KhDC;CDmE"}},"type":"js/module"}]}