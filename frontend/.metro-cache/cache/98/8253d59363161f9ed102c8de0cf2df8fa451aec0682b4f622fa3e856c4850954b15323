{"dependencies":[{"name":"./object","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":23,"index":89},"end":{"line":5,"column":42,"index":108}}],"key":"xOxKVS7k9wOBO7C50gqXbLVMn/0=","exportNames":["*"]}},{"name":"./namespace","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":16,"index":229},"end":{"line":8,"column":38,"index":251}}],"key":"u0P7tC+K1OWBPm2ZPzGRIU5NEKE=","exportNames":["*"]}},{"name":"./util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":11,"index":264},"end":{"line":9,"column":28,"index":281}}],"key":"hA8WsniBZrUJ/dmBZgrNdZcEmJ8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  module.exports = Enum;\n\n  // extends ReflectionObject\n  var ReflectionObject = require(_dependencyMap[0], \"./object\");\n  ((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n  var Namespace = require(_dependencyMap[1], \"./namespace\"),\n    util = require(_dependencyMap[2], \"./util\");\n\n  /**\n   * Constructs a new enum instance.\n   * @classdesc Reflected enum.\n   * @extends ReflectionObject\n   * @constructor\n   * @param {string} name Unique name within its namespace\n   * @param {Object.<string,number>} [values] Enum values as an object, by name\n   * @param {Object.<string,*>} [options] Declared options\n   * @param {string} [comment] The comment for this enum\n   * @param {Object.<string,string>} [comments] The value comments for this enum\n   * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n   */\n  function Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n    if (values && typeof values !== \"object\") throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Resolved values features, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this._valuesFeatures = {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values) for (var keys = Object.keys(values), i = 0; i < keys.length; ++i) if (typeof values[keys[i]] === \"number\")\n      // use forward entries only\n      this.valuesById[this.values[keys[i]] = values[keys[i]]] = keys[i];\n  }\n\n  /**\n   * @override\n   */\n  Enum.prototype._resolveFeatures = function _resolveFeatures(edition) {\n    edition = this._edition || edition;\n    ReflectionObject.prototype._resolveFeatures.call(this, edition);\n    Object.keys(this.values).forEach(key => {\n      var parentFeaturesCopy = Object.assign({}, this._features);\n      this._valuesFeatures[key] = Object.assign(parentFeaturesCopy, this.valuesOptions && this.valuesOptions[key] && this.valuesOptions[key].features);\n    });\n    return this;\n  };\n\n  /**\n   * Enum descriptor.\n   * @interface IEnum\n   * @property {Object.<string,number>} values Enum values\n   * @property {Object.<string,*>} [options] Enum options\n   */\n\n  /**\n   * Constructs an enum from an enum descriptor.\n   * @param {string} name Enum name\n   * @param {IEnum} json Enum descriptor\n   * @returns {Enum} Created enum\n   * @throws {TypeError} If arguments are invalid\n   */\n  Enum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    if (json.edition) enm._edition = json.edition;\n    enm._defaultEdition = \"proto3\"; // For backwards-compatibility.\n    return enm;\n  };\n\n  /**\n   * Converts this enum to an enum descriptor.\n   * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n   * @returns {IEnum} Enum descriptor\n   */\n  Enum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\"edition\", this._editionToJSON(), \"options\", this.options, \"valuesOptions\", this.valuesOptions, \"values\", this.values, \"reserved\", this.reserved && this.reserved.length ? this.reserved : undefined, \"comment\", keepComments ? this.comment : undefined, \"comments\", keepComments ? this.comments : undefined]);\n  };\n\n  /**\n   * Adds a value to this enum.\n   * @param {string} name Value name\n   * @param {number} id Value id\n   * @param {string} [comment] Comment, if any\n   * @param {Object.<string, *>|undefined} [options] Options, if any\n   * @returns {Enum} `this`\n   * @throws {TypeError} If arguments are invalid\n   * @throws {Error} If there is already a value with this name or id\n   */\n  Enum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name)) throw TypeError(\"name must be a string\");\n    if (!util.isInteger(id)) throw TypeError(\"id must be an integer\");\n    if (this.values[name] !== undefined) throw Error(\"duplicate name '\" + name + \"' in \" + this);\n    if (this.isReservedId(id)) throw Error(\"id \" + id + \" is reserved in \" + this);\n    if (this.isReservedName(name)) throw Error(\"name '\" + name + \"' is reserved in \" + this);\n    if (this.valuesById[id] !== undefined) {\n      if (!(this.options && this.options.allow_alias)) throw Error(\"duplicate id \" + id + \" in \" + this);\n      this.values[name] = id;\n    } else this.valuesById[this.values[name] = id] = name;\n    if (options) {\n      if (this.valuesOptions === undefined) this.valuesOptions = {};\n      this.valuesOptions[name] = options || null;\n    }\n    this.comments[name] = comment || null;\n    return this;\n  };\n\n  /**\n   * Removes a value from this enum\n   * @param {string} name Value name\n   * @returns {Enum} `this`\n   * @throws {TypeError} If arguments are invalid\n   * @throws {Error} If `name` is not a name of this enum\n   */\n  Enum.prototype.remove = function remove(name) {\n    if (!util.isString(name)) throw TypeError(\"name must be a string\");\n    var val = this.values[name];\n    if (val == null) throw Error(\"name '\" + name + \"' does not exist in \" + this);\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions) delete this.valuesOptions[name];\n    return this;\n  };\n\n  /**\n   * Tests if the specified id is reserved.\n   * @param {number} id Id to test\n   * @returns {boolean} `true` if reserved, otherwise `false`\n   */\n  Enum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n  };\n\n  /**\n   * Tests if the specified name is reserved.\n   * @param {string} name Name to test\n   * @returns {boolean} `true` if reserved, otherwise `false`\n   */\n  Enum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n  };\n});","lineCount":189,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"module"],[4,8,2,6],[4,9,2,7,"exports"],[4,16,2,14],[4,19,2,17,"Enum"],[4,23,2,21],[6,2,4,0],[7,2,5,0],[7,6,5,4,"ReflectionObject"],[7,22,5,20],[7,25,5,23,"require"],[7,32,5,30],[7,33,5,30,"_dependencyMap"],[7,47,5,30],[7,62,5,41],[7,63,5,42],[8,2,6,0],[8,3,6,1],[8,4,6,2,"Enum"],[8,8,6,6],[8,9,6,7,"prototype"],[8,18,6,16],[8,21,6,19,"Object"],[8,27,6,25],[8,28,6,26,"create"],[8,34,6,32],[8,35,6,33,"ReflectionObject"],[8,51,6,49],[8,52,6,50,"prototype"],[8,61,6,59],[8,62,6,60],[8,64,6,62,"constructor"],[8,75,6,73],[8,78,6,76,"Enum"],[8,82,6,80],[8,84,6,82,"className"],[8,93,6,91],[8,96,6,94],[8,102,6,100],[9,2,8,0],[9,6,8,4,"Namespace"],[9,15,8,13],[9,18,8,16,"require"],[9,25,8,23],[9,26,8,23,"_dependencyMap"],[9,40,8,23],[9,58,8,37],[9,59,8,38],[10,4,9,4,"util"],[10,8,9,8],[10,11,9,11,"require"],[10,18,9,18],[10,19,9,18,"_dependencyMap"],[10,33,9,18],[10,46,9,27],[10,47,9,28],[12,2,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,2,23,0],[24,11,23,9,"Enum"],[24,15,23,13,"Enum"],[24,16,23,14,"name"],[24,20,23,18],[24,22,23,20,"values"],[24,28,23,26],[24,30,23,28,"options"],[24,37,23,35],[24,39,23,37,"comment"],[24,46,23,44],[24,48,23,46,"comments"],[24,56,23,54],[24,58,23,56,"valuesOptions"],[24,71,23,69],[24,73,23,71],[25,4,24,4,"ReflectionObject"],[25,20,24,20],[25,21,24,21,"call"],[25,25,24,25],[25,26,24,26],[25,30,24,30],[25,32,24,32,"name"],[25,36,24,36],[25,38,24,38,"options"],[25,45,24,45],[25,46,24,46],[26,4,26,4],[26,8,26,8,"values"],[26,14,26,14],[26,18,26,18],[26,25,26,25,"values"],[26,31,26,31],[26,36,26,36],[26,44,26,44],[26,46,27,8],[26,52,27,14,"TypeError"],[26,61,27,23],[26,62,27,24],[26,88,27,50],[26,89,27,51],[28,4,29,4],[29,0,30,0],[30,0,31,0],[31,0,32,0],[32,4,33,4],[32,8,33,8],[32,9,33,9,"valuesById"],[32,19,33,19],[32,22,33,22],[32,23,33,23],[32,24,33,24],[34,4,35,4],[35,0,36,0],[36,0,37,0],[37,0,38,0],[38,4,39,4],[38,8,39,8],[38,9,39,9,"values"],[38,15,39,15],[38,18,39,18,"Object"],[38,24,39,24],[38,25,39,25,"create"],[38,31,39,31],[38,32,39,32],[38,36,39,36],[38,37,39,37,"valuesById"],[38,47,39,47],[38,48,39,48],[38,49,39,49],[38,50,39,50],[40,4,41,4],[41,0,42,0],[42,0,43,0],[43,0,44,0],[44,4,45,4],[44,8,45,8],[44,9,45,9,"comment"],[44,16,45,16],[44,19,45,19,"comment"],[44,26,45,26],[46,4,47,4],[47,0,48,0],[48,0,49,0],[49,0,50,0],[50,4,51,4],[50,8,51,8],[50,9,51,9,"comments"],[50,17,51,17],[50,20,51,20,"comments"],[50,28,51,28],[50,32,51,32],[50,33,51,33],[50,34,51,34],[52,4,53,4],[53,0,54,0],[54,0,55,0],[55,0,56,0],[56,4,57,4],[56,8,57,8],[56,9,57,9,"valuesOptions"],[56,22,57,22],[56,25,57,25,"valuesOptions"],[56,38,57,38],[58,4,59,4],[59,0,60,0],[60,0,61,0],[61,0,62,0],[62,4,63,4],[62,8,63,8],[62,9,63,9,"_valuesFeatures"],[62,24,63,24],[62,27,63,27],[62,28,63,28],[62,29,63,29],[64,4,65,4],[65,0,66,0],[66,0,67,0],[67,0,68,0],[68,4,69,4],[68,8,69,8],[68,9,69,9,"reserved"],[68,17,69,17],[68,20,69,20,"undefined"],[68,29,69,29],[68,30,69,30],[68,31,69,31],[70,4,71,4],[71,4,72,4],[72,4,73,4],[74,4,75,4],[74,8,75,8,"values"],[74,14,75,14],[74,16,76,8],[74,21,76,13],[74,25,76,17,"keys"],[74,29,76,21],[74,32,76,24,"Object"],[74,38,76,30],[74,39,76,31,"keys"],[74,43,76,35],[74,44,76,36,"values"],[74,50,76,42],[74,51,76,43],[74,53,76,45,"i"],[74,54,76,46],[74,57,76,49],[74,58,76,50],[74,60,76,52,"i"],[74,61,76,53],[74,64,76,56,"keys"],[74,68,76,60],[74,69,76,61,"length"],[74,75,76,67],[74,77,76,69],[74,79,76,71,"i"],[74,80,76,72],[74,82,77,12],[74,86,77,16],[74,93,77,23,"values"],[74,99,77,29],[74,100,77,30,"keys"],[74,104,77,34],[74,105,77,35,"i"],[74,106,77,36],[74,107,77,37],[74,108,77,38],[74,113,77,43],[74,121,77,51],[75,6,77,53],[76,6,78,16],[76,10,78,20],[76,11,78,21,"valuesById"],[76,21,78,31],[76,22,78,33],[76,26,78,37],[76,27,78,38,"values"],[76,33,78,44],[76,34,78,45,"keys"],[76,38,78,49],[76,39,78,50,"i"],[76,40,78,51],[76,41,78,52],[76,42,78,53],[76,45,78,56,"values"],[76,51,78,62],[76,52,78,63,"keys"],[76,56,78,67],[76,57,78,68,"i"],[76,58,78,69],[76,59,78,70],[76,60,78,71],[76,61,78,73],[76,64,78,76,"keys"],[76,68,78,80],[76,69,78,81,"i"],[76,70,78,82],[76,71,78,83],[77,2,79,0],[79,2,81,0],[80,0,82,0],[81,0,83,0],[82,2,84,0,"Enum"],[82,6,84,4],[82,7,84,5,"prototype"],[82,16,84,14],[82,17,84,15,"_resolveFeatures"],[82,33,84,31],[82,36,84,34],[82,45,84,43,"_resolveFeatures"],[82,61,84,59,"_resolveFeatures"],[82,62,84,60,"edition"],[82,69,84,67],[82,71,84,69],[83,4,85,4,"edition"],[83,11,85,11],[83,14,85,14],[83,18,85,18],[83,19,85,19,"_edition"],[83,27,85,27],[83,31,85,31,"edition"],[83,38,85,38],[84,4,86,4,"ReflectionObject"],[84,20,86,20],[84,21,86,21,"prototype"],[84,30,86,30],[84,31,86,31,"_resolveFeatures"],[84,47,86,47],[84,48,86,48,"call"],[84,52,86,52],[84,53,86,53],[84,57,86,57],[84,59,86,59,"edition"],[84,66,86,66],[84,67,86,67],[85,4,88,4,"Object"],[85,10,88,10],[85,11,88,11,"keys"],[85,15,88,15],[85,16,88,16],[85,20,88,20],[85,21,88,21,"values"],[85,27,88,27],[85,28,88,28],[85,29,88,29,"forEach"],[85,36,88,36],[85,37,88,37,"key"],[85,40,88,40],[85,44,88,44],[86,6,89,8],[86,10,89,12,"parentFeaturesCopy"],[86,28,89,30],[86,31,89,33,"Object"],[86,37,89,39],[86,38,89,40,"assign"],[86,44,89,46],[86,45,89,47],[86,46,89,48],[86,47,89,49],[86,49,89,51],[86,53,89,55],[86,54,89,56,"_features"],[86,63,89,65],[86,64,89,66],[87,6,90,8],[87,10,90,12],[87,11,90,13,"_valuesFeatures"],[87,26,90,28],[87,27,90,29,"key"],[87,30,90,32],[87,31,90,33],[87,34,90,36,"Object"],[87,40,90,42],[87,41,90,43,"assign"],[87,47,90,49],[87,48,90,50,"parentFeaturesCopy"],[87,66,90,68],[87,68,90,70],[87,72,90,74],[87,73,90,75,"valuesOptions"],[87,86,90,88],[87,90,90,92],[87,94,90,96],[87,95,90,97,"valuesOptions"],[87,108,90,110],[87,109,90,111,"key"],[87,112,90,114],[87,113,90,115],[87,117,90,119],[87,121,90,123],[87,122,90,124,"valuesOptions"],[87,135,90,137],[87,136,90,138,"key"],[87,139,90,141],[87,140,90,142],[87,141,90,143,"features"],[87,149,90,151],[87,150,90,152],[88,4,91,4],[88,5,91,5],[88,6,91,6],[89,4,93,4],[89,11,93,11],[89,15,93,15],[90,2,94,0],[90,3,94,1],[92,2,96,0],[93,0,97,0],[94,0,98,0],[95,0,99,0],[96,0,100,0],[97,0,101,0],[99,2,103,0],[100,0,104,0],[101,0,105,0],[102,0,106,0],[103,0,107,0],[104,0,108,0],[105,0,109,0],[106,2,110,0,"Enum"],[106,6,110,4],[106,7,110,5,"fromJSON"],[106,15,110,13],[106,18,110,16],[106,27,110,25,"fromJSON"],[106,35,110,33,"fromJSON"],[106,36,110,34,"name"],[106,40,110,38],[106,42,110,40,"json"],[106,46,110,44],[106,48,110,46],[107,4,111,4],[107,8,111,8,"enm"],[107,11,111,11],[107,14,111,14],[107,18,111,18,"Enum"],[107,22,111,22],[107,23,111,23,"name"],[107,27,111,27],[107,29,111,29,"json"],[107,33,111,33],[107,34,111,34,"values"],[107,40,111,40],[107,42,111,42,"json"],[107,46,111,46],[107,47,111,47,"options"],[107,54,111,54],[107,56,111,56,"json"],[107,60,111,60],[107,61,111,61,"comment"],[107,68,111,68],[107,70,111,70,"json"],[107,74,111,74],[107,75,111,75,"comments"],[107,83,111,83],[107,84,111,84],[108,4,112,4,"enm"],[108,7,112,7],[108,8,112,8,"reserved"],[108,16,112,16],[108,19,112,19,"json"],[108,23,112,23],[108,24,112,24,"reserved"],[108,32,112,32],[109,4,113,4],[109,8,113,8,"json"],[109,12,113,12],[109,13,113,13,"edition"],[109,20,113,20],[109,22,114,8,"enm"],[109,25,114,11],[109,26,114,12,"_edition"],[109,34,114,20],[109,37,114,23,"json"],[109,41,114,27],[109,42,114,28,"edition"],[109,49,114,35],[110,4,115,4,"enm"],[110,7,115,7],[110,8,115,8,"_defaultEdition"],[110,23,115,23],[110,26,115,26],[110,34,115,34],[110,35,115,35],[110,36,115,37],[111,4,116,4],[111,11,116,11,"enm"],[111,14,116,14],[112,2,117,0],[112,3,117,1],[114,2,119,0],[115,0,120,0],[116,0,121,0],[117,0,122,0],[118,0,123,0],[119,2,124,0,"Enum"],[119,6,124,4],[119,7,124,5,"prototype"],[119,16,124,14],[119,17,124,15,"toJSON"],[119,23,124,21],[119,26,124,24],[119,35,124,33,"toJSON"],[119,41,124,39,"toJSON"],[119,42,124,40,"toJSONOptions"],[119,55,124,53],[119,57,124,55],[120,4,125,4],[120,8,125,8,"keepComments"],[120,20,125,20],[120,23,125,23,"toJSONOptions"],[120,36,125,36],[120,39,125,39,"Boolean"],[120,46,125,46],[120,47,125,47,"toJSONOptions"],[120,60,125,60],[120,61,125,61,"keepComments"],[120,73,125,73],[120,74,125,74],[120,77,125,77],[120,82,125,82],[121,4,126,4],[121,11,126,11,"util"],[121,15,126,15],[121,16,126,16,"toObject"],[121,24,126,24],[121,25,126,25],[121,26,127,8],[121,35,127,17],[121,37,127,26],[121,41,127,30],[121,42,127,31,"_editionToJSON"],[121,56,127,45],[121,57,127,46],[121,58,127,47],[121,60,128,8],[121,69,128,17],[121,71,128,26],[121,75,128,30],[121,76,128,31,"options"],[121,83,128,38],[121,85,129,8],[121,100,129,23],[121,102,129,26],[121,106,129,30],[121,107,129,31,"valuesOptions"],[121,120,129,44],[121,122,130,8],[121,130,130,16],[121,132,130,26],[121,136,130,30],[121,137,130,31,"values"],[121,143,130,37],[121,145,131,8],[121,155,131,18],[121,157,131,26],[121,161,131,30],[121,162,131,31,"reserved"],[121,170,131,39],[121,174,131,43],[121,178,131,47],[121,179,131,48,"reserved"],[121,187,131,56],[121,188,131,57,"length"],[121,194,131,63],[121,197,131,66],[121,201,131,70],[121,202,131,71,"reserved"],[121,210,131,79],[121,213,131,82,"undefined"],[121,222,131,91],[121,224,132,8],[121,233,132,17],[121,235,132,26,"keepComments"],[121,247,132,38],[121,250,132,41],[121,254,132,45],[121,255,132,46,"comment"],[121,262,132,53],[121,265,132,56,"undefined"],[121,274,132,65],[121,276,133,8],[121,286,133,18],[121,288,133,26,"keepComments"],[121,300,133,38],[121,303,133,41],[121,307,133,45],[121,308,133,46,"comments"],[121,316,133,54],[121,319,133,57,"undefined"],[121,328,133,66],[121,329,134,5],[121,330,134,6],[122,2,135,0],[122,3,135,1],[124,2,137,0],[125,0,138,0],[126,0,139,0],[127,0,140,0],[128,0,141,0],[129,0,142,0],[130,0,143,0],[131,0,144,0],[132,0,145,0],[133,0,146,0],[134,2,147,0,"Enum"],[134,6,147,4],[134,7,147,5,"prototype"],[134,16,147,14],[134,17,147,15,"add"],[134,20,147,18],[134,23,147,21],[134,32,147,30,"add"],[134,35,147,33,"add"],[134,36,147,34,"name"],[134,40,147,38],[134,42,147,40,"id"],[134,44,147,42],[134,46,147,44,"comment"],[134,53,147,51],[134,55,147,53,"options"],[134,62,147,60],[134,64,147,62],[135,4,148,4],[137,4,150,4],[137,8,150,8],[137,9,150,9,"util"],[137,13,150,13],[137,14,150,14,"isString"],[137,22,150,22],[137,23,150,23,"name"],[137,27,150,27],[137,28,150,28],[137,30,151,8],[137,36,151,14,"TypeError"],[137,45,151,23],[137,46,151,24],[137,69,151,47],[137,70,151,48],[138,4,153,4],[138,8,153,8],[138,9,153,9,"util"],[138,13,153,13],[138,14,153,14,"isInteger"],[138,23,153,23],[138,24,153,24,"id"],[138,26,153,26],[138,27,153,27],[138,29,154,8],[138,35,154,14,"TypeError"],[138,44,154,23],[138,45,154,24],[138,68,154,47],[138,69,154,48],[139,4,156,4],[139,8,156,8],[139,12,156,12],[139,13,156,13,"values"],[139,19,156,19],[139,20,156,20,"name"],[139,24,156,24],[139,25,156,25],[139,30,156,30,"undefined"],[139,39,156,39],[139,41,157,8],[139,47,157,14,"Error"],[139,52,157,19],[139,53,157,20],[139,71,157,38],[139,74,157,41,"name"],[139,78,157,45],[139,81,157,48],[139,88,157,55],[139,91,157,58],[139,95,157,62],[139,96,157,63],[140,4,159,4],[140,8,159,8],[140,12,159,12],[140,13,159,13,"isReservedId"],[140,25,159,25],[140,26,159,26,"id"],[140,28,159,28],[140,29,159,29],[140,31,160,8],[140,37,160,14,"Error"],[140,42,160,19],[140,43,160,20],[140,48,160,25],[140,51,160,28,"id"],[140,53,160,30],[140,56,160,33],[140,74,160,51],[140,77,160,54],[140,81,160,58],[140,82,160,59],[141,4,162,4],[141,8,162,8],[141,12,162,12],[141,13,162,13,"isReservedName"],[141,27,162,27],[141,28,162,28,"name"],[141,32,162,32],[141,33,162,33],[141,35,163,8],[141,41,163,14,"Error"],[141,46,163,19],[141,47,163,20],[141,55,163,28],[141,58,163,31,"name"],[141,62,163,35],[141,65,163,38],[141,84,163,57],[141,87,163,60],[141,91,163,64],[141,92,163,65],[142,4,165,4],[142,8,165,8],[142,12,165,12],[142,13,165,13,"valuesById"],[142,23,165,23],[142,24,165,24,"id"],[142,26,165,26],[142,27,165,27],[142,32,165,32,"undefined"],[142,41,165,41],[142,43,165,43],[143,6,166,8],[143,10,166,12],[143,12,166,14],[143,16,166,18],[143,17,166,19,"options"],[143,24,166,26],[143,28,166,30],[143,32,166,34],[143,33,166,35,"options"],[143,40,166,42],[143,41,166,43,"allow_alias"],[143,52,166,54],[143,53,166,55],[143,55,167,12],[143,61,167,18,"Error"],[143,66,167,23],[143,67,167,24],[143,82,167,39],[143,85,167,42,"id"],[143,87,167,44],[143,90,167,47],[143,96,167,53],[143,99,167,56],[143,103,167,60],[143,104,167,61],[144,6,168,8],[144,10,168,12],[144,11,168,13,"values"],[144,17,168,19],[144,18,168,20,"name"],[144,22,168,24],[144,23,168,25],[144,26,168,28,"id"],[144,28,168,30],[145,4,169,4],[145,5,169,5],[145,11,170,8],[145,15,170,12],[145,16,170,13,"valuesById"],[145,26,170,23],[145,27,170,24],[145,31,170,28],[145,32,170,29,"values"],[145,38,170,35],[145,39,170,36,"name"],[145,43,170,40],[145,44,170,41],[145,47,170,44,"id"],[145,49,170,46],[145,50,170,47],[145,53,170,50,"name"],[145,57,170,54],[146,4,172,4],[146,8,172,8,"options"],[146,15,172,15],[146,17,172,17],[147,6,173,8],[147,10,173,12],[147,14,173,16],[147,15,173,17,"valuesOptions"],[147,28,173,30],[147,33,173,35,"undefined"],[147,42,173,44],[147,44,174,12],[147,48,174,16],[147,49,174,17,"valuesOptions"],[147,62,174,30],[147,65,174,33],[147,66,174,34],[147,67,174,35],[148,6,175,8],[148,10,175,12],[148,11,175,13,"valuesOptions"],[148,24,175,26],[148,25,175,27,"name"],[148,29,175,31],[148,30,175,32],[148,33,175,35,"options"],[148,40,175,42],[148,44,175,46],[148,48,175,50],[149,4,176,4],[150,4,178,4],[150,8,178,8],[150,9,178,9,"comments"],[150,17,178,17],[150,18,178,18,"name"],[150,22,178,22],[150,23,178,23],[150,26,178,26,"comment"],[150,33,178,33],[150,37,178,37],[150,41,178,41],[151,4,179,4],[151,11,179,11],[151,15,179,15],[152,2,180,0],[152,3,180,1],[154,2,182,0],[155,0,183,0],[156,0,184,0],[157,0,185,0],[158,0,186,0],[159,0,187,0],[160,0,188,0],[161,2,189,0,"Enum"],[161,6,189,4],[161,7,189,5,"prototype"],[161,16,189,14],[161,17,189,15,"remove"],[161,23,189,21],[161,26,189,24],[161,35,189,33,"remove"],[161,41,189,39,"remove"],[161,42,189,40,"name"],[161,46,189,44],[161,48,189,46],[162,4,191,4],[162,8,191,8],[162,9,191,9,"util"],[162,13,191,13],[162,14,191,14,"isString"],[162,22,191,22],[162,23,191,23,"name"],[162,27,191,27],[162,28,191,28],[162,30,192,8],[162,36,192,14,"TypeError"],[162,45,192,23],[162,46,192,24],[162,69,192,47],[162,70,192,48],[163,4,194,4],[163,8,194,8,"val"],[163,11,194,11],[163,14,194,14],[163,18,194,18],[163,19,194,19,"values"],[163,25,194,25],[163,26,194,26,"name"],[163,30,194,30],[163,31,194,31],[164,4,195,4],[164,8,195,8,"val"],[164,11,195,11],[164,15,195,15],[164,19,195,19],[164,21,196,8],[164,27,196,14,"Error"],[164,32,196,19],[164,33,196,20],[164,41,196,28],[164,44,196,31,"name"],[164,48,196,35],[164,51,196,38],[164,73,196,60],[164,76,196,63],[164,80,196,67],[164,81,196,68],[165,4,198,4],[165,11,198,11],[165,15,198,15],[165,16,198,16,"valuesById"],[165,26,198,26],[165,27,198,27,"val"],[165,30,198,30],[165,31,198,31],[166,4,199,4],[166,11,199,11],[166,15,199,15],[166,16,199,16,"values"],[166,22,199,22],[166,23,199,23,"name"],[166,27,199,27],[166,28,199,28],[167,4,200,4],[167,11,200,11],[167,15,200,15],[167,16,200,16,"comments"],[167,24,200,24],[167,25,200,25,"name"],[167,29,200,29],[167,30,200,30],[168,4,201,4],[168,8,201,8],[168,12,201,12],[168,13,201,13,"valuesOptions"],[168,26,201,26],[168,28,202,8],[168,35,202,15],[168,39,202,19],[168,40,202,20,"valuesOptions"],[168,53,202,33],[168,54,202,34,"name"],[168,58,202,38],[168,59,202,39],[169,4,204,4],[169,11,204,11],[169,15,204,15],[170,2,205,0],[170,3,205,1],[172,2,207,0],[173,0,208,0],[174,0,209,0],[175,0,210,0],[176,0,211,0],[177,2,212,0,"Enum"],[177,6,212,4],[177,7,212,5,"prototype"],[177,16,212,14],[177,17,212,15,"isReservedId"],[177,29,212,27],[177,32,212,30],[177,41,212,39,"isReservedId"],[177,53,212,51,"isReservedId"],[177,54,212,52,"id"],[177,56,212,54],[177,58,212,56],[178,4,213,4],[178,11,213,11,"Namespace"],[178,20,213,20],[178,21,213,21,"isReservedId"],[178,33,213,33],[178,34,213,34],[178,38,213,38],[178,39,213,39,"reserved"],[178,47,213,47],[178,49,213,49,"id"],[178,51,213,51],[178,52,213,52],[179,2,214,0],[179,3,214,1],[181,2,216,0],[182,0,217,0],[183,0,218,0],[184,0,219,0],[185,0,220,0],[186,2,221,0,"Enum"],[186,6,221,4],[186,7,221,5,"prototype"],[186,16,221,14],[186,17,221,15,"isReservedName"],[186,31,221,29],[186,34,221,32],[186,43,221,41,"isReservedName"],[186,57,221,55,"isReservedName"],[186,58,221,56,"name"],[186,62,221,60],[186,64,221,62],[187,4,222,4],[187,11,222,11,"Namespace"],[187,20,222,20],[187,21,222,21,"isReservedName"],[187,35,222,35],[187,36,222,36],[187,40,222,40],[187,41,222,41,"reserved"],[187,49,222,49],[187,51,222,51,"name"],[187,55,222,55],[187,56,222,56],[188,2,223,0],[188,3,223,1],[189,0,223,2],[189,3]],"functionMap":{"names":["<global>","Enum","_resolveFeatures","Object.keys.forEach$argument_0","fromJSON","toJSON","add","remove","isReservedId","isReservedName"],"mappings":"AAA;ACsB;CDwD;kCEK;qCCI;KDG;CFG;gBIgB;CJO;wBKO;CLW;qBMY;CNiC;wBOS;CPgB;8BQO;CRE;gCSO;CTE"}},"type":"js/module"}]}