{"dependencies":[{"name":"./logging","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":18,"index":757},"end":{"line":20,"column":38,"index":777}},{"start":{"line":25,"column":16,"index":939},"end":{"line":25,"column":36,"index":959}}],"key":"IuCQ7u+XFj9mcNQiMAuOpQn/EDM=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":20,"index":799},"end":{"line":21,"column":42,"index":821}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"]}},{"name":"./resolver","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":19,"index":842},"end":{"line":22,"column":40,"index":863}}],"key":"sRT48ZY0MO9jzJf+yVj+EkuLSJg=","exportNames":["*"]}},{"name":"http","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":13,"index":878},"end":{"line":23,"column":28,"index":893}}],"key":"yxqbxLTX0paWNp+looPTDqSlUdI=","exportNames":["*"]}},{"name":"tls","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":12,"index":907},"end":{"line":24,"column":26,"index":921}}],"key":"eX6GUrFMErTifXO1FtYN6E9FYTs=","exportNames":["*"]}},{"name":"./subchannel-address","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":29,"index":990},"end":{"line":26,"column":60,"index":1021}}],"key":"s7maFfe6oUZ6E4vQAG2rWwUHpfM=","exportNames":["*"]}},{"name":"./uri-parser","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":21,"index":1044},"end":{"line":27,"column":44,"index":1067}}],"key":"esiO732HplrDMf1oXKGdpawa/aM=","exportNames":["*"]}},{"name":"url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":28,"column":14,"index":1083},"end":{"line":28,"column":28,"index":1097}}],"key":"Ug/DVHoj+F8BpIFoKWnZvPrb/TI=","exportNames":["*"]}},{"name":"./resolver-dns","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":23,"index":1122},"end":{"line":29,"column":48,"index":1147}}],"key":"+GJZQqRVJ6hBXF1KB9UVC7iTBT4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2019 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getProxiedConnection = exports.mapProxyName = void 0;\n  const logging_1 = require(_dependencyMap[0], \"./logging\");\n  const constants_1 = require(_dependencyMap[1], \"./constants\");\n  const resolver_1 = require(_dependencyMap[2], \"./resolver\");\n  const http = require(_dependencyMap[3], \"http\");\n  const tls = require(_dependencyMap[4], \"tls\");\n  const logging = require(_dependencyMap[0], \"./logging\");\n  const subchannel_address_1 = require(_dependencyMap[5], \"./subchannel-address\");\n  const uri_parser_1 = require(_dependencyMap[6], \"./uri-parser\");\n  const url_1 = require(_dependencyMap[7], \"url\");\n  const resolver_dns_1 = require(_dependencyMap[8], \"./resolver-dns\");\n  const TRACER_NAME = 'proxy';\n  function trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n  }\n  function getProxyInfo() {\n    let proxyEnv = '';\n    let envVar = '';\n    /* Prefer using 'grpc_proxy'. Fallback on 'http_proxy' if it is not set.\n     * Also prefer using 'https_proxy' with fallback on 'http_proxy'. The\n     * fallback behavior can be removed if there's a demand for it.\n     */\n    if (process.env.grpc_proxy) {\n      envVar = 'grpc_proxy';\n      proxyEnv = process.env.grpc_proxy;\n    } else if (process.env.https_proxy) {\n      envVar = 'https_proxy';\n      proxyEnv = process.env.https_proxy;\n    } else if (process.env.http_proxy) {\n      envVar = 'http_proxy';\n      proxyEnv = process.env.http_proxy;\n    } else {\n      return {};\n    }\n    let proxyUrl;\n    try {\n      proxyUrl = new url_1.URL(proxyEnv);\n    } catch (e) {\n      (0, logging_1.log)(constants_1.LogVerbosity.ERROR, `cannot parse value of \"${envVar}\" env var`);\n      return {};\n    }\n    if (proxyUrl.protocol !== 'http:') {\n      (0, logging_1.log)(constants_1.LogVerbosity.ERROR, `\"${proxyUrl.protocol}\" scheme not supported in proxy URI`);\n      return {};\n    }\n    let userCred = null;\n    if (proxyUrl.username) {\n      if (proxyUrl.password) {\n        (0, logging_1.log)(constants_1.LogVerbosity.INFO, 'userinfo found in proxy URI');\n        userCred = `${proxyUrl.username}:${proxyUrl.password}`;\n      } else {\n        userCred = proxyUrl.username;\n      }\n    }\n    const hostname = proxyUrl.hostname;\n    let port = proxyUrl.port;\n    /* The proxy URL uses the scheme \"http:\", which has a default port number of\n     * 80. We need to set that explicitly here if it is omitted because otherwise\n     * it will use gRPC's default port 443. */\n    if (port === '') {\n      port = '80';\n    }\n    const result = {\n      address: `${hostname}:${port}`\n    };\n    if (userCred) {\n      result.creds = userCred;\n    }\n    trace('Proxy server ' + result.address + ' set by environment variable ' + envVar);\n    return result;\n  }\n  function getNoProxyHostList() {\n    /* Prefer using 'no_grpc_proxy'. Fallback on 'no_proxy' if it is not set. */\n    let noProxyStr = process.env.no_grpc_proxy;\n    let envVar = 'no_grpc_proxy';\n    if (!noProxyStr) {\n      noProxyStr = process.env.no_proxy;\n      envVar = 'no_proxy';\n    }\n    if (noProxyStr) {\n      trace('No proxy server list set by environment variable ' + envVar);\n      return noProxyStr.split(',');\n    } else {\n      return [];\n    }\n  }\n  function mapProxyName(target, options) {\n    var _a;\n    const noProxyResult = {\n      target: target,\n      extraOptions: {}\n    };\n    if (((_a = options['grpc.enable_http_proxy']) !== null && _a !== void 0 ? _a : 1) === 0) {\n      return noProxyResult;\n    }\n    if (target.scheme === 'unix') {\n      return noProxyResult;\n    }\n    const proxyInfo = getProxyInfo();\n    if (!proxyInfo.address) {\n      return noProxyResult;\n    }\n    const hostPort = (0, uri_parser_1.splitHostPort)(target.path);\n    if (!hostPort) {\n      return noProxyResult;\n    }\n    const serverHost = hostPort.host;\n    for (const host of getNoProxyHostList()) {\n      if (host === serverHost) {\n        trace('Not using proxy for target in no_proxy list: ' + (0, uri_parser_1.uriToString)(target));\n        return noProxyResult;\n      }\n    }\n    const extraOptions = {\n      'grpc.http_connect_target': (0, uri_parser_1.uriToString)(target)\n    };\n    if (proxyInfo.creds) {\n      extraOptions['grpc.http_connect_creds'] = proxyInfo.creds;\n    }\n    return {\n      target: {\n        scheme: 'dns',\n        path: proxyInfo.address\n      },\n      extraOptions: extraOptions\n    };\n  }\n  exports.mapProxyName = mapProxyName;\n  function getProxiedConnection(address, channelOptions, connectionOptions) {\n    var _a;\n    if (!('grpc.http_connect_target' in channelOptions)) {\n      return Promise.resolve({});\n    }\n    const realTarget = channelOptions['grpc.http_connect_target'];\n    const parsedTarget = (0, uri_parser_1.parseUri)(realTarget);\n    if (parsedTarget === null) {\n      return Promise.resolve({});\n    }\n    const splitHostPost = (0, uri_parser_1.splitHostPort)(parsedTarget.path);\n    if (splitHostPost === null) {\n      return Promise.resolve({});\n    }\n    const hostPort = `${splitHostPost.host}:${(_a = splitHostPost.port) !== null && _a !== void 0 ? _a : resolver_dns_1.DEFAULT_PORT}`;\n    const options = {\n      method: 'CONNECT',\n      path: hostPort\n    };\n    const headers = {\n      Host: hostPort\n    };\n    // Connect to the subchannel address as a proxy\n    if ((0, subchannel_address_1.isTcpSubchannelAddress)(address)) {\n      options.host = address.host;\n      options.port = address.port;\n    } else {\n      options.socketPath = address.path;\n    }\n    if ('grpc.http_connect_creds' in channelOptions) {\n      headers['Proxy-Authorization'] = 'Basic ' + Buffer.from(channelOptions['grpc.http_connect_creds']).toString('base64');\n    }\n    options.headers = headers;\n    const proxyAddressString = (0, subchannel_address_1.subchannelAddressToString)(address);\n    trace('Using proxy ' + proxyAddressString + ' to connect to ' + options.path);\n    return new Promise((resolve, reject) => {\n      const request = http.request(options);\n      request.once('connect', (res, socket, head) => {\n        var _a;\n        request.removeAllListeners();\n        socket.removeAllListeners();\n        if (res.statusCode === 200) {\n          trace('Successfully connected to ' + options.path + ' through proxy ' + proxyAddressString);\n          if ('secureContext' in connectionOptions) {\n            /* The proxy is connecting to a TLS server, so upgrade this socket\n             * connection to a TLS connection.\n             * This is a workaround for https://github.com/nodejs/node/issues/32922\n             * See https://github.com/grpc/grpc-node/pull/1369 for more info. */\n            const targetPath = (0, resolver_1.getDefaultAuthority)(parsedTarget);\n            const hostPort = (0, uri_parser_1.splitHostPort)(targetPath);\n            const remoteHost = (_a = hostPort === null || hostPort === void 0 ? void 0 : hostPort.host) !== null && _a !== void 0 ? _a : targetPath;\n            const cts = tls.connect(Object.assign({\n              host: remoteHost,\n              servername: remoteHost,\n              socket: socket\n            }, connectionOptions), () => {\n              trace('Successfully established a TLS connection to ' + options.path + ' through proxy ' + proxyAddressString);\n              resolve({\n                socket: cts,\n                realTarget: parsedTarget\n              });\n            });\n            cts.on('error', error => {\n              trace('Failed to establish a TLS connection to ' + options.path + ' through proxy ' + proxyAddressString + ' with error ' + error.message);\n              reject();\n            });\n          } else {\n            trace('Successfully established a plaintext connection to ' + options.path + ' through proxy ' + proxyAddressString);\n            resolve({\n              socket,\n              realTarget: parsedTarget\n            });\n          }\n        } else {\n          (0, logging_1.log)(constants_1.LogVerbosity.ERROR, 'Failed to connect to ' + options.path + ' through proxy ' + proxyAddressString + ' with status ' + res.statusCode);\n          reject();\n        }\n      });\n      request.once('error', err => {\n        request.removeAllListeners();\n        (0, logging_1.log)(constants_1.LogVerbosity.ERROR, 'Failed to connect to proxy ' + proxyAddressString + ' with error ' + err.message);\n        reject();\n      });\n      request.end();\n    });\n  }\n  exports.getProxiedConnection = getProxiedConnection;\n});","lineCount":238,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,2,18,0,"Object"],[20,8,18,6],[20,9,18,7,"defineProperty"],[20,23,18,21],[20,24,18,22,"exports"],[20,31,18,29],[20,33,18,31],[20,45,18,43],[20,47,18,45],[21,4,18,47,"value"],[21,9,18,52],[21,11,18,54],[22,2,18,59],[22,3,18,60],[22,4,18,61],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"getProxiedConnection"],[23,30,19,28],[23,33,19,31,"exports"],[23,40,19,38],[23,41,19,39,"mapProxyName"],[23,53,19,51],[23,56,19,54],[23,61,19,59],[23,62,19,60],[24,2,20,0],[24,8,20,6,"logging_1"],[24,17,20,15],[24,20,20,18,"require"],[24,27,20,25],[24,28,20,25,"_dependencyMap"],[24,42,20,25],[24,58,20,37],[24,59,20,38],[25,2,21,0],[25,8,21,6,"constants_1"],[25,19,21,17],[25,22,21,20,"require"],[25,29,21,27],[25,30,21,27,"_dependencyMap"],[25,44,21,27],[25,62,21,41],[25,63,21,42],[26,2,22,0],[26,8,22,6,"resolver_1"],[26,18,22,16],[26,21,22,19,"require"],[26,28,22,26],[26,29,22,26,"_dependencyMap"],[26,43,22,26],[26,60,22,39],[26,61,22,40],[27,2,23,0],[27,8,23,6,"http"],[27,12,23,10],[27,15,23,13,"require"],[27,22,23,20],[27,23,23,20,"_dependencyMap"],[27,37,23,20],[27,48,23,27],[27,49,23,28],[28,2,24,0],[28,8,24,6,"tls"],[28,11,24,9],[28,14,24,12,"require"],[28,21,24,19],[28,22,24,19,"_dependencyMap"],[28,36,24,19],[28,46,24,25],[28,47,24,26],[29,2,25,0],[29,8,25,6,"logging"],[29,15,25,13],[29,18,25,16,"require"],[29,25,25,23],[29,26,25,23,"_dependencyMap"],[29,40,25,23],[29,56,25,35],[29,57,25,36],[30,2,26,0],[30,8,26,6,"subchannel_address_1"],[30,28,26,26],[30,31,26,29,"require"],[30,38,26,36],[30,39,26,36,"_dependencyMap"],[30,53,26,36],[30,80,26,59],[30,81,26,60],[31,2,27,0],[31,8,27,6,"uri_parser_1"],[31,20,27,18],[31,23,27,21,"require"],[31,30,27,28],[31,31,27,28,"_dependencyMap"],[31,45,27,28],[31,64,27,43],[31,65,27,44],[32,2,28,0],[32,8,28,6,"url_1"],[32,13,28,11],[32,16,28,14,"require"],[32,23,28,21],[32,24,28,21,"_dependencyMap"],[32,38,28,21],[32,48,28,27],[32,49,28,28],[33,2,29,0],[33,8,29,6,"resolver_dns_1"],[33,22,29,20],[33,25,29,23,"require"],[33,32,29,30],[33,33,29,30,"_dependencyMap"],[33,47,29,30],[33,68,29,47],[33,69,29,48],[34,2,30,0],[34,8,30,6,"TRACER_NAME"],[34,19,30,17],[34,22,30,20],[34,29,30,27],[35,2,31,0],[35,11,31,9,"trace"],[35,16,31,14,"trace"],[35,17,31,15,"text"],[35,21,31,19],[35,23,31,21],[36,4,32,4,"logging"],[36,11,32,11],[36,12,32,12,"trace"],[36,17,32,17],[36,18,32,18,"constants_1"],[36,29,32,29],[36,30,32,30,"LogVerbosity"],[36,42,32,42],[36,43,32,43,"DEBUG"],[36,48,32,48],[36,50,32,50,"TRACER_NAME"],[36,61,32,61],[36,63,32,63,"text"],[36,67,32,67],[36,68,32,68],[37,2,33,0],[38,2,34,0],[38,11,34,9,"getProxyInfo"],[38,23,34,21,"getProxyInfo"],[38,24,34,21],[38,26,34,24],[39,4,35,4],[39,8,35,8,"proxyEnv"],[39,16,35,16],[39,19,35,19],[39,21,35,21],[40,4,36,4],[40,8,36,8,"envVar"],[40,14,36,14],[40,17,36,17],[40,19,36,19],[41,4,37,4],[42,0,38,0],[43,0,39,0],[44,0,40,0],[45,4,41,4],[45,8,41,8,"process"],[45,15,41,15],[45,16,41,16,"env"],[45,19,41,19],[45,20,41,20,"grpc_proxy"],[45,30,41,30],[45,32,41,32],[46,6,42,8,"envVar"],[46,12,42,14],[46,15,42,17],[46,27,42,29],[47,6,43,8,"proxyEnv"],[47,14,43,16],[47,17,43,19,"process"],[47,24,43,26],[47,25,43,27,"env"],[47,28,43,30],[47,29,43,31,"grpc_proxy"],[47,39,43,41],[48,4,44,4],[48,5,44,5],[48,11,45,9],[48,15,45,13,"process"],[48,22,45,20],[48,23,45,21,"env"],[48,26,45,24],[48,27,45,25,"https_proxy"],[48,38,45,36],[48,40,45,38],[49,6,46,8,"envVar"],[49,12,46,14],[49,15,46,17],[49,28,46,30],[50,6,47,8,"proxyEnv"],[50,14,47,16],[50,17,47,19,"process"],[50,24,47,26],[50,25,47,27,"env"],[50,28,47,30],[50,29,47,31,"https_proxy"],[50,40,47,42],[51,4,48,4],[51,5,48,5],[51,11,49,9],[51,15,49,13,"process"],[51,22,49,20],[51,23,49,21,"env"],[51,26,49,24],[51,27,49,25,"http_proxy"],[51,37,49,35],[51,39,49,37],[52,6,50,8,"envVar"],[52,12,50,14],[52,15,50,17],[52,27,50,29],[53,6,51,8,"proxyEnv"],[53,14,51,16],[53,17,51,19,"process"],[53,24,51,26],[53,25,51,27,"env"],[53,28,51,30],[53,29,51,31,"http_proxy"],[53,39,51,41],[54,4,52,4],[54,5,52,5],[54,11,53,9],[55,6,54,8],[55,13,54,15],[55,14,54,16],[55,15,54,17],[56,4,55,4],[57,4,56,4],[57,8,56,8,"proxyUrl"],[57,16,56,16],[58,4,57,4],[58,8,57,8],[59,6,58,8,"proxyUrl"],[59,14,58,16],[59,17,58,19],[59,21,58,23,"url_1"],[59,26,58,28],[59,27,58,29,"URL"],[59,30,58,32],[59,31,58,33,"proxyEnv"],[59,39,58,41],[59,40,58,42],[60,4,59,4],[60,5,59,5],[60,6,60,4],[60,13,60,11,"e"],[60,14,60,12],[60,16,60,14],[61,6,61,8],[61,7,61,9],[61,8,61,10],[61,10,61,12,"logging_1"],[61,19,61,21],[61,20,61,22,"log"],[61,23,61,25],[61,25,61,27,"constants_1"],[61,36,61,38],[61,37,61,39,"LogVerbosity"],[61,49,61,51],[61,50,61,52,"ERROR"],[61,55,61,57],[61,57,61,59],[61,83,61,85,"envVar"],[61,89,61,91],[61,100,61,102],[61,101,61,103],[62,6,62,8],[62,13,62,15],[62,14,62,16],[62,15,62,17],[63,4,63,4],[64,4,64,4],[64,8,64,8,"proxyUrl"],[64,16,64,16],[64,17,64,17,"protocol"],[64,25,64,25],[64,30,64,30],[64,37,64,37],[64,39,64,39],[65,6,65,8],[65,7,65,9],[65,8,65,10],[65,10,65,12,"logging_1"],[65,19,65,21],[65,20,65,22,"log"],[65,23,65,25],[65,25,65,27,"constants_1"],[65,36,65,38],[65,37,65,39,"LogVerbosity"],[65,49,65,51],[65,50,65,52,"ERROR"],[65,55,65,57],[65,57,65,59],[65,61,65,63,"proxyUrl"],[65,69,65,71],[65,70,65,72,"protocol"],[65,78,65,80],[65,115,65,117],[65,116,65,118],[66,6,66,8],[66,13,66,15],[66,14,66,16],[66,15,66,17],[67,4,67,4],[68,4,68,4],[68,8,68,8,"userCred"],[68,16,68,16],[68,19,68,19],[68,23,68,23],[69,4,69,4],[69,8,69,8,"proxyUrl"],[69,16,69,16],[69,17,69,17,"username"],[69,25,69,25],[69,27,69,27],[70,6,70,8],[70,10,70,12,"proxyUrl"],[70,18,70,20],[70,19,70,21,"password"],[70,27,70,29],[70,29,70,31],[71,8,71,12],[71,9,71,13],[71,10,71,14],[71,12,71,16,"logging_1"],[71,21,71,25],[71,22,71,26,"log"],[71,25,71,29],[71,27,71,31,"constants_1"],[71,38,71,42],[71,39,71,43,"LogVerbosity"],[71,51,71,55],[71,52,71,56,"INFO"],[71,56,71,60],[71,58,71,62],[71,87,71,91],[71,88,71,92],[72,8,72,12,"userCred"],[72,16,72,20],[72,19,72,23],[72,22,72,26,"proxyUrl"],[72,30,72,34],[72,31,72,35,"username"],[72,39,72,43],[72,43,72,47,"proxyUrl"],[72,51,72,55],[72,52,72,56,"password"],[72,60,72,64],[72,62,72,66],[73,6,73,8],[73,7,73,9],[73,13,74,13],[74,8,75,12,"userCred"],[74,16,75,20],[74,19,75,23,"proxyUrl"],[74,27,75,31],[74,28,75,32,"username"],[74,36,75,40],[75,6,76,8],[76,4,77,4],[77,4,78,4],[77,10,78,10,"hostname"],[77,18,78,18],[77,21,78,21,"proxyUrl"],[77,29,78,29],[77,30,78,30,"hostname"],[77,38,78,38],[78,4,79,4],[78,8,79,8,"port"],[78,12,79,12],[78,15,79,15,"proxyUrl"],[78,23,79,23],[78,24,79,24,"port"],[78,28,79,28],[79,4,80,4],[80,0,81,0],[81,0,82,0],[82,4,83,4],[82,8,83,8,"port"],[82,12,83,12],[82,17,83,17],[82,19,83,19],[82,21,83,21],[83,6,84,8,"port"],[83,10,84,12],[83,13,84,15],[83,17,84,19],[84,4,85,4],[85,4,86,4],[85,10,86,10,"result"],[85,16,86,16],[85,19,86,19],[86,6,87,8,"address"],[86,13,87,15],[86,15,87,17],[86,18,87,20,"hostname"],[86,26,87,28],[86,30,87,32,"port"],[86,34,87,36],[87,4,88,4],[87,5,88,5],[88,4,89,4],[88,8,89,8,"userCred"],[88,16,89,16],[88,18,89,18],[89,6,90,8,"result"],[89,12,90,14],[89,13,90,15,"creds"],[89,18,90,20],[89,21,90,23,"userCred"],[89,29,90,31],[90,4,91,4],[91,4,92,4,"trace"],[91,9,92,9],[91,10,92,10],[91,25,92,25],[91,28,92,28,"result"],[91,34,92,34],[91,35,92,35,"address"],[91,42,92,42],[91,45,92,45],[91,76,92,76],[91,79,92,79,"envVar"],[91,85,92,85],[91,86,92,86],[92,4,93,4],[92,11,93,11,"result"],[92,17,93,17],[93,2,94,0],[94,2,95,0],[94,11,95,9,"getNoProxyHostList"],[94,29,95,27,"getNoProxyHostList"],[94,30,95,27],[94,32,95,30],[95,4,96,4],[96,4,97,4],[96,8,97,8,"noProxyStr"],[96,18,97,18],[96,21,97,21,"process"],[96,28,97,28],[96,29,97,29,"env"],[96,32,97,32],[96,33,97,33,"no_grpc_proxy"],[96,46,97,46],[97,4,98,4],[97,8,98,8,"envVar"],[97,14,98,14],[97,17,98,17],[97,32,98,32],[98,4,99,4],[98,8,99,8],[98,9,99,9,"noProxyStr"],[98,19,99,19],[98,21,99,21],[99,6,100,8,"noProxyStr"],[99,16,100,18],[99,19,100,21,"process"],[99,26,100,28],[99,27,100,29,"env"],[99,30,100,32],[99,31,100,33,"no_proxy"],[99,39,100,41],[100,6,101,8,"envVar"],[100,12,101,14],[100,15,101,17],[100,25,101,27],[101,4,102,4],[102,4,103,4],[102,8,103,8,"noProxyStr"],[102,18,103,18],[102,20,103,20],[103,6,104,8,"trace"],[103,11,104,13],[103,12,104,14],[103,63,104,65],[103,66,104,68,"envVar"],[103,72,104,74],[103,73,104,75],[104,6,105,8],[104,13,105,15,"noProxyStr"],[104,23,105,25],[104,24,105,26,"split"],[104,29,105,31],[104,30,105,32],[104,33,105,35],[104,34,105,36],[105,4,106,4],[105,5,106,5],[105,11,107,9],[106,6,108,8],[106,13,108,15],[106,15,108,17],[107,4,109,4],[108,2,110,0],[109,2,111,0],[109,11,111,9,"mapProxyName"],[109,23,111,21,"mapProxyName"],[109,24,111,22,"target"],[109,30,111,28],[109,32,111,30,"options"],[109,39,111,37],[109,41,111,39],[110,4,112,4],[110,8,112,8,"_a"],[110,10,112,10],[111,4,113,4],[111,10,113,10,"noProxyResult"],[111,23,113,23],[111,26,113,26],[112,6,114,8,"target"],[112,12,114,14],[112,14,114,16,"target"],[112,20,114,22],[113,6,115,8,"extraOptions"],[113,18,115,20],[113,20,115,22],[113,21,115,23],[114,4,116,4],[114,5,116,5],[115,4,117,4],[115,8,117,8],[115,9,117,9],[115,10,117,10,"_a"],[115,12,117,12],[115,15,117,15,"options"],[115,22,117,22],[115,23,117,23],[115,47,117,47],[115,48,117,48],[115,54,117,54],[115,58,117,58],[115,62,117,62,"_a"],[115,64,117,64],[115,69,117,69],[115,74,117,74],[115,75,117,75],[115,78,117,78,"_a"],[115,80,117,80],[115,83,117,83],[115,84,117,84],[115,90,117,90],[115,91,117,91],[115,93,117,93],[116,6,118,8],[116,13,118,15,"noProxyResult"],[116,26,118,28],[117,4,119,4],[118,4,120,4],[118,8,120,8,"target"],[118,14,120,14],[118,15,120,15,"scheme"],[118,21,120,21],[118,26,120,26],[118,32,120,32],[118,34,120,34],[119,6,121,8],[119,13,121,15,"noProxyResult"],[119,26,121,28],[120,4,122,4],[121,4,123,4],[121,10,123,10,"proxyInfo"],[121,19,123,19],[121,22,123,22,"getProxyInfo"],[121,34,123,34],[121,35,123,35],[121,36,123,36],[122,4,124,4],[122,8,124,8],[122,9,124,9,"proxyInfo"],[122,18,124,18],[122,19,124,19,"address"],[122,26,124,26],[122,28,124,28],[123,6,125,8],[123,13,125,15,"noProxyResult"],[123,26,125,28],[124,4,126,4],[125,4,127,4],[125,10,127,10,"hostPort"],[125,18,127,18],[125,21,127,21],[125,22,127,22],[125,23,127,23],[125,25,127,25,"uri_parser_1"],[125,37,127,37],[125,38,127,38,"splitHostPort"],[125,51,127,51],[125,53,127,53,"target"],[125,59,127,59],[125,60,127,60,"path"],[125,64,127,64],[125,65,127,65],[126,4,128,4],[126,8,128,8],[126,9,128,9,"hostPort"],[126,17,128,17],[126,19,128,19],[127,6,129,8],[127,13,129,15,"noProxyResult"],[127,26,129,28],[128,4,130,4],[129,4,131,4],[129,10,131,10,"serverHost"],[129,20,131,20],[129,23,131,23,"hostPort"],[129,31,131,31],[129,32,131,32,"host"],[129,36,131,36],[130,4,132,4],[130,9,132,9],[130,15,132,15,"host"],[130,19,132,19],[130,23,132,23,"getNoProxyHostList"],[130,41,132,41],[130,42,132,42],[130,43,132,43],[130,45,132,45],[131,6,133,8],[131,10,133,12,"host"],[131,14,133,16],[131,19,133,21,"serverHost"],[131,29,133,31],[131,31,133,33],[132,8,134,12,"trace"],[132,13,134,17],[132,14,134,18],[132,61,134,65],[132,64,134,68],[132,65,134,69],[132,66,134,70],[132,68,134,72,"uri_parser_1"],[132,80,134,84],[132,81,134,85,"uriToString"],[132,92,134,96],[132,94,134,98,"target"],[132,100,134,104],[132,101,134,105],[132,102,134,106],[133,8,135,12],[133,15,135,19,"noProxyResult"],[133,28,135,32],[134,6,136,8],[135,4,137,4],[136,4,138,4],[136,10,138,10,"extraOptions"],[136,22,138,22],[136,25,138,25],[137,6,139,8],[137,32,139,34],[137,34,139,36],[137,35,139,37],[137,36,139,38],[137,38,139,40,"uri_parser_1"],[137,50,139,52],[137,51,139,53,"uriToString"],[137,62,139,64],[137,64,139,66,"target"],[137,70,139,72],[138,4,140,4],[138,5,140,5],[139,4,141,4],[139,8,141,8,"proxyInfo"],[139,17,141,17],[139,18,141,18,"creds"],[139,23,141,23],[139,25,141,25],[140,6,142,8,"extraOptions"],[140,18,142,20],[140,19,142,21],[140,44,142,46],[140,45,142,47],[140,48,142,50,"proxyInfo"],[140,57,142,59],[140,58,142,60,"creds"],[140,63,142,65],[141,4,143,4],[142,4,144,4],[142,11,144,11],[143,6,145,8,"target"],[143,12,145,14],[143,14,145,16],[144,8,146,12,"scheme"],[144,14,146,18],[144,16,146,20],[144,21,146,25],[145,8,147,12,"path"],[145,12,147,16],[145,14,147,18,"proxyInfo"],[145,23,147,27],[145,24,147,28,"address"],[146,6,148,8],[146,7,148,9],[147,6,149,8,"extraOptions"],[147,18,149,20],[147,20,149,22,"extraOptions"],[148,4,150,4],[148,5,150,5],[149,2,151,0],[150,2,152,0,"exports"],[150,9,152,7],[150,10,152,8,"mapProxyName"],[150,22,152,20],[150,25,152,23,"mapProxyName"],[150,37,152,35],[151,2,153,0],[151,11,153,9,"getProxiedConnection"],[151,31,153,29,"getProxiedConnection"],[151,32,153,30,"address"],[151,39,153,37],[151,41,153,39,"channelOptions"],[151,55,153,53],[151,57,153,55,"connectionOptions"],[151,74,153,72],[151,76,153,74],[152,4,154,4],[152,8,154,8,"_a"],[152,10,154,10],[153,4,155,4],[153,8,155,8],[153,10,155,10],[153,36,155,36],[153,40,155,40,"channelOptions"],[153,54,155,54],[153,55,155,55],[153,57,155,57],[154,6,156,8],[154,13,156,15,"Promise"],[154,20,156,22],[154,21,156,23,"resolve"],[154,28,156,30],[154,29,156,31],[154,30,156,32],[154,31,156,33],[154,32,156,34],[155,4,157,4],[156,4,158,4],[156,10,158,10,"realTarget"],[156,20,158,20],[156,23,158,23,"channelOptions"],[156,37,158,37],[156,38,158,38],[156,64,158,64],[156,65,158,65],[157,4,159,4],[157,10,159,10,"parsedTarget"],[157,22,159,22],[157,25,159,25],[157,26,159,26],[157,27,159,27],[157,29,159,29,"uri_parser_1"],[157,41,159,41],[157,42,159,42,"parseUri"],[157,50,159,50],[157,52,159,52,"realTarget"],[157,62,159,62],[157,63,159,63],[158,4,160,4],[158,8,160,8,"parsedTarget"],[158,20,160,20],[158,25,160,25],[158,29,160,29],[158,31,160,31],[159,6,161,8],[159,13,161,15,"Promise"],[159,20,161,22],[159,21,161,23,"resolve"],[159,28,161,30],[159,29,161,31],[159,30,161,32],[159,31,161,33],[159,32,161,34],[160,4,162,4],[161,4,163,4],[161,10,163,10,"splitHostPost"],[161,23,163,23],[161,26,163,26],[161,27,163,27],[161,28,163,28],[161,30,163,30,"uri_parser_1"],[161,42,163,42],[161,43,163,43,"splitHostPort"],[161,56,163,56],[161,58,163,58,"parsedTarget"],[161,70,163,70],[161,71,163,71,"path"],[161,75,163,75],[161,76,163,76],[162,4,164,4],[162,8,164,8,"splitHostPost"],[162,21,164,21],[162,26,164,26],[162,30,164,30],[162,32,164,32],[163,6,165,8],[163,13,165,15,"Promise"],[163,20,165,22],[163,21,165,23,"resolve"],[163,28,165,30],[163,29,165,31],[163,30,165,32],[163,31,165,33],[163,32,165,34],[164,4,166,4],[165,4,167,4],[165,10,167,10,"hostPort"],[165,18,167,18],[165,21,167,21],[165,24,167,24,"splitHostPost"],[165,37,167,37],[165,38,167,38,"host"],[165,42,167,42],[165,46,167,46],[165,47,167,47,"_a"],[165,49,167,49],[165,52,167,52,"splitHostPost"],[165,65,167,65],[165,66,167,66,"port"],[165,70,167,70],[165,76,167,76],[165,80,167,80],[165,84,167,84,"_a"],[165,86,167,86],[165,91,167,91],[165,96,167,96],[165,97,167,97],[165,100,167,100,"_a"],[165,102,167,102],[165,105,167,105,"resolver_dns_1"],[165,119,167,119],[165,120,167,120,"DEFAULT_PORT"],[165,132,167,132],[165,134,167,134],[166,4,168,4],[166,10,168,10,"options"],[166,17,168,17],[166,20,168,20],[167,6,169,8,"method"],[167,12,169,14],[167,14,169,16],[167,23,169,25],[168,6,170,8,"path"],[168,10,170,12],[168,12,170,14,"hostPort"],[169,4,171,4],[169,5,171,5],[170,4,172,4],[170,10,172,10,"headers"],[170,17,172,17],[170,20,172,20],[171,6,173,8,"Host"],[171,10,173,12],[171,12,173,14,"hostPort"],[172,4,174,4],[172,5,174,5],[173,4,175,4],[174,4,176,4],[174,8,176,8],[174,9,176,9],[174,10,176,10],[174,12,176,12,"subchannel_address_1"],[174,32,176,32],[174,33,176,33,"isTcpSubchannelAddress"],[174,55,176,55],[174,57,176,57,"address"],[174,64,176,64],[174,65,176,65],[174,67,176,67],[175,6,177,8,"options"],[175,13,177,15],[175,14,177,16,"host"],[175,18,177,20],[175,21,177,23,"address"],[175,28,177,30],[175,29,177,31,"host"],[175,33,177,35],[176,6,178,8,"options"],[176,13,178,15],[176,14,178,16,"port"],[176,18,178,20],[176,21,178,23,"address"],[176,28,178,30],[176,29,178,31,"port"],[176,33,178,35],[177,4,179,4],[177,5,179,5],[177,11,180,9],[178,6,181,8,"options"],[178,13,181,15],[178,14,181,16,"socketPath"],[178,24,181,26],[178,27,181,29,"address"],[178,34,181,36],[178,35,181,37,"path"],[178,39,181,41],[179,4,182,4],[180,4,183,4],[180,8,183,8],[180,33,183,33],[180,37,183,37,"channelOptions"],[180,51,183,51],[180,53,183,53],[181,6,184,8,"headers"],[181,13,184,15],[181,14,184,16],[181,35,184,37],[181,36,184,38],[181,39,185,12],[181,47,185,20],[181,50,186,16,"Buffer"],[181,56,186,22],[181,57,186,23,"from"],[181,61,186,27],[181,62,186,28,"channelOptions"],[181,76,186,42],[181,77,186,43],[181,102,186,68],[181,103,186,69],[181,104,186,70],[181,105,186,71,"toString"],[181,113,186,79],[181,114,186,80],[181,122,186,88],[181,123,186,89],[182,4,187,4],[183,4,188,4,"options"],[183,11,188,11],[183,12,188,12,"headers"],[183,19,188,19],[183,22,188,22,"headers"],[183,29,188,29],[184,4,189,4],[184,10,189,10,"proxyAddressString"],[184,28,189,28],[184,31,189,31],[184,32,189,32],[184,33,189,33],[184,35,189,35,"subchannel_address_1"],[184,55,189,55],[184,56,189,56,"subchannelAddressToString"],[184,81,189,81],[184,83,189,83,"address"],[184,90,189,90],[184,91,189,91],[185,4,190,4,"trace"],[185,9,190,9],[185,10,190,10],[185,24,190,24],[185,27,190,27,"proxyAddressString"],[185,45,190,45],[185,48,190,48],[185,65,190,65],[185,68,190,68,"options"],[185,75,190,75],[185,76,190,76,"path"],[185,80,190,80],[185,81,190,81],[186,4,191,4],[186,11,191,11],[186,15,191,15,"Promise"],[186,22,191,22],[186,23,191,23],[186,24,191,24,"resolve"],[186,31,191,31],[186,33,191,33,"reject"],[186,39,191,39],[186,44,191,44],[187,6,192,8],[187,12,192,14,"request"],[187,19,192,21],[187,22,192,24,"http"],[187,26,192,28],[187,27,192,29,"request"],[187,34,192,36],[187,35,192,37,"options"],[187,42,192,44],[187,43,192,45],[188,6,193,8,"request"],[188,13,193,15],[188,14,193,16,"once"],[188,18,193,20],[188,19,193,21],[188,28,193,30],[188,30,193,32],[188,31,193,33,"res"],[188,34,193,36],[188,36,193,38,"socket"],[188,42,193,44],[188,44,193,46,"head"],[188,48,193,50],[188,53,193,55],[189,8,194,12],[189,12,194,16,"_a"],[189,14,194,18],[190,8,195,12,"request"],[190,15,195,19],[190,16,195,20,"removeAllListeners"],[190,34,195,38],[190,35,195,39],[190,36,195,40],[191,8,196,12,"socket"],[191,14,196,18],[191,15,196,19,"removeAllListeners"],[191,33,196,37],[191,34,196,38],[191,35,196,39],[192,8,197,12],[192,12,197,16,"res"],[192,15,197,19],[192,16,197,20,"statusCode"],[192,26,197,30],[192,31,197,35],[192,34,197,38],[192,36,197,40],[193,10,198,16,"trace"],[193,15,198,21],[193,16,198,22],[193,44,198,50],[193,47,199,20,"options"],[193,54,199,27],[193,55,199,28,"path"],[193,59,199,32],[193,62,200,20],[193,79,200,37],[193,82,201,20,"proxyAddressString"],[193,100,201,38],[193,101,201,39],[194,10,202,16],[194,14,202,20],[194,29,202,35],[194,33,202,39,"connectionOptions"],[194,50,202,56],[194,52,202,58],[195,12,203,20],[196,0,204,0],[197,0,205,0],[198,0,206,0],[199,12,207,20],[199,18,207,26,"targetPath"],[199,28,207,36],[199,31,207,39],[199,32,207,40],[199,33,207,41],[199,35,207,43,"resolver_1"],[199,45,207,53],[199,46,207,54,"getDefaultAuthority"],[199,65,207,73],[199,67,207,75,"parsedTarget"],[199,79,207,87],[199,80,207,88],[200,12,208,20],[200,18,208,26,"hostPort"],[200,26,208,34],[200,29,208,37],[200,30,208,38],[200,31,208,39],[200,33,208,41,"uri_parser_1"],[200,45,208,53],[200,46,208,54,"splitHostPort"],[200,59,208,67],[200,61,208,69,"targetPath"],[200,71,208,79],[200,72,208,80],[201,12,209,20],[201,18,209,26,"remoteHost"],[201,28,209,36],[201,31,209,39],[201,32,209,40,"_a"],[201,34,209,42],[201,37,209,45,"hostPort"],[201,45,209,53],[201,50,209,58],[201,54,209,62],[201,58,209,66,"hostPort"],[201,66,209,74],[201,71,209,79],[201,76,209,84],[201,77,209,85],[201,80,209,88],[201,85,209,93],[201,86,209,94],[201,89,209,97,"hostPort"],[201,97,209,105],[201,98,209,106,"host"],[201,102,209,110],[201,108,209,116],[201,112,209,120],[201,116,209,124,"_a"],[201,118,209,126],[201,123,209,131],[201,128,209,136],[201,129,209,137],[201,132,209,140,"_a"],[201,134,209,142],[201,137,209,145,"targetPath"],[201,147,209,155],[202,12,210,20],[202,18,210,26,"cts"],[202,21,210,29],[202,24,210,32,"tls"],[202,27,210,35],[202,28,210,36,"connect"],[202,35,210,43],[202,36,210,44,"Object"],[202,42,210,50],[202,43,210,51,"assign"],[202,49,210,57],[202,50,210,58],[203,14,210,60,"host"],[203,18,210,64],[203,20,210,66,"remoteHost"],[203,30,210,76],[204,14,210,78,"servername"],[204,24,210,88],[204,26,210,90,"remoteHost"],[204,36,210,100],[205,14,210,102,"socket"],[205,20,210,108],[205,22,210,110,"socket"],[206,12,210,117],[206,13,210,118],[206,15,210,120,"connectionOptions"],[206,32,210,137],[206,33,210,138],[206,35,210,140],[206,41,210,146],[207,14,211,24,"trace"],[207,19,211,29],[207,20,211,30],[207,67,211,77],[207,70,212,28,"options"],[207,77,212,35],[207,78,212,36,"path"],[207,82,212,40],[207,85,213,28],[207,102,213,45],[207,105,214,28,"proxyAddressString"],[207,123,214,46],[207,124,214,47],[208,14,215,24,"resolve"],[208,21,215,31],[208,22,215,32],[209,16,215,34,"socket"],[209,22,215,40],[209,24,215,42,"cts"],[209,27,215,45],[210,16,215,47,"realTarget"],[210,26,215,57],[210,28,215,59,"parsedTarget"],[211,14,215,72],[211,15,215,73],[211,16,215,74],[212,12,216,20],[212,13,216,21],[212,14,216,22],[213,12,217,20,"cts"],[213,15,217,23],[213,16,217,24,"on"],[213,18,217,26],[213,19,217,27],[213,26,217,34],[213,28,217,37,"error"],[213,33,217,42],[213,37,217,47],[214,14,218,24,"trace"],[214,19,218,29],[214,20,218,30],[214,62,218,72],[214,65,219,28,"options"],[214,72,219,35],[214,73,219,36,"path"],[214,77,219,40],[214,80,220,28],[214,97,220,45],[214,100,221,28,"proxyAddressString"],[214,118,221,46],[214,121,222,28],[214,135,222,42],[214,138,223,28,"error"],[214,143,223,33],[214,144,223,34,"message"],[214,151,223,41],[214,152,223,42],[215,14,224,24,"reject"],[215,20,224,30],[215,21,224,31],[215,22,224,32],[216,12,225,20],[216,13,225,21],[216,14,225,22],[217,10,226,16],[217,11,226,17],[217,17,227,21],[218,12,228,20,"trace"],[218,17,228,25],[218,18,228,26],[218,71,228,79],[218,74,229,24,"options"],[218,81,229,31],[218,82,229,32,"path"],[218,86,229,36],[218,89,230,24],[218,106,230,41],[218,109,231,24,"proxyAddressString"],[218,127,231,42],[218,128,231,43],[219,12,232,20,"resolve"],[219,19,232,27],[219,20,232,28],[220,14,233,24,"socket"],[220,20,233,30],[221,14,234,24,"realTarget"],[221,24,234,34],[221,26,234,36,"parsedTarget"],[222,12,235,20],[222,13,235,21],[222,14,235,22],[223,10,236,16],[224,8,237,12],[224,9,237,13],[224,15,238,17],[225,10,239,16],[225,11,239,17],[225,12,239,18],[225,14,239,20,"logging_1"],[225,23,239,29],[225,24,239,30,"log"],[225,27,239,33],[225,29,239,35,"constants_1"],[225,40,239,46],[225,41,239,47,"LogVerbosity"],[225,53,239,59],[225,54,239,60,"ERROR"],[225,59,239,65],[225,61,239,67],[225,84,239,90],[225,87,240,20,"options"],[225,94,240,27],[225,95,240,28,"path"],[225,99,240,32],[225,102,241,20],[225,119,241,37],[225,122,242,20,"proxyAddressString"],[225,140,242,38],[225,143,243,20],[225,158,243,35],[225,161,244,20,"res"],[225,164,244,23],[225,165,244,24,"statusCode"],[225,175,244,34],[225,176,244,35],[226,10,245,16,"reject"],[226,16,245,22],[226,17,245,23],[226,18,245,24],[227,8,246,12],[228,6,247,8],[228,7,247,9],[228,8,247,10],[229,6,248,8,"request"],[229,13,248,15],[229,14,248,16,"once"],[229,18,248,20],[229,19,248,21],[229,26,248,28],[229,28,248,30,"err"],[229,31,248,33],[229,35,248,37],[230,8,249,12,"request"],[230,15,249,19],[230,16,249,20,"removeAllListeners"],[230,34,249,38],[230,35,249,39],[230,36,249,40],[231,8,250,12],[231,9,250,13],[231,10,250,14],[231,12,250,16,"logging_1"],[231,21,250,25],[231,22,250,26,"log"],[231,25,250,29],[231,27,250,31,"constants_1"],[231,38,250,42],[231,39,250,43,"LogVerbosity"],[231,51,250,55],[231,52,250,56,"ERROR"],[231,57,250,61],[231,59,250,63],[231,88,250,92],[231,91,251,16,"proxyAddressString"],[231,109,251,34],[231,112,252,16],[231,126,252,30],[231,129,253,16,"err"],[231,132,253,19],[231,133,253,20,"message"],[231,140,253,27],[231,141,253,28],[232,8,254,12,"reject"],[232,14,254,18],[232,15,254,19],[232,16,254,20],[233,6,255,8],[233,7,255,9],[233,8,255,10],[234,6,256,8,"request"],[234,13,256,15],[234,14,256,16,"end"],[234,17,256,19],[234,18,256,20],[234,19,256,21],[235,4,257,4],[235,5,257,5],[235,6,257,6],[236,2,258,0],[237,2,259,0,"exports"],[237,9,259,7],[237,10,259,8,"getProxiedConnection"],[237,30,259,28],[237,33,259,31,"getProxiedConnection"],[237,53,259,51],[238,0,259,52],[238,3]],"functionMap":{"names":["<global>","trace","getProxyInfo","getNoProxyHostList","mapProxyName","getProxiedConnection","Promise$argument_0","request.once$argument_1","tls.connect$argument_1","cts.on$argument_1"],"mappings":"AAA;AC8B;CDE;AEC;CF4D;AGC;CHe;AIC;CJwC;AKE;uBCsC;gCCE;4ICiB;qBDM;oCEC;qBFQ;SDsB;8BCC;SDO;KDE;CLC"}},"type":"js/module"}]}