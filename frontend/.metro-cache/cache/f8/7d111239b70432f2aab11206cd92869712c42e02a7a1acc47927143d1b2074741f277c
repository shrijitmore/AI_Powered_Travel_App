{"dependencies":[{"name":"tls","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":14,"index":728},"end":{"line":20,"column":28,"index":742}}],"key":"eX6GUrFMErTifXO1FtYN6E9FYTs=","exportNames":["*"]}},{"name":"./call-credentials","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":27,"index":771},"end":{"line":21,"column":56,"index":800}}],"key":"ZWJcbQwIvdlkCRoae4wnlpIXZd4=","exportNames":["*"]}},{"name":"./tls-helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":22,"index":824},"end":{"line":22,"column":46,"index":848}}],"key":"8mbxh5tJnIQlGM4e70Wxnn35nsQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2019 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ChannelCredentials = void 0;\n  const tls_1 = require(_dependencyMap[0], \"tls\");\n  const call_credentials_1 = require(_dependencyMap[1], \"./call-credentials\");\n  const tls_helpers_1 = require(_dependencyMap[2], \"./tls-helpers\");\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function verifyIsBufferOrNull(obj, friendlyName) {\n    if (obj && !(obj instanceof Buffer)) {\n      throw new TypeError(`${friendlyName}, if provided, must be a Buffer.`);\n    }\n  }\n  /**\n   * A class that contains credentials for communicating over a channel, as well\n   * as a set of per-call credentials, which are applied to every method call made\n   * over a channel initialized with an instance of this class.\n   */\n  class ChannelCredentials {\n    constructor(callCredentials) {\n      this.callCredentials = callCredentials || call_credentials_1.CallCredentials.createEmpty();\n    }\n    /**\n     * Gets the set of per-call credentials associated with this instance.\n     */\n    _getCallCredentials() {\n      return this.callCredentials;\n    }\n    /**\n     * Return a new ChannelCredentials instance with a given set of credentials.\n     * The resulting instance can be used to construct a Channel that communicates\n     * over TLS.\n     * @param rootCerts The root certificate data.\n     * @param privateKey The client certificate private key, if available.\n     * @param certChain The client certificate key chain, if available.\n     * @param verifyOptions Additional options to modify certificate verification\n     */\n    static createSsl(rootCerts, privateKey, certChain, verifyOptions) {\n      var _a;\n      verifyIsBufferOrNull(rootCerts, 'Root certificate');\n      verifyIsBufferOrNull(privateKey, 'Private key');\n      verifyIsBufferOrNull(certChain, 'Certificate chain');\n      if (privateKey && !certChain) {\n        throw new Error('Private key must be given with accompanying certificate chain');\n      }\n      if (!privateKey && certChain) {\n        throw new Error('Certificate chain must be given with accompanying private key');\n      }\n      const secureContext = (0, tls_1.createSecureContext)({\n        ca: (_a = rootCerts !== null && rootCerts !== void 0 ? rootCerts : (0, tls_helpers_1.getDefaultRootsData)()) !== null && _a !== void 0 ? _a : undefined,\n        key: privateKey !== null && privateKey !== void 0 ? privateKey : undefined,\n        cert: certChain !== null && certChain !== void 0 ? certChain : undefined,\n        ciphers: tls_helpers_1.CIPHER_SUITES\n      });\n      return new SecureChannelCredentialsImpl(secureContext, verifyOptions !== null && verifyOptions !== void 0 ? verifyOptions : {});\n    }\n    /**\n     * Return a new ChannelCredentials instance with credentials created using\n     * the provided secureContext. The resulting instances can be used to\n     * construct a Channel that communicates over TLS. gRPC will not override\n     * anything in the provided secureContext, so the environment variables\n     * GRPC_SSL_CIPHER_SUITES and GRPC_DEFAULT_SSL_ROOTS_FILE_PATH will\n     * not be applied.\n     * @param secureContext The return value of tls.createSecureContext()\n     * @param verifyOptions Additional options to modify certificate verification\n     */\n    static createFromSecureContext(secureContext, verifyOptions) {\n      return new SecureChannelCredentialsImpl(secureContext, verifyOptions !== null && verifyOptions !== void 0 ? verifyOptions : {});\n    }\n    /**\n     * Return a new ChannelCredentials instance with no credentials.\n     */\n    static createInsecure() {\n      return new InsecureChannelCredentialsImpl();\n    }\n  }\n  exports.ChannelCredentials = ChannelCredentials;\n  class InsecureChannelCredentialsImpl extends ChannelCredentials {\n    constructor(callCredentials) {\n      super(callCredentials);\n    }\n    compose(callCredentials) {\n      throw new Error('Cannot compose insecure credentials');\n    }\n    _getConnectionOptions() {\n      return null;\n    }\n    _isSecure() {\n      return false;\n    }\n    _equals(other) {\n      return other instanceof InsecureChannelCredentialsImpl;\n    }\n  }\n  class SecureChannelCredentialsImpl extends ChannelCredentials {\n    constructor(secureContext, verifyOptions) {\n      super();\n      this.secureContext = secureContext;\n      this.verifyOptions = verifyOptions;\n      this.connectionOptions = {\n        secureContext\n      };\n      // Node asserts that this option is a function, so we cannot pass undefined\n      if (verifyOptions === null || verifyOptions === void 0 ? void 0 : verifyOptions.checkServerIdentity) {\n        this.connectionOptions.checkServerIdentity = verifyOptions.checkServerIdentity;\n      }\n    }\n    compose(callCredentials) {\n      const combinedCallCredentials = this.callCredentials.compose(callCredentials);\n      return new ComposedChannelCredentialsImpl(this, combinedCallCredentials);\n    }\n    _getConnectionOptions() {\n      // Copy to prevent callers from mutating this.connectionOptions\n      return Object.assign({}, this.connectionOptions);\n    }\n    _isSecure() {\n      return true;\n    }\n    _equals(other) {\n      if (this === other) {\n        return true;\n      }\n      if (other instanceof SecureChannelCredentialsImpl) {\n        return this.secureContext === other.secureContext && this.verifyOptions.checkServerIdentity === other.verifyOptions.checkServerIdentity;\n      } else {\n        return false;\n      }\n    }\n  }\n  class ComposedChannelCredentialsImpl extends ChannelCredentials {\n    constructor(channelCredentials, callCreds) {\n      super(callCreds);\n      this.channelCredentials = channelCredentials;\n    }\n    compose(callCredentials) {\n      const combinedCallCredentials = this.callCredentials.compose(callCredentials);\n      return new ComposedChannelCredentialsImpl(this.channelCredentials, combinedCallCredentials);\n    }\n    _getConnectionOptions() {\n      return this.channelCredentials._getConnectionOptions();\n    }\n    _isSecure() {\n      return true;\n    }\n    _equals(other) {\n      if (this === other) {\n        return true;\n      }\n      if (other instanceof ComposedChannelCredentialsImpl) {\n        return this.channelCredentials._equals(other.channelCredentials) && this.callCredentials._equals(other.callCredentials);\n      } else {\n        return false;\n      }\n    }\n  }\n});","lineCount":175,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,2,18,0,"Object"],[20,8,18,6],[20,9,18,7,"defineProperty"],[20,23,18,21],[20,24,18,22,"exports"],[20,31,18,29],[20,33,18,31],[20,45,18,43],[20,47,18,45],[21,4,18,47,"value"],[21,9,18,52],[21,11,18,54],[22,2,18,59],[22,3,18,60],[22,4,18,61],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"ChannelCredentials"],[23,28,19,26],[23,31,19,29],[23,36,19,34],[23,37,19,35],[24,2,20,0],[24,8,20,6,"tls_1"],[24,13,20,11],[24,16,20,14,"require"],[24,23,20,21],[24,24,20,21,"_dependencyMap"],[24,38,20,21],[24,48,20,27],[24,49,20,28],[25,2,21,0],[25,8,21,6,"call_credentials_1"],[25,26,21,24],[25,29,21,27,"require"],[25,36,21,34],[25,37,21,34,"_dependencyMap"],[25,51,21,34],[25,76,21,55],[25,77,21,56],[26,2,22,0],[26,8,22,6,"tls_helpers_1"],[26,21,22,19],[26,24,22,22,"require"],[26,31,22,29],[26,32,22,29,"_dependencyMap"],[26,46,22,29],[26,66,22,45],[26,67,22,46],[27,2,23,0],[28,2,24,0],[28,11,24,9,"verifyIsBufferOrNull"],[28,31,24,29,"verifyIsBufferOrNull"],[28,32,24,30,"obj"],[28,35,24,33],[28,37,24,35,"friendlyName"],[28,49,24,47],[28,51,24,49],[29,4,25,4],[29,8,25,8,"obj"],[29,11,25,11],[29,15,25,15],[29,17,25,17,"obj"],[29,20,25,20],[29,32,25,32,"Buffer"],[29,38,25,38],[29,39,25,39],[29,41,25,41],[30,6,26,8],[30,12,26,14],[30,16,26,18,"TypeError"],[30,25,26,27],[30,26,26,28],[30,29,26,31,"friendlyName"],[30,41,26,43],[30,75,26,77],[30,76,26,78],[31,4,27,4],[32,2,28,0],[33,2,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,2,34,0],[38,8,34,6,"ChannelCredentials"],[38,26,34,24],[38,27,34,25],[39,4,35,4,"constructor"],[39,15,35,15,"constructor"],[39,16,35,16,"callCredentials"],[39,31,35,31],[39,33,35,33],[40,6,36,8],[40,10,36,12],[40,11,36,13,"callCredentials"],[40,26,36,28],[40,29,36,31,"callCredentials"],[40,44,36,46],[40,48,36,50,"call_credentials_1"],[40,66,36,68],[40,67,36,69,"CallCredentials"],[40,82,36,84],[40,83,36,85,"createEmpty"],[40,94,36,96],[40,95,36,97],[40,96,36,98],[41,4,37,4],[42,4,38,4],[43,0,39,0],[44,0,40,0],[45,4,41,4,"_getCallCredentials"],[45,23,41,23,"_getCallCredentials"],[45,24,41,23],[45,26,41,26],[46,6,42,8],[46,13,42,15],[46,17,42,19],[46,18,42,20,"callCredentials"],[46,33,42,35],[47,4,43,4],[48,4,44,4],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,4,53,4],[57,11,53,11,"createSsl"],[57,20,53,20,"createSsl"],[57,21,53,21,"rootCerts"],[57,30,53,30],[57,32,53,32,"privateKey"],[57,42,53,42],[57,44,53,44,"certChain"],[57,53,53,53],[57,55,53,55,"verifyOptions"],[57,68,53,68],[57,70,53,70],[58,6,54,8],[58,10,54,12,"_a"],[58,12,54,14],[59,6,55,8,"verifyIsBufferOrNull"],[59,26,55,28],[59,27,55,29,"rootCerts"],[59,36,55,38],[59,38,55,40],[59,56,55,58],[59,57,55,59],[60,6,56,8,"verifyIsBufferOrNull"],[60,26,56,28],[60,27,56,29,"privateKey"],[60,37,56,39],[60,39,56,41],[60,52,56,54],[60,53,56,55],[61,6,57,8,"verifyIsBufferOrNull"],[61,26,57,28],[61,27,57,29,"certChain"],[61,36,57,38],[61,38,57,40],[61,57,57,59],[61,58,57,60],[62,6,58,8],[62,10,58,12,"privateKey"],[62,20,58,22],[62,24,58,26],[62,25,58,27,"certChain"],[62,34,58,36],[62,36,58,38],[63,8,59,12],[63,14,59,18],[63,18,59,22,"Error"],[63,23,59,27],[63,24,59,28],[63,87,59,91],[63,88,59,92],[64,6,60,8],[65,6,61,8],[65,10,61,12],[65,11,61,13,"privateKey"],[65,21,61,23],[65,25,61,27,"certChain"],[65,34,61,36],[65,36,61,38],[66,8,62,12],[66,14,62,18],[66,18,62,22,"Error"],[66,23,62,27],[66,24,62,28],[66,87,62,91],[66,88,62,92],[67,6,63,8],[68,6,64,8],[68,12,64,14,"secureContext"],[68,25,64,27],[68,28,64,30],[68,29,64,31],[68,30,64,32],[68,32,64,34,"tls_1"],[68,37,64,39],[68,38,64,40,"createSecureContext"],[68,57,64,59],[68,59,64,61],[69,8,65,12,"ca"],[69,10,65,14],[69,12,65,16],[69,13,65,17,"_a"],[69,15,65,19],[69,18,65,22,"rootCerts"],[69,27,65,31],[69,32,65,36],[69,36,65,40],[69,40,65,44,"rootCerts"],[69,49,65,53],[69,54,65,58],[69,59,65,63],[69,60,65,64],[69,63,65,67,"rootCerts"],[69,72,65,76],[69,75,65,79],[69,76,65,80],[69,77,65,81],[69,79,65,83,"tls_helpers_1"],[69,92,65,96],[69,93,65,97,"getDefaultRootsData"],[69,112,65,116],[69,114,65,118],[69,115,65,119],[69,121,65,125],[69,125,65,129],[69,129,65,133,"_a"],[69,131,65,135],[69,136,65,140],[69,141,65,145],[69,142,65,146],[69,145,65,149,"_a"],[69,147,65,151],[69,150,65,154,"undefined"],[69,159,65,163],[70,8,66,12,"key"],[70,11,66,15],[70,13,66,17,"privateKey"],[70,23,66,27],[70,28,66,32],[70,32,66,36],[70,36,66,40,"privateKey"],[70,46,66,50],[70,51,66,55],[70,56,66,60],[70,57,66,61],[70,60,66,64,"privateKey"],[70,70,66,74],[70,73,66,77,"undefined"],[70,82,66,86],[71,8,67,12,"cert"],[71,12,67,16],[71,14,67,18,"certChain"],[71,23,67,27],[71,28,67,32],[71,32,67,36],[71,36,67,40,"certChain"],[71,45,67,49],[71,50,67,54],[71,55,67,59],[71,56,67,60],[71,59,67,63,"certChain"],[71,68,67,72],[71,71,67,75,"undefined"],[71,80,67,84],[72,8,68,12,"ciphers"],[72,15,68,19],[72,17,68,21,"tls_helpers_1"],[72,30,68,34],[72,31,68,35,"CIPHER_SUITES"],[73,6,69,8],[73,7,69,9],[73,8,69,10],[74,6,70,8],[74,13,70,15],[74,17,70,19,"SecureChannelCredentialsImpl"],[74,45,70,47],[74,46,70,48,"secureContext"],[74,59,70,61],[74,61,70,63,"verifyOptions"],[74,74,70,76],[74,79,70,81],[74,83,70,85],[74,87,70,89,"verifyOptions"],[74,100,70,102],[74,105,70,107],[74,110,70,112],[74,111,70,113],[74,114,70,116,"verifyOptions"],[74,127,70,129],[74,130,70,132],[74,131,70,133],[74,132,70,134],[74,133,70,135],[75,4,71,4],[76,4,72,4],[77,0,73,0],[78,0,74,0],[79,0,75,0],[80,0,76,0],[81,0,77,0],[82,0,78,0],[83,0,79,0],[84,0,80,0],[85,0,81,0],[86,4,82,4],[86,11,82,11,"createFromSecureContext"],[86,34,82,34,"createFromSecureContext"],[86,35,82,35,"secureContext"],[86,48,82,48],[86,50,82,50,"verifyOptions"],[86,63,82,63],[86,65,82,65],[87,6,83,8],[87,13,83,15],[87,17,83,19,"SecureChannelCredentialsImpl"],[87,45,83,47],[87,46,83,48,"secureContext"],[87,59,83,61],[87,61,83,63,"verifyOptions"],[87,74,83,76],[87,79,83,81],[87,83,83,85],[87,87,83,89,"verifyOptions"],[87,100,83,102],[87,105,83,107],[87,110,83,112],[87,111,83,113],[87,114,83,116,"verifyOptions"],[87,127,83,129],[87,130,83,132],[87,131,83,133],[87,132,83,134],[87,133,83,135],[88,4,84,4],[89,4,85,4],[90,0,86,0],[91,0,87,0],[92,4,88,4],[92,11,88,11,"createInsecure"],[92,25,88,25,"createInsecure"],[92,26,88,25],[92,28,88,28],[93,6,89,8],[93,13,89,15],[93,17,89,19,"InsecureChannelCredentialsImpl"],[93,47,89,49],[93,48,89,50],[93,49,89,51],[94,4,90,4],[95,2,91,0],[96,2,92,0,"exports"],[96,9,92,7],[96,10,92,8,"ChannelCredentials"],[96,28,92,26],[96,31,92,29,"ChannelCredentials"],[96,49,92,47],[97,2,93,0],[97,8,93,6,"InsecureChannelCredentialsImpl"],[97,38,93,36],[97,47,93,45,"ChannelCredentials"],[97,65,93,63],[97,66,93,64],[98,4,94,4,"constructor"],[98,15,94,15,"constructor"],[98,16,94,16,"callCredentials"],[98,31,94,31],[98,33,94,33],[99,6,95,8],[99,11,95,13],[99,12,95,14,"callCredentials"],[99,27,95,29],[99,28,95,30],[100,4,96,4],[101,4,97,4,"compose"],[101,11,97,11,"compose"],[101,12,97,12,"callCredentials"],[101,27,97,27],[101,29,97,29],[102,6,98,8],[102,12,98,14],[102,16,98,18,"Error"],[102,21,98,23],[102,22,98,24],[102,59,98,61],[102,60,98,62],[103,4,99,4],[104,4,100,4,"_getConnectionOptions"],[104,25,100,25,"_getConnectionOptions"],[104,26,100,25],[104,28,100,28],[105,6,101,8],[105,13,101,15],[105,17,101,19],[106,4,102,4],[107,4,103,4,"_isSecure"],[107,13,103,13,"_isSecure"],[107,14,103,13],[107,16,103,16],[108,6,104,8],[108,13,104,15],[108,18,104,20],[109,4,105,4],[110,4,106,4,"_equals"],[110,11,106,11,"_equals"],[110,12,106,12,"other"],[110,17,106,17],[110,19,106,19],[111,6,107,8],[111,13,107,15,"other"],[111,18,107,20],[111,30,107,32,"InsecureChannelCredentialsImpl"],[111,60,107,62],[112,4,108,4],[113,2,109,0],[114,2,110,0],[114,8,110,6,"SecureChannelCredentialsImpl"],[114,36,110,34],[114,45,110,43,"ChannelCredentials"],[114,63,110,61],[114,64,110,62],[115,4,111,4,"constructor"],[115,15,111,15,"constructor"],[115,16,111,16,"secureContext"],[115,29,111,29],[115,31,111,31,"verifyOptions"],[115,44,111,44],[115,46,111,46],[116,6,112,8],[116,11,112,13],[116,12,112,14],[116,13,112,15],[117,6,113,8],[117,10,113,12],[117,11,113,13,"secureContext"],[117,24,113,26],[117,27,113,29,"secureContext"],[117,40,113,42],[118,6,114,8],[118,10,114,12],[118,11,114,13,"verifyOptions"],[118,24,114,26],[118,27,114,29,"verifyOptions"],[118,40,114,42],[119,6,115,8],[119,10,115,12],[119,11,115,13,"connectionOptions"],[119,28,115,30],[119,31,115,33],[120,8,116,12,"secureContext"],[121,6,117,8],[121,7,117,9],[122,6,118,8],[123,6,119,8],[123,10,119,12,"verifyOptions"],[123,23,119,25],[123,28,119,30],[123,32,119,34],[123,36,119,38,"verifyOptions"],[123,49,119,51],[123,54,119,56],[123,59,119,61],[123,60,119,62],[123,63,119,65],[123,68,119,70],[123,69,119,71],[123,72,119,74,"verifyOptions"],[123,85,119,87],[123,86,119,88,"checkServerIdentity"],[123,105,119,107],[123,107,119,109],[124,8,120,12],[124,12,120,16],[124,13,120,17,"connectionOptions"],[124,30,120,34],[124,31,120,35,"checkServerIdentity"],[124,50,120,54],[124,53,121,16,"verifyOptions"],[124,66,121,29],[124,67,121,30,"checkServerIdentity"],[124,86,121,49],[125,6,122,8],[126,4,123,4],[127,4,124,4,"compose"],[127,11,124,11,"compose"],[127,12,124,12,"callCredentials"],[127,27,124,27],[127,29,124,29],[128,6,125,8],[128,12,125,14,"combinedCallCredentials"],[128,35,125,37],[128,38,125,40],[128,42,125,44],[128,43,125,45,"callCredentials"],[128,58,125,60],[128,59,125,61,"compose"],[128,66,125,68],[128,67,125,69,"callCredentials"],[128,82,125,84],[128,83,125,85],[129,6,126,8],[129,13,126,15],[129,17,126,19,"ComposedChannelCredentialsImpl"],[129,47,126,49],[129,48,126,50],[129,52,126,54],[129,54,126,56,"combinedCallCredentials"],[129,77,126,79],[129,78,126,80],[130,4,127,4],[131,4,128,4,"_getConnectionOptions"],[131,25,128,25,"_getConnectionOptions"],[131,26,128,25],[131,28,128,28],[132,6,129,8],[133,6,130,8],[133,13,130,15,"Object"],[133,19,130,21],[133,20,130,22,"assign"],[133,26,130,28],[133,27,130,29],[133,28,130,30],[133,29,130,31],[133,31,130,33],[133,35,130,37],[133,36,130,38,"connectionOptions"],[133,53,130,55],[133,54,130,56],[134,4,131,4],[135,4,132,4,"_isSecure"],[135,13,132,13,"_isSecure"],[135,14,132,13],[135,16,132,16],[136,6,133,8],[136,13,133,15],[136,17,133,19],[137,4,134,4],[138,4,135,4,"_equals"],[138,11,135,11,"_equals"],[138,12,135,12,"other"],[138,17,135,17],[138,19,135,19],[139,6,136,8],[139,10,136,12],[139,14,136,16],[139,19,136,21,"other"],[139,24,136,26],[139,26,136,28],[140,8,137,12],[140,15,137,19],[140,19,137,23],[141,6,138,8],[142,6,139,8],[142,10,139,12,"other"],[142,15,139,17],[142,27,139,29,"SecureChannelCredentialsImpl"],[142,55,139,57],[142,57,139,59],[143,8,140,12],[143,15,140,20],[143,19,140,24],[143,20,140,25,"secureContext"],[143,33,140,38],[143,38,140,43,"other"],[143,43,140,48],[143,44,140,49,"secureContext"],[143,57,140,62],[143,61,141,16],[143,65,141,20],[143,66,141,21,"verifyOptions"],[143,79,141,34],[143,80,141,35,"checkServerIdentity"],[143,99,141,54],[143,104,142,20,"other"],[143,109,142,25],[143,110,142,26,"verifyOptions"],[143,123,142,39],[143,124,142,40,"checkServerIdentity"],[143,143,142,59],[144,6,143,8],[144,7,143,9],[144,13,144,13],[145,8,145,12],[145,15,145,19],[145,20,145,24],[146,6,146,8],[147,4,147,4],[148,2,148,0],[149,2,149,0],[149,8,149,6,"ComposedChannelCredentialsImpl"],[149,38,149,36],[149,47,149,45,"ChannelCredentials"],[149,65,149,63],[149,66,149,64],[150,4,150,4,"constructor"],[150,15,150,15,"constructor"],[150,16,150,16,"channelCredentials"],[150,34,150,34],[150,36,150,36,"callCreds"],[150,45,150,45],[150,47,150,47],[151,6,151,8],[151,11,151,13],[151,12,151,14,"callCreds"],[151,21,151,23],[151,22,151,24],[152,6,152,8],[152,10,152,12],[152,11,152,13,"channelCredentials"],[152,29,152,31],[152,32,152,34,"channelCredentials"],[152,50,152,52],[153,4,153,4],[154,4,154,4,"compose"],[154,11,154,11,"compose"],[154,12,154,12,"callCredentials"],[154,27,154,27],[154,29,154,29],[155,6,155,8],[155,12,155,14,"combinedCallCredentials"],[155,35,155,37],[155,38,155,40],[155,42,155,44],[155,43,155,45,"callCredentials"],[155,58,155,60],[155,59,155,61,"compose"],[155,66,155,68],[155,67,155,69,"callCredentials"],[155,82,155,84],[155,83,155,85],[156,6,156,8],[156,13,156,15],[156,17,156,19,"ComposedChannelCredentialsImpl"],[156,47,156,49],[156,48,156,50],[156,52,156,54],[156,53,156,55,"channelCredentials"],[156,71,156,73],[156,73,156,75,"combinedCallCredentials"],[156,96,156,98],[156,97,156,99],[157,4,157,4],[158,4,158,4,"_getConnectionOptions"],[158,25,158,25,"_getConnectionOptions"],[158,26,158,25],[158,28,158,28],[159,6,159,8],[159,13,159,15],[159,17,159,19],[159,18,159,20,"channelCredentials"],[159,36,159,38],[159,37,159,39,"_getConnectionOptions"],[159,58,159,60],[159,59,159,61],[159,60,159,62],[160,4,160,4],[161,4,161,4,"_isSecure"],[161,13,161,13,"_isSecure"],[161,14,161,13],[161,16,161,16],[162,6,162,8],[162,13,162,15],[162,17,162,19],[163,4,163,4],[164,4,164,4,"_equals"],[164,11,164,11,"_equals"],[164,12,164,12,"other"],[164,17,164,17],[164,19,164,19],[165,6,165,8],[165,10,165,12],[165,14,165,16],[165,19,165,21,"other"],[165,24,165,26],[165,26,165,28],[166,8,166,12],[166,15,166,19],[166,19,166,23],[167,6,167,8],[168,6,168,8],[168,10,168,12,"other"],[168,15,168,17],[168,27,168,29,"ComposedChannelCredentialsImpl"],[168,57,168,59],[168,59,168,61],[169,8,169,12],[169,15,169,20],[169,19,169,24],[169,20,169,25,"channelCredentials"],[169,38,169,43],[169,39,169,44,"_equals"],[169,46,169,51],[169,47,169,52,"other"],[169,52,169,57],[169,53,169,58,"channelCredentials"],[169,71,169,76],[169,72,169,77],[169,76,170,16],[169,80,170,20],[169,81,170,21,"callCredentials"],[169,96,170,36],[169,97,170,37,"_equals"],[169,104,170,44],[169,105,170,45,"other"],[169,110,170,50],[169,111,170,51,"callCredentials"],[169,126,170,66],[169,127,170,67],[170,6,171,8],[170,7,171,9],[170,13,172,13],[171,8,173,12],[171,15,173,19],[171,20,173,24],[172,6,174,8],[173,4,175,4],[174,2,176,0],[175,0,176,1],[175,3]],"functionMap":{"names":["<global>","verifyIsBufferOrNull","ChannelCredentials","ChannelCredentials#constructor","ChannelCredentials#_getCallCredentials","ChannelCredentials.createSsl","ChannelCredentials.createFromSecureContext","ChannelCredentials.createInsecure","InsecureChannelCredentialsImpl","InsecureChannelCredentialsImpl#constructor","InsecureChannelCredentialsImpl#compose","InsecureChannelCredentialsImpl#_getConnectionOptions","InsecureChannelCredentialsImpl#_isSecure","InsecureChannelCredentialsImpl#_equals","SecureChannelCredentialsImpl","SecureChannelCredentialsImpl#constructor","SecureChannelCredentialsImpl#compose","SecureChannelCredentialsImpl#_getConnectionOptions","SecureChannelCredentialsImpl#_isSecure","SecureChannelCredentialsImpl#_equals","ComposedChannelCredentialsImpl","ComposedChannelCredentialsImpl#constructor","ComposedChannelCredentialsImpl#compose","ComposedChannelCredentialsImpl#_getConnectionOptions","ComposedChannelCredentialsImpl#_isSecure","ComposedChannelCredentialsImpl#_equals"],"mappings":"AAA;ACuB;CDI;AEM;ICC;KDE;IEI;KFE;IGU;KHkB;IIW;KJE;IKI;KLE;CFC;AQE;ICC;KDE;IEC;KFE;IGC;KHE;IIC;KJE;IKC;KLE;CRC;AcC;ICC;KDY;IEC;KFG;IGC;KHG;IIC;KJE;IKC;KLY;CdC;AoBC;ICC;KDG;IEC;KFG;IGC;KHE;IIC;KJE;IKC;KLW;CpBC"}},"type":"js/module"}]}