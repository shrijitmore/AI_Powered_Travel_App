{"dependencies":[{"name":"./channel-credentials","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":30,"index":747},"end":{"line":20,"column":62,"index":779}}],"key":"zHcY01S1A/CJLPZS6C1BOpRmVso=","exportNames":["*"]}},{"name":"./internal-channel","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":27,"index":808},"end":{"line":21,"column":56,"index":837}}],"key":"aU1DsVq33c2pjgRzz81hy1YGq9U=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2019 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ChannelImplementation = void 0;\n  const channel_credentials_1 = require(_dependencyMap[0], \"./channel-credentials\");\n  const internal_channel_1 = require(_dependencyMap[1], \"./internal-channel\");\n  class ChannelImplementation {\n    constructor(target, credentials, options) {\n      if (typeof target !== 'string') {\n        throw new TypeError('Channel target must be a string');\n      }\n      if (!(credentials instanceof channel_credentials_1.ChannelCredentials)) {\n        throw new TypeError('Channel credentials must be a ChannelCredentials object');\n      }\n      if (options) {\n        if (typeof options !== 'object') {\n          throw new TypeError('Channel options must be an object');\n        }\n      }\n      this.internalChannel = new internal_channel_1.InternalChannel(target, credentials, options);\n    }\n    close() {\n      this.internalChannel.close();\n    }\n    getTarget() {\n      return this.internalChannel.getTarget();\n    }\n    getConnectivityState(tryToConnect) {\n      return this.internalChannel.getConnectivityState(tryToConnect);\n    }\n    watchConnectivityState(currentState, deadline, callback) {\n      this.internalChannel.watchConnectivityState(currentState, deadline, callback);\n    }\n    /**\n     * Get the channelz reference object for this channel. The returned value is\n     * garbage if channelz is disabled for this channel.\n     * @returns\n     */\n    getChannelzRef() {\n      return this.internalChannel.getChannelzRef();\n    }\n    createCall(method, deadline, host, parentCall, propagateFlags) {\n      if (typeof method !== 'string') {\n        throw new TypeError('Channel#createCall: method must be a string');\n      }\n      if (!(typeof deadline === 'number' || deadline instanceof Date)) {\n        throw new TypeError('Channel#createCall: deadline must be a number or Date');\n      }\n      return this.internalChannel.createCall(method, deadline, host, parentCall, propagateFlags);\n    }\n  }\n  exports.ChannelImplementation = ChannelImplementation;\n});","lineCount":72,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,2,18,0,"Object"],[20,8,18,6],[20,9,18,7,"defineProperty"],[20,23,18,21],[20,24,18,22,"exports"],[20,31,18,29],[20,33,18,31],[20,45,18,43],[20,47,18,45],[21,4,18,47,"value"],[21,9,18,52],[21,11,18,54],[22,2,18,59],[22,3,18,60],[22,4,18,61],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"ChannelImplementation"],[23,31,19,29],[23,34,19,32],[23,39,19,37],[23,40,19,38],[24,2,20,0],[24,8,20,6,"channel_credentials_1"],[24,29,20,27],[24,32,20,30,"require"],[24,39,20,37],[24,40,20,37,"_dependencyMap"],[24,54,20,37],[24,82,20,61],[24,83,20,62],[25,2,21,0],[25,8,21,6,"internal_channel_1"],[25,26,21,24],[25,29,21,27,"require"],[25,36,21,34],[25,37,21,34,"_dependencyMap"],[25,51,21,34],[25,76,21,55],[25,77,21,56],[26,2,22,0],[26,8,22,6,"ChannelImplementation"],[26,29,22,27],[26,30,22,28],[27,4,23,4,"constructor"],[27,15,23,15,"constructor"],[27,16,23,16,"target"],[27,22,23,22],[27,24,23,24,"credentials"],[27,35,23,35],[27,37,23,37,"options"],[27,44,23,44],[27,46,23,46],[28,6,24,8],[28,10,24,12],[28,17,24,19,"target"],[28,23,24,25],[28,28,24,30],[28,36,24,38],[28,38,24,40],[29,8,25,12],[29,14,25,18],[29,18,25,22,"TypeError"],[29,27,25,31],[29,28,25,32],[29,61,25,65],[29,62,25,66],[30,6,26,8],[31,6,27,8],[31,10,27,12],[31,12,27,14,"credentials"],[31,23,27,25],[31,35,27,37,"channel_credentials_1"],[31,56,27,58],[31,57,27,59,"ChannelCredentials"],[31,75,27,77],[31,76,27,78],[31,78,27,80],[32,8,28,12],[32,14,28,18],[32,18,28,22,"TypeError"],[32,27,28,31],[32,28,28,32],[32,85,28,89],[32,86,28,90],[33,6,29,8],[34,6,30,8],[34,10,30,12,"options"],[34,17,30,19],[34,19,30,21],[35,8,31,12],[35,12,31,16],[35,19,31,23,"options"],[35,26,31,30],[35,31,31,35],[35,39,31,43],[35,41,31,45],[36,10,32,16],[36,16,32,22],[36,20,32,26,"TypeError"],[36,29,32,35],[36,30,32,36],[36,65,32,71],[36,66,32,72],[37,8,33,12],[38,6,34,8],[39,6,35,8],[39,10,35,12],[39,11,35,13,"internalChannel"],[39,26,35,28],[39,29,35,31],[39,33,35,35,"internal_channel_1"],[39,51,35,53],[39,52,35,54,"InternalChannel"],[39,67,35,69],[39,68,35,70,"target"],[39,74,35,76],[39,76,35,78,"credentials"],[39,87,35,89],[39,89,35,91,"options"],[39,96,35,98],[39,97,35,99],[40,4,36,4],[41,4,37,4,"close"],[41,9,37,9,"close"],[41,10,37,9],[41,12,37,12],[42,6,38,8],[42,10,38,12],[42,11,38,13,"internalChannel"],[42,26,38,28],[42,27,38,29,"close"],[42,32,38,34],[42,33,38,35],[42,34,38,36],[43,4,39,4],[44,4,40,4,"getTarget"],[44,13,40,13,"getTarget"],[44,14,40,13],[44,16,40,16],[45,6,41,8],[45,13,41,15],[45,17,41,19],[45,18,41,20,"internalChannel"],[45,33,41,35],[45,34,41,36,"getTarget"],[45,43,41,45],[45,44,41,46],[45,45,41,47],[46,4,42,4],[47,4,43,4,"getConnectivityState"],[47,24,43,24,"getConnectivityState"],[47,25,43,25,"tryToConnect"],[47,37,43,37],[47,39,43,39],[48,6,44,8],[48,13,44,15],[48,17,44,19],[48,18,44,20,"internalChannel"],[48,33,44,35],[48,34,44,36,"getConnectivityState"],[48,54,44,56],[48,55,44,57,"tryToConnect"],[48,67,44,69],[48,68,44,70],[49,4,45,4],[50,4,46,4,"watchConnectivityState"],[50,26,46,26,"watchConnectivityState"],[50,27,46,27,"currentState"],[50,39,46,39],[50,41,46,41,"deadline"],[50,49,46,49],[50,51,46,51,"callback"],[50,59,46,59],[50,61,46,61],[51,6,47,8],[51,10,47,12],[51,11,47,13,"internalChannel"],[51,26,47,28],[51,27,47,29,"watchConnectivityState"],[51,49,47,51],[51,50,47,52,"currentState"],[51,62,47,64],[51,64,47,66,"deadline"],[51,72,47,74],[51,74,47,76,"callback"],[51,82,47,84],[51,83,47,85],[52,4,48,4],[53,4,49,4],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,0,53,0],[58,4,54,4,"getChannelzRef"],[58,18,54,18,"getChannelzRef"],[58,19,54,18],[58,21,54,21],[59,6,55,8],[59,13,55,15],[59,17,55,19],[59,18,55,20,"internalChannel"],[59,33,55,35],[59,34,55,36,"getChannelzRef"],[59,48,55,50],[59,49,55,51],[59,50,55,52],[60,4,56,4],[61,4,57,4,"createCall"],[61,14,57,14,"createCall"],[61,15,57,15,"method"],[61,21,57,21],[61,23,57,23,"deadline"],[61,31,57,31],[61,33,57,33,"host"],[61,37,57,37],[61,39,57,39,"parentCall"],[61,49,57,49],[61,51,57,51,"propagateFlags"],[61,65,57,65],[61,67,57,67],[62,6,58,8],[62,10,58,12],[62,17,58,19,"method"],[62,23,58,25],[62,28,58,30],[62,36,58,38],[62,38,58,40],[63,8,59,12],[63,14,59,18],[63,18,59,22,"TypeError"],[63,27,59,31],[63,28,59,32],[63,73,59,77],[63,74,59,78],[64,6,60,8],[65,6,61,8],[65,10,61,12],[65,12,61,14],[65,19,61,21,"deadline"],[65,27,61,29],[65,32,61,34],[65,40,61,42],[65,44,61,46,"deadline"],[65,52,61,54],[65,64,61,66,"Date"],[65,68,61,70],[65,69,61,71],[65,71,61,73],[66,8,62,12],[66,14,62,18],[66,18,62,22,"TypeError"],[66,27,62,31],[66,28,62,32],[66,83,62,87],[66,84,62,88],[67,6,63,8],[68,6,64,8],[68,13,64,15],[68,17,64,19],[68,18,64,20,"internalChannel"],[68,33,64,35],[68,34,64,36,"createCall"],[68,44,64,46],[68,45,64,47,"method"],[68,51,64,53],[68,53,64,55,"deadline"],[68,61,64,63],[68,63,64,65,"host"],[68,67,64,69],[68,69,64,71,"parentCall"],[68,79,64,81],[68,81,64,83,"propagateFlags"],[68,95,64,97],[68,96,64,98],[69,4,65,4],[70,2,66,0],[71,2,67,0,"exports"],[71,9,67,7],[71,10,67,8,"ChannelImplementation"],[71,31,67,29],[71,34,67,32,"ChannelImplementation"],[71,55,67,53],[72,0,67,54],[72,3]],"functionMap":{"names":["<global>","ChannelImplementation","ChannelImplementation#constructor","ChannelImplementation#close","ChannelImplementation#getTarget","ChannelImplementation#getConnectivityState","ChannelImplementation#watchConnectivityState","ChannelImplementation#getChannelzRef","ChannelImplementation#createCall"],"mappings":"AAA;ACqB;ICC;KDa;IEC;KFE;IGC;KHE;IIC;KJE;IKC;KLE;IMM;KNE;IOC;KPQ;CDC"}},"type":"js/module"}]}