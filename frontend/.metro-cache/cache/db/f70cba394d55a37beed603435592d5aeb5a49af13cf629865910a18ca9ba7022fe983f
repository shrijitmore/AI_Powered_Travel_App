{"dependencies":[{"name":"./reader","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":77},"end":{"line":5,"column":32,"index":96}}],"key":"M8GWYeZ1AREQ55Z0clPGdSsk9lA=","exportNames":["*"]}},{"name":"./util/minimal","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":11,"index":197},"end":{"line":8,"column":36,"index":222}}],"key":"lbVPmRyLj/Ai/u8LmEyLBVy/L2I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  module.exports = BufferReader;\n\n  // extends Reader\n  var Reader = require(_dependencyMap[0], \"./reader\");\n  (BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n  var util = require(_dependencyMap[1], \"./util/minimal\");\n\n  /**\n   * Constructs a new buffer reader instance.\n   * @classdesc Wire format reader using node buffers.\n   * @extends Reader\n   * @constructor\n   * @param {Buffer} buffer Buffer to read from\n   */\n  function BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n  }\n  BufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer) BufferReader.prototype._slice = util.Buffer.prototype.slice;\n  };\n\n  /**\n   * @override\n   */\n  BufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len)) : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n  };\n\n  /**\n   * Reads a sequence of bytes preceeded by its length as a varint.\n   * @name BufferReader#bytes\n   * @function\n   * @returns {Buffer} Value read\n   */\n\n  BufferReader._configure();\n});","lineCount":48,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"module"],[4,8,2,6],[4,9,2,7,"exports"],[4,16,2,14],[4,19,2,17,"BufferReader"],[4,31,2,29],[6,2,4,0],[7,2,5,0],[7,6,5,4,"Reader"],[7,12,5,10],[7,15,5,13,"require"],[7,22,5,20],[7,23,5,20,"_dependencyMap"],[7,37,5,20],[7,52,5,31],[7,53,5,32],[8,2,6,0],[8,3,6,1,"BufferReader"],[8,15,6,13],[8,16,6,14,"prototype"],[8,25,6,23],[8,28,6,26,"Object"],[8,34,6,32],[8,35,6,33,"create"],[8,41,6,39],[8,42,6,40,"Reader"],[8,48,6,46],[8,49,6,47,"prototype"],[8,58,6,56],[8,59,6,57],[8,61,6,59,"constructor"],[8,72,6,70],[8,75,6,73,"BufferReader"],[8,87,6,85],[9,2,8,0],[9,6,8,4,"util"],[9,10,8,8],[9,13,8,11,"require"],[9,20,8,18],[9,21,8,18,"_dependencyMap"],[9,35,8,18],[9,56,8,35],[9,57,8,36],[11,2,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,2,17,0],[18,11,17,9,"BufferReader"],[18,23,17,21,"BufferReader"],[18,24,17,22,"buffer"],[18,30,17,28],[18,32,17,30],[19,4,18,4,"Reader"],[19,10,18,10],[19,11,18,11,"call"],[19,15,18,15],[19,16,18,16],[19,20,18,20],[19,22,18,22,"buffer"],[19,28,18,28],[19,29,18,29],[21,4,20,4],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,2,25,0],[27,2,27,0,"BufferReader"],[27,14,27,12],[27,15,27,13,"_configure"],[27,25,27,23],[27,28,27,26],[27,40,27,38],[28,4,28,4],[29,4,29,4],[29,8,29,8,"util"],[29,12,29,12],[29,13,29,13,"Buffer"],[29,19,29,19],[29,21,30,8,"BufferReader"],[29,33,30,20],[29,34,30,21,"prototype"],[29,43,30,30],[29,44,30,31,"_slice"],[29,50,30,37],[29,53,30,40,"util"],[29,57,30,44],[29,58,30,45,"Buffer"],[29,64,30,51],[29,65,30,52,"prototype"],[29,74,30,61],[29,75,30,62,"slice"],[29,80,30,67],[30,2,31,0],[30,3,31,1],[32,2,34,0],[33,0,35,0],[34,0,36,0],[35,2,37,0,"BufferReader"],[35,14,37,12],[35,15,37,13,"prototype"],[35,24,37,22],[35,25,37,23,"string"],[35,31,37,29],[35,34,37,32],[35,43,37,41,"read_string_buffer"],[35,61,37,59,"read_string_buffer"],[35,62,37,59],[35,64,37,62],[36,4,38,4],[36,8,38,8,"len"],[36,11,38,11],[36,14,38,14],[36,18,38,18],[36,19,38,19,"uint32"],[36,25,38,25],[36,26,38,26],[36,27,38,27],[36,28,38,28],[36,29,38,29],[37,4,39,4],[37,11,39,11],[37,15,39,15],[37,16,39,16,"buf"],[37,19,39,19],[37,20,39,20,"utf8Slice"],[37,29,39,29],[37,32,40,10],[37,36,40,14],[37,37,40,15,"buf"],[37,40,40,18],[37,41,40,19,"utf8Slice"],[37,50,40,28],[37,51,40,29],[37,55,40,33],[37,56,40,34,"pos"],[37,59,40,37],[37,61,40,39],[37,65,40,43],[37,66,40,44,"pos"],[37,69,40,47],[37,72,40,50,"Math"],[37,76,40,54],[37,77,40,55,"min"],[37,80,40,58],[37,81,40,59],[37,85,40,63],[37,86,40,64,"pos"],[37,89,40,67],[37,92,40,70,"len"],[37,95,40,73],[37,97,40,75],[37,101,40,79],[37,102,40,80,"len"],[37,105,40,83],[37,106,40,84],[37,107,40,85],[37,110,41,10],[37,114,41,14],[37,115,41,15,"buf"],[37,118,41,18],[37,119,41,19,"toString"],[37,127,41,27],[37,128,41,28],[37,135,41,35],[37,137,41,37],[37,141,41,41],[37,142,41,42,"pos"],[37,145,41,45],[37,147,41,47],[37,151,41,51],[37,152,41,52,"pos"],[37,155,41,55],[37,158,41,58,"Math"],[37,162,41,62],[37,163,41,63,"min"],[37,166,41,66],[37,167,41,67],[37,171,41,71],[37,172,41,72,"pos"],[37,175,41,75],[37,178,41,78,"len"],[37,181,41,81],[37,183,41,83],[37,187,41,87],[37,188,41,88,"len"],[37,191,41,91],[37,192,41,92],[37,193,41,93],[38,2,42,0],[38,3,42,1],[40,2,44,0],[41,0,45,0],[42,0,46,0],[43,0,47,0],[44,0,48,0],[45,0,49,0],[47,2,51,0,"BufferReader"],[47,14,51,12],[47,15,51,13,"_configure"],[47,25,51,23],[47,26,51,24],[47,27,51,25],[48,0,51,26],[48,3]],"functionMap":{"names":["<global>","BufferReader","BufferReader._configure","read_string_buffer"],"mappings":"AAA;ACgB;CDQ;0BEE;CFI;gCGM;CHK"}},"type":"js/module"}]}