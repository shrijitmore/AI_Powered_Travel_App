{"dependencies":[{"name":"./namespace","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":75},"end":{"line":5,"column":38,"index":97}}],"key":"u0P7tC+K1OWBPm2ZPzGRIU5NEKE=","exportNames":["*"]}},{"name":"./enum","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":16,"index":211},"end":{"line":8,"column":33,"index":228}}],"key":"gyum9HaiytxYUYAerYZvNHG09ko=","exportNames":["*"]}},{"name":"./oneof","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":246},"end":{"line":9,"column":34,"index":264}}],"key":"6NmAiHUhkqvb6p1LAZJI/y3pbuA=","exportNames":["*"]}},{"name":"./field","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":16,"index":282},"end":{"line":10,"column":34,"index":300}}],"key":"NvI2xXoYDS7eVNBPYDi7RsbVioc=","exportNames":["*"]}},{"name":"./mapfield","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":318},"end":{"line":11,"column":37,"index":339}}],"key":"MMmudVnVxEglPCDovE2ztoOe6EI=","exportNames":["*"]}},{"name":"./service","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":16,"index":357},"end":{"line":12,"column":36,"index":377}}],"key":"SjCFclpm2vEeBKEx+WKCb/xzWJU=","exportNames":["*"]}},{"name":"./message","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":16,"index":395},"end":{"line":13,"column":36,"index":415}}],"key":"ulpBHBwrX8gpPNstn8hH+L22bxo=","exportNames":["*"]}},{"name":"./reader","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":433},"end":{"line":14,"column":35,"index":452}}],"key":"M8GWYeZ1AREQ55Z0clPGdSsk9lA=","exportNames":["*"]}},{"name":"./writer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":16,"index":470},"end":{"line":15,"column":35,"index":489}}],"key":"usVAgAn3tTe1d501/iIZVOVL+GM=","exportNames":["*"]}},{"name":"./util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":16,"index":507},"end":{"line":16,"column":33,"index":524}}],"key":"hA8WsniBZrUJ/dmBZgrNdZcEmJ8=","exportNames":["*"]}},{"name":"./encoder","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":16,"index":542},"end":{"line":17,"column":36,"index":562}}],"key":"1PhosRH069etGatvJtufxzEaRVk=","exportNames":["*"]}},{"name":"./decoder","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":16,"index":580},"end":{"line":18,"column":36,"index":600}}],"key":"HFW0TQlkm38C9qomYzyJaxYWYi0=","exportNames":["*"]}},{"name":"./verifier","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":16,"index":618},"end":{"line":19,"column":37,"index":639}}],"key":"xTJinbetTSjBQ5uWtFFg7OYAPVQ=","exportNames":["*"]}},{"name":"./converter","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":16,"index":657},"end":{"line":20,"column":38,"index":679}}],"key":"uRssGqofosQeJaCs7rDf/fgh9jo=","exportNames":["*"]}},{"name":"./wrappers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":16,"index":697},"end":{"line":21,"column":37,"index":718}}],"key":"pnxjWrj+tW8MZoJprzsXPsRXgko=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  module.exports = Type;\n\n  // extends Namespace\n  var Namespace = require(_dependencyMap[0], \"./namespace\");\n  ((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n  var Enum = require(_dependencyMap[1], \"./enum\"),\n    OneOf = require(_dependencyMap[2], \"./oneof\"),\n    Field = require(_dependencyMap[3], \"./field\"),\n    MapField = require(_dependencyMap[4], \"./mapfield\"),\n    Service = require(_dependencyMap[5], \"./service\"),\n    Message = require(_dependencyMap[6], \"./message\"),\n    Reader = require(_dependencyMap[7], \"./reader\"),\n    Writer = require(_dependencyMap[8], \"./writer\"),\n    util = require(_dependencyMap[9], \"./util\"),\n    encoder = require(_dependencyMap[10], \"./encoder\"),\n    decoder = require(_dependencyMap[11], \"./decoder\"),\n    verifier = require(_dependencyMap[12], \"./verifier\"),\n    converter = require(_dependencyMap[13], \"./converter\"),\n    wrappers = require(_dependencyMap[14], \"./wrappers\");\n\n  /**\n   * Constructs a new reflected message type instance.\n   * @classdesc Reflected message type.\n   * @extends NamespaceBase\n   * @constructor\n   * @param {string} name Message name\n   * @param {Object.<string,*>} [options] Declared options\n   */\n  function Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {}; // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n  }\n  Object.defineProperties(Type.prototype, {\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n      get: function () {\n        /* istanbul ignore if */\n        if (this._fieldsById) return this._fieldsById;\n        this._fieldsById = {};\n        for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n          var field = this.fields[names[i]],\n            id = field.id;\n\n          /* istanbul ignore if */\n          if (this._fieldsById[id]) throw Error(\"duplicate id \" + id + \" in \" + this);\n          this._fieldsById[id] = field;\n        }\n        return this._fieldsById;\n      }\n    },\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n      get: function () {\n        return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n      }\n    },\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n      get: function () {\n        return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n      }\n    },\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n      get: function () {\n        return this._ctor || (this.ctor = Type.generateConstructor(this)());\n      },\n      set: function (ctor) {\n        // Ensure proper prototype\n        var prototype = ctor.prototype;\n        if (!(prototype instanceof Message)) {\n          (ctor.prototype = new Message()).constructor = ctor;\n          util.merge(ctor.prototype, prototype);\n        }\n\n        // Classes and messages reference their reflected type\n        ctor.$type = ctor.prototype.$type = this;\n\n        // Mix in static methods\n        util.merge(ctor, Message, true);\n        this._ctor = ctor;\n\n        // Messages have non-enumerable default values on their prototype\n        var i = 0;\n        for (; i < /* initializes */this.fieldsArray.length; ++i) this._fieldsArray[i].resolve(); // ensures a proper value\n\n        // Messages have non-enumerable getters and setters for each virtual oneof field\n        var ctorProperties = {};\n        for (i = 0; i < /* initializes */this.oneofsArray.length; ++i) ctorProperties[this._oneofsArray[i].resolve().name] = {\n          get: util.oneOfGetter(this._oneofsArray[i].oneof),\n          set: util.oneOfSetter(this._oneofsArray[i].oneof)\n        };\n        if (i) Object.defineProperties(ctor.prototype, ctorProperties);\n      }\n    }\n  });\n\n  /**\n   * Generates a constructor function for the specified type.\n   * @param {Type} mtype Message type\n   * @returns {Codegen} Codegen instance\n   */\n  Type.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i) if ((field = mtype._fieldsArray[i]).map) gen(\"this%s={}\", util.safeProp(field.name));else if (field.repeated) gen(\"this%s=[]\", util.safeProp(field.name));\n    return gen(\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n    (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n  };\n  function clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n  }\n\n  /**\n   * Message type descriptor.\n   * @interface IType\n   * @extends INamespace\n   * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n   * @property {Object.<string,IField>} fields Field descriptors\n   * @property {number[][]} [extensions] Extension ranges\n   * @property {Array.<number[]|string>} [reserved] Reserved ranges\n   * @property {boolean} [group=false] Whether a legacy group or not\n   */\n\n  /**\n   * Creates a message type from a message type descriptor.\n   * @param {string} name Message name\n   * @param {IType} json Message type descriptor\n   * @returns {Type} Created message type\n   */\n  Type.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n      i = 0;\n    for (; i < names.length; ++i) type.add((typeof json.fields[names[i]].keyType !== \"undefined\" ? MapField.fromJSON : Field.fromJSON)(names[i], json.fields[names[i]]));\n    if (json.oneofs) for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i) type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested) for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n      var nested = json.nested[names[i]];\n      type.add(\n      // most to least likely\n      (nested.id !== undefined ? Field.fromJSON : nested.fields !== undefined ? Type.fromJSON : nested.values !== undefined ? Enum.fromJSON : nested.methods !== undefined ? Service.fromJSON : Namespace.fromJSON)(names[i], nested));\n    }\n    if (json.extensions && json.extensions.length) type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length) type.reserved = json.reserved;\n    if (json.group) type.group = true;\n    if (json.comment) type.comment = json.comment;\n    if (json.edition) type._edition = json.edition;\n    type._defaultEdition = \"proto3\"; // For backwards-compatibility.\n    return type;\n  };\n\n  /**\n   * Converts this message type to a message type descriptor.\n   * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n   * @returns {IType} Message type descriptor\n   */\n  Type.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\"edition\", this._editionToJSON(), \"options\", inherited && inherited.options || undefined, \"oneofs\", Namespace.arrayToJSON(this.oneofsArray, toJSONOptions), \"fields\", Namespace.arrayToJSON(this.fieldsArray.filter(function (obj) {\n      return !obj.declaringField;\n    }), toJSONOptions) || {}, \"extensions\", this.extensions && this.extensions.length ? this.extensions : undefined, \"reserved\", this.reserved && this.reserved.length ? this.reserved : undefined, \"group\", this.group || undefined, \"nested\", inherited && inherited.nested || undefined, \"comment\", keepComments ? this.comment : undefined]);\n  };\n\n  /**\n   * @override\n   */\n  Type.prototype.resolveAll = function resolveAll() {\n    if (!this._needsRecursiveResolve) return this;\n    Namespace.prototype.resolveAll.call(this);\n    var oneofs = this.oneofsArray;\n    i = 0;\n    while (i < oneofs.length) oneofs[i++].resolve();\n    var fields = this.fieldsArray,\n      i = 0;\n    while (i < fields.length) fields[i++].resolve();\n    return this;\n  };\n\n  /**\n   * @override\n   */\n  Type.prototype._resolveFeaturesRecursive = function _resolveFeaturesRecursive(edition) {\n    if (!this._needsRecursiveFeatureResolution) return this;\n    edition = this._edition || edition;\n    Namespace.prototype._resolveFeaturesRecursive.call(this, edition);\n    this.oneofsArray.forEach(oneof => {\n      oneof._resolveFeatures(edition);\n    });\n    this.fieldsArray.forEach(field => {\n      field._resolveFeatures(edition);\n    });\n    return this;\n  };\n\n  /**\n   * @override\n   */\n  Type.prototype.get = function get(name) {\n    return this.fields[name] || this.oneofs && this.oneofs[name] || this.nested && this.nested[name] || null;\n  };\n\n  /**\n   * Adds a nested object to this type.\n   * @param {ReflectionObject} object Nested object to add\n   * @returns {Type} `this`\n   * @throws {TypeError} If arguments are invalid\n   * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n   */\n  Type.prototype.add = function add(object) {\n    if (this.get(object.name)) throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n    if (object instanceof Field && object.extend === undefined) {\n      // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n      // The root object takes care of adding distinct sister-fields to the respective extended\n      // type instead.\n\n      // avoids calling the getter if not absolutely necessary because it's called quite frequently\n      if (this._fieldsById ? /* istanbul ignore next */this._fieldsById[object.id] : this.fieldsById[object.id]) throw Error(\"duplicate id \" + object.id + \" in \" + this);\n      if (this.isReservedId(object.id)) throw Error(\"id \" + object.id + \" is reserved in \" + this);\n      if (this.isReservedName(object.name)) throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n      if (object.parent) object.parent.remove(object);\n      this.fields[object.name] = object;\n      object.message = this;\n      object.onAdd(this);\n      return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n      if (!this.oneofs) this.oneofs = {};\n      this.oneofs[object.name] = object;\n      object.onAdd(this);\n      return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n  };\n\n  /**\n   * Removes a nested object from this type.\n   * @param {ReflectionObject} object Nested object to remove\n   * @returns {Type} `this`\n   * @throws {TypeError} If arguments are invalid\n   * @throws {Error} If `object` is not a member of this type\n   */\n  Type.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n      // See Type#add for the reason why extension fields are excluded here.\n\n      /* istanbul ignore if */\n      if (!this.fields || this.fields[object.name] !== object) throw Error(object + \" is not a member of \" + this);\n      delete this.fields[object.name];\n      object.parent = null;\n      object.onRemove(this);\n      return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n      /* istanbul ignore if */\n      if (!this.oneofs || this.oneofs[object.name] !== object) throw Error(object + \" is not a member of \" + this);\n      delete this.oneofs[object.name];\n      object.parent = null;\n      object.onRemove(this);\n      return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n  };\n\n  /**\n   * Tests if the specified id is reserved.\n   * @param {number} id Id to test\n   * @returns {boolean} `true` if reserved, otherwise `false`\n   */\n  Type.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n  };\n\n  /**\n   * Tests if the specified name is reserved.\n   * @param {string} name Name to test\n   * @returns {boolean} `true` if reserved, otherwise `false`\n   */\n  Type.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n  };\n\n  /**\n   * Creates a new message of this type using the specified properties.\n   * @param {Object.<string,*>} [properties] Properties to set\n   * @returns {Message<{}>} Message instance\n   */\n  Type.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n  };\n\n  /**\n   * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n   * @returns {Type} `this`\n   */\n  Type.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n      types = [];\n    for (var i = 0; i < /* initializes */this.fieldsArray.length; ++i) types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n      Writer: Writer,\n      types: types,\n      util: util\n    });\n    this.decode = decoder(this)({\n      Reader: Reader,\n      types: types,\n      util: util\n    });\n    this.verify = verifier(this)({\n      types: types,\n      util: util\n    });\n    this.fromObject = converter.fromObject(this)({\n      types: types,\n      util: util\n    });\n    this.toObject = converter.toObject(this)({\n      types: types,\n      util: util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n      var originalThis = Object.create(this);\n      // if (wrapper.fromObject) {\n      originalThis.fromObject = this.fromObject;\n      this.fromObject = wrapper.fromObject.bind(originalThis);\n      // }\n      // if (wrapper.toObject) {\n      originalThis.toObject = this.toObject;\n      this.toObject = wrapper.toObject.bind(originalThis);\n      // }\n    }\n    return this;\n  };\n\n  /**\n   * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n   * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n   * @param {Writer} [writer] Writer to encode to\n   * @returns {Writer} writer\n   */\n  Type.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n  };\n\n  /**\n   * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n   * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n   * @param {Writer} [writer] Writer to encode to\n   * @returns {Writer} writer\n   */\n  Type.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n  };\n\n  /**\n   * Decodes a message of this type.\n   * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Length of the message, if known beforehand\n   * @returns {Message<{}>} Decoded message\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {util.ProtocolError<{}>} If required fields are missing\n   */\n  Type.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n  };\n\n  /**\n   * Decodes a message of this type preceeded by its byte length as a varint.\n   * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Message<{}>} Decoded message\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {util.ProtocolError} If required fields are missing\n   */\n  Type.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader)) reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n  };\n\n  /**\n   * Verifies that field values are valid and that required fields are present.\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {null|string} `null` if valid, otherwise the reason why it is not\n   */\n  Type.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n  };\n\n  /**\n   * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n   * @param {Object.<string,*>} object Plain object to convert\n   * @returns {Message<{}>} Message instance\n   */\n  Type.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n  };\n\n  /**\n   * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n   * @interface IConversionOptions\n   * @property {Function} [longs] Long conversion type.\n   * Valid values are `String` and `Number` (the global types).\n   * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n   * @property {Function} [enums] Enum value conversion type.\n   * Only valid value is `String` (the global type).\n   * Defaults to copy the present value, which is the numeric id.\n   * @property {Function} [bytes] Bytes value conversion type.\n   * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n   * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n   * @property {boolean} [defaults=false] Also sets default values on the resulting object\n   * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n   * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n   * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n   * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n   */\n\n  /**\n   * Creates a plain object from a message of this type. Also converts values to other types if specified.\n   * @param {Message<{}>} message Message instance\n   * @param {IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Type.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n  };\n\n  /**\n   * Decorator function as returned by {@link Type.d} (TypeScript).\n   * @typedef TypeDecorator\n   * @type {function}\n   * @param {Constructor<T>} target Target constructor\n   * @returns {undefined}\n   * @template T extends Message<T>\n   */\n\n  /**\n   * Type decorator (TypeScript).\n   * @param {string} [typeName] Type name, defaults to the constructor's name\n   * @returns {TypeDecorator<T>} Decorator function\n   * @template T extends Message<T>\n   */\n  Type.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n      util.decorateType(target, typeName);\n    };\n  };\n});","lineCount":543,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"module"],[4,8,2,6],[4,9,2,7,"exports"],[4,16,2,14],[4,19,2,17,"Type"],[4,23,2,21],[6,2,4,0],[7,2,5,0],[7,6,5,4,"Namespace"],[7,15,5,13],[7,18,5,16,"require"],[7,25,5,23],[7,26,5,23,"_dependencyMap"],[7,40,5,23],[7,58,5,37],[7,59,5,38],[8,2,6,0],[8,3,6,1],[8,4,6,2,"Type"],[8,8,6,6],[8,9,6,7,"prototype"],[8,18,6,16],[8,21,6,19,"Object"],[8,27,6,25],[8,28,6,26,"create"],[8,34,6,32],[8,35,6,33,"Namespace"],[8,44,6,42],[8,45,6,43,"prototype"],[8,54,6,52],[8,55,6,53],[8,57,6,55,"constructor"],[8,68,6,66],[8,71,6,69,"Type"],[8,75,6,73],[8,77,6,75,"className"],[8,86,6,84],[8,89,6,87],[8,95,6,93],[9,2,8,0],[9,6,8,4,"Enum"],[9,10,8,8],[9,13,8,16,"require"],[9,20,8,23],[9,21,8,23,"_dependencyMap"],[9,35,8,23],[9,48,8,32],[9,49,8,33],[10,4,9,4,"OneOf"],[10,9,9,9],[10,12,9,16,"require"],[10,19,9,23],[10,20,9,23,"_dependencyMap"],[10,34,9,23],[10,48,9,33],[10,49,9,34],[11,4,10,4,"Field"],[11,9,10,9],[11,12,10,16,"require"],[11,19,10,23],[11,20,10,23,"_dependencyMap"],[11,34,10,23],[11,48,10,33],[11,49,10,34],[12,4,11,4,"MapField"],[12,12,11,12],[12,15,11,16,"require"],[12,22,11,23],[12,23,11,23,"_dependencyMap"],[12,37,11,23],[12,54,11,36],[12,55,11,37],[13,4,12,4,"Service"],[13,11,12,11],[13,14,12,16,"require"],[13,21,12,23],[13,22,12,23,"_dependencyMap"],[13,36,12,23],[13,52,12,35],[13,53,12,36],[14,4,13,4,"Message"],[14,11,13,11],[14,14,13,16,"require"],[14,21,13,23],[14,22,13,23,"_dependencyMap"],[14,36,13,23],[14,52,13,35],[14,53,13,36],[15,4,14,4,"Reader"],[15,10,14,10],[15,13,14,16,"require"],[15,20,14,23],[15,21,14,23,"_dependencyMap"],[15,35,14,23],[15,50,14,34],[15,51,14,35],[16,4,15,4,"Writer"],[16,10,15,10],[16,13,15,16,"require"],[16,20,15,23],[16,21,15,23,"_dependencyMap"],[16,35,15,23],[16,50,15,34],[16,51,15,35],[17,4,16,4,"util"],[17,8,16,8],[17,11,16,16,"require"],[17,18,16,23],[17,19,16,23,"_dependencyMap"],[17,33,16,23],[17,46,16,32],[17,47,16,33],[18,4,17,4,"encoder"],[18,11,17,11],[18,14,17,16,"require"],[18,21,17,23],[18,22,17,23,"_dependencyMap"],[18,36,17,23],[18,53,17,35],[18,54,17,36],[19,4,18,4,"decoder"],[19,11,18,11],[19,14,18,16,"require"],[19,21,18,23],[19,22,18,23,"_dependencyMap"],[19,36,18,23],[19,53,18,35],[19,54,18,36],[20,4,19,4,"verifier"],[20,12,19,12],[20,15,19,16,"require"],[20,22,19,23],[20,23,19,23,"_dependencyMap"],[20,37,19,23],[20,55,19,36],[20,56,19,37],[21,4,20,4,"converter"],[21,13,20,13],[21,16,20,16,"require"],[21,23,20,23],[21,24,20,23,"_dependencyMap"],[21,38,20,23],[21,57,20,37],[21,58,20,38],[22,4,21,4,"wrappers"],[22,12,21,12],[22,15,21,16,"require"],[22,22,21,23],[22,23,21,23,"_dependencyMap"],[22,37,21,23],[22,55,21,36],[22,56,21,37],[24,2,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,2,31,0],[32,11,31,9,"Type"],[32,15,31,13,"Type"],[32,16,31,14,"name"],[32,20,31,18],[32,22,31,20,"options"],[32,29,31,27],[32,31,31,29],[33,4,32,4,"Namespace"],[33,13,32,13],[33,14,32,14,"call"],[33,18,32,18],[33,19,32,19],[33,23,32,23],[33,25,32,25,"name"],[33,29,32,29],[33,31,32,31,"options"],[33,38,32,38],[33,39,32,39],[35,4,34,4],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,4,38,4],[39,8,38,8],[39,9,38,9,"fields"],[39,15,38,15],[39,18,38,18],[39,19,38,19],[39,20,38,20],[39,21,38,21],[39,22,38,23],[41,4,40,4],[42,0,41,0],[43,0,42,0],[44,0,43,0],[45,4,44,4],[45,8,44,8],[45,9,44,9,"oneofs"],[45,15,44,15],[45,18,44,18,"undefined"],[45,27,44,27],[45,28,44,28],[45,29,44,29],[47,4,46,4],[48,0,47,0],[49,0,48,0],[50,0,49,0],[51,4,50,4],[51,8,50,8],[51,9,50,9,"extensions"],[51,19,50,19],[51,22,50,22,"undefined"],[51,31,50,31],[51,32,50,32],[51,33,50,33],[53,4,52,4],[54,0,53,0],[55,0,54,0],[56,0,55,0],[57,4,56,4],[57,8,56,8],[57,9,56,9,"reserved"],[57,17,56,17],[57,20,56,20,"undefined"],[57,29,56,29],[57,30,56,30],[57,31,56,31],[59,4,58,4],[60,0,59,0],[61,0,60,0],[62,0,61,0],[63,4,62,4],[63,8,62,8],[63,9,62,9,"group"],[63,14,62,14],[63,17,62,17,"undefined"],[63,26,62,26],[63,27,62,27],[63,28,62,28],[65,4,64,4],[66,0,65,0],[67,0,66,0],[68,0,67,0],[69,0,68,0],[70,4,69,4],[70,8,69,8],[70,9,69,9,"_fieldsById"],[70,20,69,20],[70,23,69,23],[70,27,69,27],[72,4,71,4],[73,0,72,0],[74,0,73,0],[75,0,74,0],[76,0,75,0],[77,4,76,4],[77,8,76,8],[77,9,76,9,"_fieldsArray"],[77,21,76,21],[77,24,76,24],[77,28,76,28],[79,4,78,4],[80,0,79,0],[81,0,80,0],[82,0,81,0],[83,0,82,0],[84,4,83,4],[84,8,83,8],[84,9,83,9,"_oneofsArray"],[84,21,83,21],[84,24,83,24],[84,28,83,28],[86,4,85,4],[87,0,86,0],[88,0,87,0],[89,0,88,0],[90,0,89,0],[91,4,90,4],[91,8,90,8],[91,9,90,9,"_ctor"],[91,14,90,14],[91,17,90,17],[91,21,90,21],[92,2,91,0],[93,2,93,0,"Object"],[93,8,93,6],[93,9,93,7,"defineProperties"],[93,25,93,23],[93,26,93,24,"Type"],[93,30,93,28],[93,31,93,29,"prototype"],[93,40,93,38],[93,42,93,40],[94,4,95,4],[95,0,96,0],[96,0,97,0],[97,0,98,0],[98,0,99,0],[99,0,100,0],[100,4,101,4,"fieldsById"],[100,14,101,14],[100,16,101,16],[101,6,102,8,"get"],[101,9,102,11],[101,11,102,13],[101,20,102,13,"get"],[101,21,102,13],[101,23,102,24],[102,8,104,12],[103,8,105,12],[103,12,105,16],[103,16,105,20],[103,17,105,21,"_fieldsById"],[103,28,105,32],[103,30,106,16],[103,37,106,23],[103,41,106,27],[103,42,106,28,"_fieldsById"],[103,53,106,39],[104,8,108,12],[104,12,108,16],[104,13,108,17,"_fieldsById"],[104,24,108,28],[104,27,108,31],[104,28,108,32],[104,29,108,33],[105,8,109,12],[105,13,109,17],[105,17,109,21,"names"],[105,22,109,26],[105,25,109,29,"Object"],[105,31,109,35],[105,32,109,36,"keys"],[105,36,109,40],[105,37,109,41],[105,41,109,45],[105,42,109,46,"fields"],[105,48,109,52],[105,49,109,53],[105,51,109,55,"i"],[105,52,109,56],[105,55,109,59],[105,56,109,60],[105,58,109,62,"i"],[105,59,109,63],[105,62,109,66,"names"],[105,67,109,71],[105,68,109,72,"length"],[105,74,109,78],[105,76,109,80],[105,78,109,82,"i"],[105,79,109,83],[105,81,109,85],[106,10,110,16],[106,14,110,20,"field"],[106,19,110,25],[106,22,110,28],[106,26,110,32],[106,27,110,33,"fields"],[106,33,110,39],[106,34,110,40,"names"],[106,39,110,45],[106,40,110,46,"i"],[106,41,110,47],[106,42,110,48],[106,43,110,49],[107,12,111,20,"id"],[107,14,111,22],[107,17,111,25,"field"],[107,22,111,30],[107,23,111,31,"id"],[107,25,111,33],[109,10,113,16],[110,10,114,16],[110,14,114,20],[110,18,114,24],[110,19,114,25,"_fieldsById"],[110,30,114,36],[110,31,114,37,"id"],[110,33,114,39],[110,34,114,40],[110,36,115,20],[110,42,115,26,"Error"],[110,47,115,31],[110,48,115,32],[110,63,115,47],[110,66,115,50,"id"],[110,68,115,52],[110,71,115,55],[110,77,115,61],[110,80,115,64],[110,84,115,68],[110,85,115,69],[111,10,117,16],[111,14,117,20],[111,15,117,21,"_fieldsById"],[111,26,117,32],[111,27,117,33,"id"],[111,29,117,35],[111,30,117,36],[111,33,117,39,"field"],[111,38,117,44],[112,8,118,12],[113,8,119,12],[113,15,119,19],[113,19,119,23],[113,20,119,24,"_fieldsById"],[113,31,119,35],[114,6,120,8],[115,4,121,4],[115,5,121,5],[116,4,123,4],[117,0,124,0],[118,0,125,0],[119,0,126,0],[120,0,127,0],[121,0,128,0],[122,4,129,4,"fieldsArray"],[122,15,129,15],[122,17,129,17],[123,6,130,8,"get"],[123,9,130,11],[123,11,130,13],[123,20,130,13,"get"],[123,21,130,13],[123,23,130,24],[124,8,131,12],[124,15,131,19],[124,19,131,23],[124,20,131,24,"_fieldsArray"],[124,32,131,36],[124,37,131,41],[124,41,131,45],[124,42,131,46,"_fieldsArray"],[124,54,131,58],[124,57,131,61,"util"],[124,61,131,65],[124,62,131,66,"toArray"],[124,69,131,73],[124,70,131,74],[124,74,131,78],[124,75,131,79,"fields"],[124,81,131,85],[124,82,131,86],[124,83,131,87],[125,6,132,8],[126,4,133,4],[126,5,133,5],[127,4,135,4],[128,0,136,0],[129,0,137,0],[130,0,138,0],[131,0,139,0],[132,0,140,0],[133,4,141,4,"oneofsArray"],[133,15,141,15],[133,17,141,17],[134,6,142,8,"get"],[134,9,142,11],[134,11,142,13],[134,20,142,13,"get"],[134,21,142,13],[134,23,142,24],[135,8,143,12],[135,15,143,19],[135,19,143,23],[135,20,143,24,"_oneofsArray"],[135,32,143,36],[135,37,143,41],[135,41,143,45],[135,42,143,46,"_oneofsArray"],[135,54,143,58],[135,57,143,61,"util"],[135,61,143,65],[135,62,143,66,"toArray"],[135,69,143,73],[135,70,143,74],[135,74,143,78],[135,75,143,79,"oneofs"],[135,81,143,85],[135,82,143,86],[135,83,143,87],[136,6,144,8],[137,4,145,4],[137,5,145,5],[138,4,147,4],[139,0,148,0],[140,0,149,0],[141,0,150,0],[142,0,151,0],[143,0,152,0],[144,4,153,4,"ctor"],[144,8,153,8],[144,10,153,10],[145,6,154,8,"get"],[145,9,154,11],[145,11,154,13],[145,20,154,13,"get"],[145,21,154,13],[145,23,154,24],[146,8,155,12],[146,15,155,19],[146,19,155,23],[146,20,155,24,"_ctor"],[146,25,155,29],[146,30,155,34],[146,34,155,38],[146,35,155,39,"ctor"],[146,39,155,43],[146,42,155,46,"Type"],[146,46,155,50],[146,47,155,51,"generateConstructor"],[146,66,155,70],[146,67,155,71],[146,71,155,75],[146,72,155,76],[146,73,155,77],[146,74,155,78],[146,75,155,79],[147,6,156,8],[147,7,156,9],[148,6,157,8,"set"],[148,9,157,11],[148,11,157,13],[148,20,157,13,"set"],[148,21,157,22,"ctor"],[148,25,157,26],[148,27,157,28],[149,8,159,12],[150,8,160,12],[150,12,160,16,"prototype"],[150,21,160,25],[150,24,160,28,"ctor"],[150,28,160,32],[150,29,160,33,"prototype"],[150,38,160,42],[151,8,161,12],[151,12,161,16],[151,14,161,18,"prototype"],[151,23,161,27],[151,35,161,39,"Message"],[151,42,161,46],[151,43,161,47],[151,45,161,49],[152,10,162,16],[152,11,162,17,"ctor"],[152,15,162,21],[152,16,162,22,"prototype"],[152,25,162,31],[152,28,162,34],[152,32,162,38,"Message"],[152,39,162,45],[152,40,162,46],[152,41,162,47],[152,43,162,49,"constructor"],[152,54,162,60],[152,57,162,63,"ctor"],[152,61,162,67],[153,10,163,16,"util"],[153,14,163,20],[153,15,163,21,"merge"],[153,20,163,26],[153,21,163,27,"ctor"],[153,25,163,31],[153,26,163,32,"prototype"],[153,35,163,41],[153,37,163,43,"prototype"],[153,46,163,52],[153,47,163,53],[154,8,164,12],[156,8,166,12],[157,8,167,12,"ctor"],[157,12,167,16],[157,13,167,17,"$type"],[157,18,167,22],[157,21,167,25,"ctor"],[157,25,167,29],[157,26,167,30,"prototype"],[157,35,167,39],[157,36,167,40,"$type"],[157,41,167,45],[157,44,167,48],[157,48,167,52],[159,8,169,12],[160,8,170,12,"util"],[160,12,170,16],[160,13,170,17,"merge"],[160,18,170,22],[160,19,170,23,"ctor"],[160,23,170,27],[160,25,170,29,"Message"],[160,32,170,36],[160,34,170,38],[160,38,170,42],[160,39,170,43],[161,8,172,12],[161,12,172,16],[161,13,172,17,"_ctor"],[161,18,172,22],[161,21,172,25,"ctor"],[161,25,172,29],[163,8,174,12],[164,8,175,12],[164,12,175,16,"i"],[164,13,175,17],[164,16,175,20],[164,17,175,21],[165,8,176,12],[165,15,176,19,"i"],[165,16,176,20],[165,19,176,23],[165,36,176,41],[165,40,176,45],[165,41,176,46,"fieldsArray"],[165,52,176,57],[165,53,176,58,"length"],[165,59,176,64],[165,61,176,66],[165,63,176,68,"i"],[165,64,176,69],[165,66,177,16],[165,70,177,20],[165,71,177,21,"_fieldsArray"],[165,83,177,33],[165,84,177,34,"i"],[165,85,177,35],[165,86,177,36],[165,87,177,37,"resolve"],[165,94,177,44],[165,95,177,45],[165,96,177,46],[165,97,177,47],[165,98,177,48],[167,8,179,12],[168,8,180,12],[168,12,180,16,"ctorProperties"],[168,26,180,30],[168,29,180,33],[168,30,180,34],[168,31,180,35],[169,8,181,12],[169,13,181,17,"i"],[169,14,181,18],[169,17,181,21],[169,18,181,22],[169,20,181,24,"i"],[169,21,181,25],[169,24,181,28],[169,41,181,46],[169,45,181,50],[169,46,181,51,"oneofsArray"],[169,57,181,62],[169,58,181,63,"length"],[169,64,181,69],[169,66,181,71],[169,68,181,73,"i"],[169,69,181,74],[169,71,182,16,"ctorProperties"],[169,85,182,30],[169,86,182,31],[169,90,182,35],[169,91,182,36,"_oneofsArray"],[169,103,182,48],[169,104,182,49,"i"],[169,105,182,50],[169,106,182,51],[169,107,182,52,"resolve"],[169,114,182,59],[169,115,182,60],[169,116,182,61],[169,117,182,62,"name"],[169,121,182,66],[169,122,182,67],[169,125,182,70],[170,10,183,20,"get"],[170,13,183,23],[170,15,183,25,"util"],[170,19,183,29],[170,20,183,30,"oneOfGetter"],[170,31,183,41],[170,32,183,42],[170,36,183,46],[170,37,183,47,"_oneofsArray"],[170,49,183,59],[170,50,183,60,"i"],[170,51,183,61],[170,52,183,62],[170,53,183,63,"oneof"],[170,58,183,68],[170,59,183,69],[171,10,184,20,"set"],[171,13,184,23],[171,15,184,25,"util"],[171,19,184,29],[171,20,184,30,"oneOfSetter"],[171,31,184,41],[171,32,184,42],[171,36,184,46],[171,37,184,47,"_oneofsArray"],[171,49,184,59],[171,50,184,60,"i"],[171,51,184,61],[171,52,184,62],[171,53,184,63,"oneof"],[171,58,184,68],[172,8,185,16],[172,9,185,17],[173,8,186,12],[173,12,186,16,"i"],[173,13,186,17],[173,15,187,16,"Object"],[173,21,187,22],[173,22,187,23,"defineProperties"],[173,38,187,39],[173,39,187,40,"ctor"],[173,43,187,44],[173,44,187,45,"prototype"],[173,53,187,54],[173,55,187,56,"ctorProperties"],[173,69,187,70],[173,70,187,71],[174,6,188,8],[175,4,189,4],[176,2,190,0],[176,3,190,1],[176,4,190,2],[178,2,192,0],[179,0,193,0],[180,0,194,0],[181,0,195,0],[182,0,196,0],[183,2,197,0,"Type"],[183,6,197,4],[183,7,197,5,"generateConstructor"],[183,26,197,24],[183,29,197,27],[183,38,197,36,"generateConstructor"],[183,57,197,55,"generateConstructor"],[183,58,197,56,"mtype"],[183,63,197,61],[183,65,197,63],[184,4,198,4],[185,4,199,4],[185,8,199,8,"gen"],[185,11,199,11],[185,14,199,14,"util"],[185,18,199,18],[185,19,199,19,"codegen"],[185,26,199,26],[185,27,199,27],[185,28,199,28],[185,31,199,31],[185,32,199,32],[185,34,199,34,"mtype"],[185,39,199,39],[185,40,199,40,"name"],[185,44,199,44],[185,45,199,45],[186,4,200,4],[187,4,201,4],[187,9,201,9],[187,13,201,13,"i"],[187,14,201,14],[187,17,201,17],[187,18,201,18],[187,20,201,20,"field"],[187,25,201,25],[187,27,201,27,"i"],[187,28,201,28],[187,31,201,31,"mtype"],[187,36,201,36],[187,37,201,37,"fieldsArray"],[187,48,201,48],[187,49,201,49,"length"],[187,55,201,55],[187,57,201,57],[187,59,201,59,"i"],[187,60,201,60],[187,62,202,8],[187,66,202,12],[187,67,202,13,"field"],[187,72,202,18],[187,75,202,21,"mtype"],[187,80,202,26],[187,81,202,27,"_fieldsArray"],[187,93,202,39],[187,94,202,40,"i"],[187,95,202,41],[187,96,202,42],[187,98,202,44,"map"],[187,101,202,47],[187,103,202,49,"gen"],[187,106,202,52],[187,107,203,13],[187,118,203,24],[187,120,203,26,"util"],[187,124,203,30],[187,125,203,31,"safeProp"],[187,133,203,39],[187,134,203,40,"field"],[187,139,203,45],[187,140,203,46,"name"],[187,144,203,50],[187,145,203,51],[187,146,203,52],[187,147,203,53],[187,152,204,13],[187,156,204,17,"field"],[187,161,204,22],[187,162,204,23,"repeated"],[187,170,204,31],[187,172,204,33,"gen"],[187,175,204,36],[187,176,205,13],[187,187,205,24],[187,189,205,26,"util"],[187,193,205,30],[187,194,205,31,"safeProp"],[187,202,205,39],[187,203,205,40,"field"],[187,208,205,45],[187,209,205,46,"name"],[187,213,205,50],[187,214,205,51],[187,215,205,52],[188,4,206,4],[188,11,206,11,"gen"],[188,14,206,14],[188,15,207,5],[188,86,207,76],[188,87,207,77],[188,88,207,78],[189,4,207,78],[189,5,208,9],[189,27,208,31],[189,28,208,32],[190,4,209,4],[191,2,210,0],[191,3,210,1],[192,2,212,0],[192,11,212,9,"clearCache"],[192,21,212,19,"clearCache"],[192,22,212,20,"type"],[192,26,212,24],[192,28,212,26],[193,4,213,4,"type"],[193,8,213,8],[193,9,213,9,"_fieldsById"],[193,20,213,20],[193,23,213,23,"type"],[193,27,213,27],[193,28,213,28,"_fieldsArray"],[193,40,213,40],[193,43,213,43,"type"],[193,47,213,47],[193,48,213,48,"_oneofsArray"],[193,60,213,60],[193,63,213,63],[193,67,213,67],[194,4,214,4],[194,11,214,11,"type"],[194,15,214,15],[194,16,214,16,"encode"],[194,22,214,22],[195,4,215,4],[195,11,215,11,"type"],[195,15,215,15],[195,16,215,16,"decode"],[195,22,215,22],[196,4,216,4],[196,11,216,11,"type"],[196,15,216,15],[196,16,216,16,"verify"],[196,22,216,22],[197,4,217,4],[197,11,217,11,"type"],[197,15,217,15],[198,2,218,0],[200,2,220,0],[201,0,221,0],[202,0,222,0],[203,0,223,0],[204,0,224,0],[205,0,225,0],[206,0,226,0],[207,0,227,0],[208,0,228,0],[209,0,229,0],[211,2,231,0],[212,0,232,0],[213,0,233,0],[214,0,234,0],[215,0,235,0],[216,0,236,0],[217,2,237,0,"Type"],[217,6,237,4],[217,7,237,5,"fromJSON"],[217,15,237,13],[217,18,237,16],[217,27,237,25,"fromJSON"],[217,35,237,33,"fromJSON"],[217,36,237,34,"name"],[217,40,237,38],[217,42,237,40,"json"],[217,46,237,44],[217,48,237,46],[218,4,238,4],[218,8,238,8,"type"],[218,12,238,12],[218,15,238,15],[218,19,238,19,"Type"],[218,23,238,23],[218,24,238,24,"name"],[218,28,238,28],[218,30,238,30,"json"],[218,34,238,34],[218,35,238,35,"options"],[218,42,238,42],[218,43,238,43],[219,4,239,4,"type"],[219,8,239,8],[219,9,239,9,"extensions"],[219,19,239,19],[219,22,239,22,"json"],[219,26,239,26],[219,27,239,27,"extensions"],[219,37,239,37],[220,4,240,4,"type"],[220,8,240,8],[220,9,240,9,"reserved"],[220,17,240,17],[220,20,240,20,"json"],[220,24,240,24],[220,25,240,25,"reserved"],[220,33,240,33],[221,4,241,4],[221,8,241,8,"names"],[221,13,241,13],[221,16,241,16,"Object"],[221,22,241,22],[221,23,241,23,"keys"],[221,27,241,27],[221,28,241,28,"json"],[221,32,241,32],[221,33,241,33,"fields"],[221,39,241,39],[221,40,241,40],[222,6,242,8,"i"],[222,7,242,9],[222,10,242,12],[222,11,242,13],[223,4,243,4],[223,11,243,11,"i"],[223,12,243,12],[223,15,243,15,"names"],[223,20,243,20],[223,21,243,21,"length"],[223,27,243,27],[223,29,243,29],[223,31,243,31,"i"],[223,32,243,32],[223,34,244,8,"type"],[223,38,244,12],[223,39,244,13,"add"],[223,42,244,16],[223,43,245,12],[223,44,245,14],[223,51,245,21,"json"],[223,55,245,25],[223,56,245,26,"fields"],[223,62,245,32],[223,63,245,33,"names"],[223,68,245,38],[223,69,245,39,"i"],[223,70,245,40],[223,71,245,41],[223,72,245,42],[223,73,245,43,"keyType"],[223,80,245,50],[223,85,245,55],[223,96,245,66],[223,99,246,14,"MapField"],[223,107,246,22],[223,108,246,23,"fromJSON"],[223,116,246,31],[223,119,247,14,"Field"],[223,124,247,19],[223,125,247,20,"fromJSON"],[223,133,247,28],[223,135,247,31,"names"],[223,140,247,36],[223,141,247,37,"i"],[223,142,247,38],[223,143,247,39],[223,145,247,41,"json"],[223,149,247,45],[223,150,247,46,"fields"],[223,156,247,52],[223,157,247,53,"names"],[223,162,247,58],[223,163,247,59,"i"],[223,164,247,60],[223,165,247,61],[223,166,247,62],[223,167,248,8],[223,168,248,9],[224,4,249,4],[224,8,249,8,"json"],[224,12,249,12],[224,13,249,13,"oneofs"],[224,19,249,19],[224,21,250,8],[224,26,250,13,"names"],[224,31,250,18],[224,34,250,21,"Object"],[224,40,250,27],[224,41,250,28,"keys"],[224,45,250,32],[224,46,250,33,"json"],[224,50,250,37],[224,51,250,38,"oneofs"],[224,57,250,44],[224,58,250,45],[224,60,250,47,"i"],[224,61,250,48],[224,64,250,51],[224,65,250,52],[224,67,250,54,"i"],[224,68,250,55],[224,71,250,58,"names"],[224,76,250,63],[224,77,250,64,"length"],[224,83,250,70],[224,85,250,72],[224,87,250,74,"i"],[224,88,250,75],[224,90,251,12,"type"],[224,94,251,16],[224,95,251,17,"add"],[224,98,251,20],[224,99,251,21,"OneOf"],[224,104,251,26],[224,105,251,27,"fromJSON"],[224,113,251,35],[224,114,251,36,"names"],[224,119,251,41],[224,120,251,42,"i"],[224,121,251,43],[224,122,251,44],[224,124,251,46,"json"],[224,128,251,50],[224,129,251,51,"oneofs"],[224,135,251,57],[224,136,251,58,"names"],[224,141,251,63],[224,142,251,64,"i"],[224,143,251,65],[224,144,251,66],[224,145,251,67],[224,146,251,68],[224,147,251,69],[225,4,252,4],[225,8,252,8,"json"],[225,12,252,12],[225,13,252,13,"nested"],[225,19,252,19],[225,21,253,8],[225,26,253,13,"names"],[225,31,253,18],[225,34,253,21,"Object"],[225,40,253,27],[225,41,253,28,"keys"],[225,45,253,32],[225,46,253,33,"json"],[225,50,253,37],[225,51,253,38,"nested"],[225,57,253,44],[225,58,253,45],[225,60,253,47,"i"],[225,61,253,48],[225,64,253,51],[225,65,253,52],[225,67,253,54,"i"],[225,68,253,55],[225,71,253,58,"names"],[225,76,253,63],[225,77,253,64,"length"],[225,83,253,70],[225,85,253,72],[225,87,253,74,"i"],[225,88,253,75],[225,90,253,77],[226,6,254,12],[226,10,254,16,"nested"],[226,16,254,22],[226,19,254,25,"json"],[226,23,254,29],[226,24,254,30,"nested"],[226,30,254,36],[226,31,254,37,"names"],[226,36,254,42],[226,37,254,43,"i"],[226,38,254,44],[226,39,254,45],[226,40,254,46],[227,6,255,12,"type"],[227,10,255,16],[227,11,255,17,"add"],[227,14,255,20],[228,6,255,22],[229,6,256,16],[229,7,256,18,"nested"],[229,13,256,24],[229,14,256,25,"id"],[229,16,256,27],[229,21,256,32,"undefined"],[229,30,256,41],[229,33,257,18,"Field"],[229,38,257,23],[229,39,257,24,"fromJSON"],[229,47,257,32],[229,50,258,18,"nested"],[229,56,258,24],[229,57,258,25,"fields"],[229,63,258,31],[229,68,258,36,"undefined"],[229,77,258,45],[229,80,259,18,"Type"],[229,84,259,22],[229,85,259,23,"fromJSON"],[229,93,259,31],[229,96,260,18,"nested"],[229,102,260,24],[229,103,260,25,"values"],[229,109,260,31],[229,114,260,36,"undefined"],[229,123,260,45],[229,126,261,18,"Enum"],[229,130,261,22],[229,131,261,23,"fromJSON"],[229,139,261,31],[229,142,262,18,"nested"],[229,148,262,24],[229,149,262,25,"methods"],[229,156,262,32],[229,161,262,37,"undefined"],[229,170,262,46],[229,173,263,18,"Service"],[229,180,263,25],[229,181,263,26,"fromJSON"],[229,189,263,34],[229,192,264,18,"Namespace"],[229,201,264,27],[229,202,264,28,"fromJSON"],[229,210,264,36],[229,212,264,39,"names"],[229,217,264,44],[229,218,264,45,"i"],[229,219,264,46],[229,220,264,47],[229,222,264,49,"nested"],[229,228,264,55],[229,229,265,12],[229,230,265,13],[230,4,266,8],[231,4,267,4],[231,8,267,8,"json"],[231,12,267,12],[231,13,267,13,"extensions"],[231,23,267,23],[231,27,267,27,"json"],[231,31,267,31],[231,32,267,32,"extensions"],[231,42,267,42],[231,43,267,43,"length"],[231,49,267,49],[231,51,268,8,"type"],[231,55,268,12],[231,56,268,13,"extensions"],[231,66,268,23],[231,69,268,26,"json"],[231,73,268,30],[231,74,268,31,"extensions"],[231,84,268,41],[232,4,269,4],[232,8,269,8,"json"],[232,12,269,12],[232,13,269,13,"reserved"],[232,21,269,21],[232,25,269,25,"json"],[232,29,269,29],[232,30,269,30,"reserved"],[232,38,269,38],[232,39,269,39,"length"],[232,45,269,45],[232,47,270,8,"type"],[232,51,270,12],[232,52,270,13,"reserved"],[232,60,270,21],[232,63,270,24,"json"],[232,67,270,28],[232,68,270,29,"reserved"],[232,76,270,37],[233,4,271,4],[233,8,271,8,"json"],[233,12,271,12],[233,13,271,13,"group"],[233,18,271,18],[233,20,272,8,"type"],[233,24,272,12],[233,25,272,13,"group"],[233,30,272,18],[233,33,272,21],[233,37,272,25],[234,4,273,4],[234,8,273,8,"json"],[234,12,273,12],[234,13,273,13,"comment"],[234,20,273,20],[234,22,274,8,"type"],[234,26,274,12],[234,27,274,13,"comment"],[234,34,274,20],[234,37,274,23,"json"],[234,41,274,27],[234,42,274,28,"comment"],[234,49,274,35],[235,4,275,4],[235,8,275,8,"json"],[235,12,275,12],[235,13,275,13,"edition"],[235,20,275,20],[235,22,276,8,"type"],[235,26,276,12],[235,27,276,13,"_edition"],[235,35,276,21],[235,38,276,24,"json"],[235,42,276,28],[235,43,276,29,"edition"],[235,50,276,36],[236,4,277,4,"type"],[236,8,277,8],[236,9,277,9,"_defaultEdition"],[236,24,277,24],[236,27,277,27],[236,35,277,35],[236,36,277,36],[236,37,277,38],[237,4,278,4],[237,11,278,11,"type"],[237,15,278,15],[238,2,279,0],[238,3,279,1],[240,2,281,0],[241,0,282,0],[242,0,283,0],[243,0,284,0],[244,0,285,0],[245,2,286,0,"Type"],[245,6,286,4],[245,7,286,5,"prototype"],[245,16,286,14],[245,17,286,15,"toJSON"],[245,23,286,21],[245,26,286,24],[245,35,286,33,"toJSON"],[245,41,286,39,"toJSON"],[245,42,286,40,"toJSONOptions"],[245,55,286,53],[245,57,286,55],[246,4,287,4],[246,8,287,8,"inherited"],[246,17,287,17],[246,20,287,20,"Namespace"],[246,29,287,29],[246,30,287,30,"prototype"],[246,39,287,39],[246,40,287,40,"toJSON"],[246,46,287,46],[246,47,287,47,"call"],[246,51,287,51],[246,52,287,52],[246,56,287,56],[246,58,287,58,"toJSONOptions"],[246,71,287,71],[246,72,287,72],[247,4,288,4],[247,8,288,8,"keepComments"],[247,20,288,20],[247,23,288,23,"toJSONOptions"],[247,36,288,36],[247,39,288,39,"Boolean"],[247,46,288,46],[247,47,288,47,"toJSONOptions"],[247,60,288,60],[247,61,288,61,"keepComments"],[247,73,288,73],[247,74,288,74],[247,77,288,77],[247,82,288,82],[248,4,289,4],[248,11,289,11,"util"],[248,15,289,15],[248,16,289,16,"toObject"],[248,24,289,24],[248,25,289,25],[248,26,290,8],[248,35,290,17],[248,37,290,23],[248,41,290,27],[248,42,290,28,"_editionToJSON"],[248,56,290,42],[248,57,290,43],[248,58,290,44],[248,60,291,8],[248,69,291,17],[248,71,291,23,"inherited"],[248,80,291,32],[248,84,291,36,"inherited"],[248,93,291,45],[248,94,291,46,"options"],[248,101,291,53],[248,105,291,57,"undefined"],[248,114,291,66],[248,116,292,8],[248,124,292,16],[248,126,292,23,"Namespace"],[248,135,292,32],[248,136,292,33,"arrayToJSON"],[248,147,292,44],[248,148,292,45],[248,152,292,49],[248,153,292,50,"oneofsArray"],[248,164,292,61],[248,166,292,63,"toJSONOptions"],[248,179,292,76],[248,180,292,77],[248,182,293,8],[248,190,293,16],[248,192,293,23,"Namespace"],[248,201,293,32],[248,202,293,33,"arrayToJSON"],[248,213,293,44],[248,214,293,45],[248,218,293,49],[248,219,293,50,"fieldsArray"],[248,230,293,61],[248,231,293,62,"filter"],[248,237,293,68],[248,238,293,69],[248,248,293,78,"obj"],[248,251,293,81],[248,253,293,83],[249,6,293,85],[249,13,293,92],[249,14,293,93,"obj"],[249,17,293,96],[249,18,293,97,"declaringField"],[249,32,293,111],[250,4,293,113],[250,5,293,114],[250,6,293,115],[250,8,293,117,"toJSONOptions"],[250,21,293,130],[250,22,293,131],[250,26,293,135],[250,27,293,136],[250,28,293,137],[250,30,294,8],[250,42,294,20],[250,44,294,23],[250,48,294,27],[250,49,294,28,"extensions"],[250,59,294,38],[250,63,294,42],[250,67,294,46],[250,68,294,47,"extensions"],[250,78,294,57],[250,79,294,58,"length"],[250,85,294,64],[250,88,294,67],[250,92,294,71],[250,93,294,72,"extensions"],[250,103,294,82],[250,106,294,85,"undefined"],[250,115,294,94],[250,117,295,8],[250,127,295,18],[250,129,295,23],[250,133,295,27],[250,134,295,28,"reserved"],[250,142,295,36],[250,146,295,40],[250,150,295,44],[250,151,295,45,"reserved"],[250,159,295,53],[250,160,295,54,"length"],[250,166,295,60],[250,169,295,63],[250,173,295,67],[250,174,295,68,"reserved"],[250,182,295,76],[250,185,295,79,"undefined"],[250,194,295,88],[250,196,296,8],[250,203,296,15],[250,205,296,23],[250,209,296,27],[250,210,296,28,"group"],[250,215,296,33],[250,219,296,37,"undefined"],[250,228,296,46],[250,230,297,8],[250,238,297,16],[250,240,297,23,"inherited"],[250,249,297,32],[250,253,297,36,"inherited"],[250,262,297,45],[250,263,297,46,"nested"],[250,269,297,52],[250,273,297,56,"undefined"],[250,282,297,65],[250,284,298,8],[250,293,298,17],[250,295,298,23,"keepComments"],[250,307,298,35],[250,310,298,38],[250,314,298,42],[250,315,298,43,"comment"],[250,322,298,50],[250,325,298,53,"undefined"],[250,334,298,62],[250,335,299,5],[250,336,299,6],[251,2,300,0],[251,3,300,1],[253,2,302,0],[254,0,303,0],[255,0,304,0],[256,2,305,0,"Type"],[256,6,305,4],[256,7,305,5,"prototype"],[256,16,305,14],[256,17,305,15,"resolveAll"],[256,27,305,25],[256,30,305,28],[256,39,305,37,"resolveAll"],[256,49,305,47,"resolveAll"],[256,50,305,47],[256,52,305,50],[257,4,306,4],[257,8,306,8],[257,9,306,9],[257,13,306,13],[257,14,306,14,"_needsRecursiveResolve"],[257,36,306,36],[257,38,306,38],[257,45,306,45],[257,49,306,49],[258,4,308,4,"Namespace"],[258,13,308,13],[258,14,308,14,"prototype"],[258,23,308,23],[258,24,308,24,"resolveAll"],[258,34,308,34],[258,35,308,35,"call"],[258,39,308,39],[258,40,308,40],[258,44,308,44],[258,45,308,45],[259,4,309,4],[259,8,309,8,"oneofs"],[259,14,309,14],[259,17,309,17],[259,21,309,21],[259,22,309,22,"oneofsArray"],[259,33,309,33],[260,4,309,35,"i"],[260,5,309,36],[260,8,309,39],[260,9,309,40],[261,4,310,4],[261,11,310,11,"i"],[261,12,310,12],[261,15,310,15,"oneofs"],[261,21,310,21],[261,22,310,22,"length"],[261,28,310,28],[261,30,311,8,"oneofs"],[261,36,311,14],[261,37,311,15,"i"],[261,38,311,16],[261,40,311,18],[261,41,311,19],[261,42,311,20,"resolve"],[261,49,311,27],[261,50,311,28],[261,51,311,29],[262,4,312,4],[262,8,312,8,"fields"],[262,14,312,14],[262,17,312,17],[262,21,312,21],[262,22,312,22,"fieldsArray"],[262,33,312,33],[263,6,312,35,"i"],[263,7,312,36],[263,10,312,39],[263,11,312,40],[264,4,313,4],[264,11,313,11,"i"],[264,12,313,12],[264,15,313,15,"fields"],[264,21,313,21],[264,22,313,22,"length"],[264,28,313,28],[264,30,314,8,"fields"],[264,36,314,14],[264,37,314,15,"i"],[264,38,314,16],[264,40,314,18],[264,41,314,19],[264,42,314,20,"resolve"],[264,49,314,27],[264,50,314,28],[264,51,314,29],[265,4,315,4],[265,11,315,11],[265,15,315,15],[266,2,316,0],[266,3,316,1],[268,2,318,0],[269,0,319,0],[270,0,320,0],[271,2,321,0,"Type"],[271,6,321,4],[271,7,321,5,"prototype"],[271,16,321,14],[271,17,321,15,"_resolveFeaturesRecursive"],[271,42,321,40],[271,45,321,43],[271,54,321,52,"_resolveFeaturesRecursive"],[271,79,321,77,"_resolveFeaturesRecursive"],[271,80,321,78,"edition"],[271,87,321,85],[271,89,321,87],[272,4,322,4],[272,8,322,8],[272,9,322,9],[272,13,322,13],[272,14,322,14,"_needsRecursiveFeatureResolution"],[272,46,322,46],[272,48,322,48],[272,55,322,55],[272,59,322,59],[273,4,324,4,"edition"],[273,11,324,11],[273,14,324,14],[273,18,324,18],[273,19,324,19,"_edition"],[273,27,324,27],[273,31,324,31,"edition"],[273,38,324,38],[274,4,326,4,"Namespace"],[274,13,326,13],[274,14,326,14,"prototype"],[274,23,326,23],[274,24,326,24,"_resolveFeaturesRecursive"],[274,49,326,49],[274,50,326,50,"call"],[274,54,326,54],[274,55,326,55],[274,59,326,59],[274,61,326,61,"edition"],[274,68,326,68],[274,69,326,69],[275,4,327,4],[275,8,327,8],[275,9,327,9,"oneofsArray"],[275,20,327,20],[275,21,327,21,"forEach"],[275,28,327,28],[275,29,327,29,"oneof"],[275,34,327,34],[275,38,327,38],[276,6,328,8,"oneof"],[276,11,328,13],[276,12,328,14,"_resolveFeatures"],[276,28,328,30],[276,29,328,31,"edition"],[276,36,328,38],[276,37,328,39],[277,4,329,4],[277,5,329,5],[277,6,329,6],[278,4,330,4],[278,8,330,8],[278,9,330,9,"fieldsArray"],[278,20,330,20],[278,21,330,21,"forEach"],[278,28,330,28],[278,29,330,29,"field"],[278,34,330,34],[278,38,330,38],[279,6,331,8,"field"],[279,11,331,13],[279,12,331,14,"_resolveFeatures"],[279,28,331,30],[279,29,331,31,"edition"],[279,36,331,38],[279,37,331,39],[280,4,332,4],[280,5,332,5],[280,6,332,6],[281,4,333,4],[281,11,333,11],[281,15,333,15],[282,2,334,0],[282,3,334,1],[284,2,336,0],[285,0,337,0],[286,0,338,0],[287,2,339,0,"Type"],[287,6,339,4],[287,7,339,5,"prototype"],[287,16,339,14],[287,17,339,15,"get"],[287,20,339,18],[287,23,339,21],[287,32,339,30,"get"],[287,35,339,33,"get"],[287,36,339,34,"name"],[287,40,339,38],[287,42,339,40],[288,4,340,4],[288,11,340,11],[288,15,340,15],[288,16,340,16,"fields"],[288,22,340,22],[288,23,340,23,"name"],[288,27,340,27],[288,28,340,28],[288,32,341,11],[288,36,341,15],[288,37,341,16,"oneofs"],[288,43,341,22],[288,47,341,26],[288,51,341,30],[288,52,341,31,"oneofs"],[288,58,341,37],[288,59,341,38,"name"],[288,63,341,42],[288,64,341,43],[288,68,342,11],[288,72,342,15],[288,73,342,16,"nested"],[288,79,342,22],[288,83,342,26],[288,87,342,30],[288,88,342,31,"nested"],[288,94,342,37],[288,95,342,38,"name"],[288,99,342,42],[288,100,342,43],[288,104,343,11],[288,108,343,15],[289,2,344,0],[289,3,344,1],[291,2,346,0],[292,0,347,0],[293,0,348,0],[294,0,349,0],[295,0,350,0],[296,0,351,0],[297,0,352,0],[298,2,353,0,"Type"],[298,6,353,4],[298,7,353,5,"prototype"],[298,16,353,14],[298,17,353,15,"add"],[298,20,353,18],[298,23,353,21],[298,32,353,30,"add"],[298,35,353,33,"add"],[298,36,353,34,"object"],[298,42,353,40],[298,44,353,42],[299,4,355,4],[299,8,355,8],[299,12,355,12],[299,13,355,13,"get"],[299,16,355,16],[299,17,355,17,"object"],[299,23,355,23],[299,24,355,24,"name"],[299,28,355,28],[299,29,355,29],[299,31,356,8],[299,37,356,14,"Error"],[299,42,356,19],[299,43,356,20],[299,61,356,38],[299,64,356,41,"object"],[299,70,356,47],[299,71,356,48,"name"],[299,75,356,52],[299,78,356,55],[299,85,356,62],[299,88,356,65],[299,92,356,69],[299,93,356,70],[300,4,358,4],[300,8,358,8,"object"],[300,14,358,14],[300,26,358,26,"Field"],[300,31,358,31],[300,35,358,35,"object"],[300,41,358,41],[300,42,358,42,"extend"],[300,48,358,48],[300,53,358,53,"undefined"],[300,62,358,62],[300,64,358,64],[301,6,359,8],[302,6,360,8],[303,6,361,8],[305,6,363,8],[306,6,364,8],[306,10,364,12],[306,14,364,16],[306,15,364,17,"_fieldsById"],[306,26,364,28],[306,29,364,31],[306,55,364,58],[306,59,364,62],[306,60,364,63,"_fieldsById"],[306,71,364,74],[306,72,364,75,"object"],[306,78,364,81],[306,79,364,82,"id"],[306,81,364,84],[306,82,364,85],[306,85,364,88],[306,89,364,92],[306,90,364,93,"fieldsById"],[306,100,364,103],[306,101,364,104,"object"],[306,107,364,110],[306,108,364,111,"id"],[306,110,364,113],[306,111,364,114],[306,113,365,12],[306,119,365,18,"Error"],[306,124,365,23],[306,125,365,24],[306,140,365,39],[306,143,365,42,"object"],[306,149,365,48],[306,150,365,49,"id"],[306,152,365,51],[306,155,365,54],[306,161,365,60],[306,164,365,63],[306,168,365,67],[306,169,365,68],[307,6,366,8],[307,10,366,12],[307,14,366,16],[307,15,366,17,"isReservedId"],[307,27,366,29],[307,28,366,30,"object"],[307,34,366,36],[307,35,366,37,"id"],[307,37,366,39],[307,38,366,40],[307,40,367,12],[307,46,367,18,"Error"],[307,51,367,23],[307,52,367,24],[307,57,367,29],[307,60,367,32,"object"],[307,66,367,38],[307,67,367,39,"id"],[307,69,367,41],[307,72,367,44],[307,90,367,62],[307,93,367,65],[307,97,367,69],[307,98,367,70],[308,6,368,8],[308,10,368,12],[308,14,368,16],[308,15,368,17,"isReservedName"],[308,29,368,31],[308,30,368,32,"object"],[308,36,368,38],[308,37,368,39,"name"],[308,41,368,43],[308,42,368,44],[308,44,369,12],[308,50,369,18,"Error"],[308,55,369,23],[308,56,369,24],[308,64,369,32],[308,67,369,35,"object"],[308,73,369,41],[308,74,369,42,"name"],[308,78,369,46],[308,81,369,49],[308,100,369,68],[308,103,369,71],[308,107,369,75],[308,108,369,76],[309,6,371,8],[309,10,371,12,"object"],[309,16,371,18],[309,17,371,19,"parent"],[309,23,371,25],[309,25,372,12,"object"],[309,31,372,18],[309,32,372,19,"parent"],[309,38,372,25],[309,39,372,26,"remove"],[309,45,372,32],[309,46,372,33,"object"],[309,52,372,39],[309,53,372,40],[310,6,373,8],[310,10,373,12],[310,11,373,13,"fields"],[310,17,373,19],[310,18,373,20,"object"],[310,24,373,26],[310,25,373,27,"name"],[310,29,373,31],[310,30,373,32],[310,33,373,35,"object"],[310,39,373,41],[311,6,374,8,"object"],[311,12,374,14],[311,13,374,15,"message"],[311,20,374,22],[311,23,374,25],[311,27,374,29],[312,6,375,8,"object"],[312,12,375,14],[312,13,375,15,"onAdd"],[312,18,375,20],[312,19,375,21],[312,23,375,25],[312,24,375,26],[313,6,376,8],[313,13,376,15,"clearCache"],[313,23,376,25],[313,24,376,26],[313,28,376,30],[313,29,376,31],[314,4,377,4],[315,4,378,4],[315,8,378,8,"object"],[315,14,378,14],[315,26,378,26,"OneOf"],[315,31,378,31],[315,33,378,33],[316,6,379,8],[316,10,379,12],[316,11,379,13],[316,15,379,17],[316,16,379,18,"oneofs"],[316,22,379,24],[316,24,380,12],[316,28,380,16],[316,29,380,17,"oneofs"],[316,35,380,23],[316,38,380,26],[316,39,380,27],[316,40,380,28],[317,6,381,8],[317,10,381,12],[317,11,381,13,"oneofs"],[317,17,381,19],[317,18,381,20,"object"],[317,24,381,26],[317,25,381,27,"name"],[317,29,381,31],[317,30,381,32],[317,33,381,35,"object"],[317,39,381,41],[318,6,382,8,"object"],[318,12,382,14],[318,13,382,15,"onAdd"],[318,18,382,20],[318,19,382,21],[318,23,382,25],[318,24,382,26],[319,6,383,8],[319,13,383,15,"clearCache"],[319,23,383,25],[319,24,383,26],[319,28,383,30],[319,29,383,31],[320,4,384,4],[321,4,385,4],[321,11,385,11,"Namespace"],[321,20,385,20],[321,21,385,21,"prototype"],[321,30,385,30],[321,31,385,31,"add"],[321,34,385,34],[321,35,385,35,"call"],[321,39,385,39],[321,40,385,40],[321,44,385,44],[321,46,385,46,"object"],[321,52,385,52],[321,53,385,53],[322,2,386,0],[322,3,386,1],[324,2,388,0],[325,0,389,0],[326,0,390,0],[327,0,391,0],[328,0,392,0],[329,0,393,0],[330,0,394,0],[331,2,395,0,"Type"],[331,6,395,4],[331,7,395,5,"prototype"],[331,16,395,14],[331,17,395,15,"remove"],[331,23,395,21],[331,26,395,24],[331,35,395,33,"remove"],[331,41,395,39,"remove"],[331,42,395,40,"object"],[331,48,395,46],[331,50,395,48],[332,4,396,4],[332,8,396,8,"object"],[332,14,396,14],[332,26,396,26,"Field"],[332,31,396,31],[332,35,396,35,"object"],[332,41,396,41],[332,42,396,42,"extend"],[332,48,396,48],[332,53,396,53,"undefined"],[332,62,396,62],[332,64,396,64],[333,6,397,8],[335,6,399,8],[336,6,400,8],[336,10,400,12],[336,11,400,13],[336,15,400,17],[336,16,400,18,"fields"],[336,22,400,24],[336,26,400,28],[336,30,400,32],[336,31,400,33,"fields"],[336,37,400,39],[336,38,400,40,"object"],[336,44,400,46],[336,45,400,47,"name"],[336,49,400,51],[336,50,400,52],[336,55,400,57,"object"],[336,61,400,63],[336,63,401,12],[336,69,401,18,"Error"],[336,74,401,23],[336,75,401,24,"object"],[336,81,401,30],[336,84,401,33],[336,106,401,55],[336,109,401,58],[336,113,401,62],[336,114,401,63],[337,6,403,8],[337,13,403,15],[337,17,403,19],[337,18,403,20,"fields"],[337,24,403,26],[337,25,403,27,"object"],[337,31,403,33],[337,32,403,34,"name"],[337,36,403,38],[337,37,403,39],[338,6,404,8,"object"],[338,12,404,14],[338,13,404,15,"parent"],[338,19,404,21],[338,22,404,24],[338,26,404,28],[339,6,405,8,"object"],[339,12,405,14],[339,13,405,15,"onRemove"],[339,21,405,23],[339,22,405,24],[339,26,405,28],[339,27,405,29],[340,6,406,8],[340,13,406,15,"clearCache"],[340,23,406,25],[340,24,406,26],[340,28,406,30],[340,29,406,31],[341,4,407,4],[342,4,408,4],[342,8,408,8,"object"],[342,14,408,14],[342,26,408,26,"OneOf"],[342,31,408,31],[342,33,408,33],[343,6,410,8],[344,6,411,8],[344,10,411,12],[344,11,411,13],[344,15,411,17],[344,16,411,18,"oneofs"],[344,22,411,24],[344,26,411,28],[344,30,411,32],[344,31,411,33,"oneofs"],[344,37,411,39],[344,38,411,40,"object"],[344,44,411,46],[344,45,411,47,"name"],[344,49,411,51],[344,50,411,52],[344,55,411,57,"object"],[344,61,411,63],[344,63,412,12],[344,69,412,18,"Error"],[344,74,412,23],[344,75,412,24,"object"],[344,81,412,30],[344,84,412,33],[344,106,412,55],[344,109,412,58],[344,113,412,62],[344,114,412,63],[345,6,414,8],[345,13,414,15],[345,17,414,19],[345,18,414,20,"oneofs"],[345,24,414,26],[345,25,414,27,"object"],[345,31,414,33],[345,32,414,34,"name"],[345,36,414,38],[345,37,414,39],[346,6,415,8,"object"],[346,12,415,14],[346,13,415,15,"parent"],[346,19,415,21],[346,22,415,24],[346,26,415,28],[347,6,416,8,"object"],[347,12,416,14],[347,13,416,15,"onRemove"],[347,21,416,23],[347,22,416,24],[347,26,416,28],[347,27,416,29],[348,6,417,8],[348,13,417,15,"clearCache"],[348,23,417,25],[348,24,417,26],[348,28,417,30],[348,29,417,31],[349,4,418,4],[350,4,419,4],[350,11,419,11,"Namespace"],[350,20,419,20],[350,21,419,21,"prototype"],[350,30,419,30],[350,31,419,31,"remove"],[350,37,419,37],[350,38,419,38,"call"],[350,42,419,42],[350,43,419,43],[350,47,419,47],[350,49,419,49,"object"],[350,55,419,55],[350,56,419,56],[351,2,420,0],[351,3,420,1],[353,2,422,0],[354,0,423,0],[355,0,424,0],[356,0,425,0],[357,0,426,0],[358,2,427,0,"Type"],[358,6,427,4],[358,7,427,5,"prototype"],[358,16,427,14],[358,17,427,15,"isReservedId"],[358,29,427,27],[358,32,427,30],[358,41,427,39,"isReservedId"],[358,53,427,51,"isReservedId"],[358,54,427,52,"id"],[358,56,427,54],[358,58,427,56],[359,4,428,4],[359,11,428,11,"Namespace"],[359,20,428,20],[359,21,428,21,"isReservedId"],[359,33,428,33],[359,34,428,34],[359,38,428,38],[359,39,428,39,"reserved"],[359,47,428,47],[359,49,428,49,"id"],[359,51,428,51],[359,52,428,52],[360,2,429,0],[360,3,429,1],[362,2,431,0],[363,0,432,0],[364,0,433,0],[365,0,434,0],[366,0,435,0],[367,2,436,0,"Type"],[367,6,436,4],[367,7,436,5,"prototype"],[367,16,436,14],[367,17,436,15,"isReservedName"],[367,31,436,29],[367,34,436,32],[367,43,436,41,"isReservedName"],[367,57,436,55,"isReservedName"],[367,58,436,56,"name"],[367,62,436,60],[367,64,436,62],[368,4,437,4],[368,11,437,11,"Namespace"],[368,20,437,20],[368,21,437,21,"isReservedName"],[368,35,437,35],[368,36,437,36],[368,40,437,40],[368,41,437,41,"reserved"],[368,49,437,49],[368,51,437,51,"name"],[368,55,437,55],[368,56,437,56],[369,2,438,0],[369,3,438,1],[371,2,440,0],[372,0,441,0],[373,0,442,0],[374,0,443,0],[375,0,444,0],[376,2,445,0,"Type"],[376,6,445,4],[376,7,445,5,"prototype"],[376,16,445,14],[376,17,445,15,"create"],[376,23,445,21],[376,26,445,24],[376,35,445,33,"create"],[376,41,445,39,"create"],[376,42,445,40,"properties"],[376,52,445,50],[376,54,445,52],[377,4,446,4],[377,11,446,11],[377,15,446,15],[377,19,446,19],[377,20,446,20,"ctor"],[377,24,446,24],[377,25,446,25,"properties"],[377,35,446,35],[377,36,446,36],[378,2,447,0],[378,3,447,1],[380,2,449,0],[381,0,450,0],[382,0,451,0],[383,0,452,0],[384,2,453,0,"Type"],[384,6,453,4],[384,7,453,5,"prototype"],[384,16,453,14],[384,17,453,15,"setup"],[384,22,453,20],[384,25,453,23],[384,34,453,32,"setup"],[384,39,453,37,"setup"],[384,40,453,37],[384,42,453,40],[385,4,454,4],[386,4,455,4],[388,4,457,4],[388,8,457,8,"fullName"],[388,16,457,16],[388,19,457,19],[388,23,457,23],[388,24,457,24,"fullName"],[388,32,457,32],[389,6,458,8,"types"],[389,11,458,13],[389,14,458,19],[389,16,458,21],[390,4,459,4],[390,9,459,9],[390,13,459,13,"i"],[390,14,459,14],[390,17,459,17],[390,18,459,18],[390,20,459,20,"i"],[390,21,459,21],[390,24,459,24],[390,41,459,42],[390,45,459,46],[390,46,459,47,"fieldsArray"],[390,57,459,58],[390,58,459,59,"length"],[390,64,459,65],[390,66,459,67],[390,68,459,69,"i"],[390,69,459,70],[390,71,460,8,"types"],[390,76,460,13],[390,77,460,14,"push"],[390,81,460,18],[390,82,460,19],[390,86,460,23],[390,87,460,24,"_fieldsArray"],[390,99,460,36],[390,100,460,37,"i"],[390,101,460,38],[390,102,460,39],[390,103,460,40,"resolve"],[390,110,460,47],[390,111,460,48],[390,112,460,49],[390,113,460,50,"resolvedType"],[390,125,460,62],[390,126,460,63],[392,4,462,4],[393,4,463,4],[393,8,463,8],[393,9,463,9,"encode"],[393,15,463,15],[393,18,463,18,"encoder"],[393,25,463,25],[393,26,463,26],[393,30,463,30],[393,31,463,31],[393,32,463,32],[394,6,464,8,"Writer"],[394,12,464,14],[394,14,464,17,"Writer"],[394,20,464,23],[395,6,465,8,"types"],[395,11,465,13],[395,13,465,17,"types"],[395,18,465,22],[396,6,466,8,"util"],[396,10,466,12],[396,12,466,17,"util"],[397,4,467,4],[397,5,467,5],[397,6,467,6],[398,4,468,4],[398,8,468,8],[398,9,468,9,"decode"],[398,15,468,15],[398,18,468,18,"decoder"],[398,25,468,25],[398,26,468,26],[398,30,468,30],[398,31,468,31],[398,32,468,32],[399,6,469,8,"Reader"],[399,12,469,14],[399,14,469,17,"Reader"],[399,20,469,23],[400,6,470,8,"types"],[400,11,470,13],[400,13,470,17,"types"],[400,18,470,22],[401,6,471,8,"util"],[401,10,471,12],[401,12,471,17,"util"],[402,4,472,4],[402,5,472,5],[402,6,472,6],[403,4,473,4],[403,8,473,8],[403,9,473,9,"verify"],[403,15,473,15],[403,18,473,18,"verifier"],[403,26,473,26],[403,27,473,27],[403,31,473,31],[403,32,473,32],[403,33,473,33],[404,6,474,8,"types"],[404,11,474,13],[404,13,474,16,"types"],[404,18,474,21],[405,6,475,8,"util"],[405,10,475,12],[405,12,475,16,"util"],[406,4,476,4],[406,5,476,5],[406,6,476,6],[407,4,477,4],[407,8,477,8],[407,9,477,9,"fromObject"],[407,19,477,19],[407,22,477,22,"converter"],[407,31,477,31],[407,32,477,32,"fromObject"],[407,42,477,42],[407,43,477,43],[407,47,477,47],[407,48,477,48],[407,49,477,49],[408,6,478,8,"types"],[408,11,478,13],[408,13,478,16,"types"],[408,18,478,21],[409,6,479,8,"util"],[409,10,479,12],[409,12,479,16,"util"],[410,4,480,4],[410,5,480,5],[410,6,480,6],[411,4,481,4],[411,8,481,8],[411,9,481,9,"toObject"],[411,17,481,17],[411,20,481,20,"converter"],[411,29,481,29],[411,30,481,30,"toObject"],[411,38,481,38],[411,39,481,39],[411,43,481,43],[411,44,481,44],[411,45,481,45],[412,6,482,8,"types"],[412,11,482,13],[412,13,482,16,"types"],[412,18,482,21],[413,6,483,8,"util"],[413,10,483,12],[413,12,483,16,"util"],[414,4,484,4],[414,5,484,5],[414,6,484,6],[416,4,486,4],[417,4,487,4],[417,8,487,8,"wrapper"],[417,15,487,15],[417,18,487,18,"wrappers"],[417,26,487,26],[417,27,487,27,"fullName"],[417,35,487,35],[417,36,487,36],[418,4,488,4],[418,8,488,8,"wrapper"],[418,15,488,15],[418,17,488,17],[419,6,489,8],[419,10,489,12,"originalThis"],[419,22,489,24],[419,25,489,27,"Object"],[419,31,489,33],[419,32,489,34,"create"],[419,38,489,40],[419,39,489,41],[419,43,489,45],[419,44,489,46],[420,6,490,8],[421,6,491,12,"originalThis"],[421,18,491,24],[421,19,491,25,"fromObject"],[421,29,491,35],[421,32,491,38],[421,36,491,42],[421,37,491,43,"fromObject"],[421,47,491,53],[422,6,492,12],[422,10,492,16],[422,11,492,17,"fromObject"],[422,21,492,27],[422,24,492,30,"wrapper"],[422,31,492,37],[422,32,492,38,"fromObject"],[422,42,492,48],[422,43,492,49,"bind"],[422,47,492,53],[422,48,492,54,"originalThis"],[422,60,492,66],[422,61,492,67],[423,6,493,8],[424,6,494,8],[425,6,495,12,"originalThis"],[425,18,495,24],[425,19,495,25,"toObject"],[425,27,495,33],[425,30,495,36],[425,34,495,40],[425,35,495,41,"toObject"],[425,43,495,49],[426,6,496,12],[426,10,496,16],[426,11,496,17,"toObject"],[426,19,496,25],[426,22,496,28,"wrapper"],[426,29,496,35],[426,30,496,36,"toObject"],[426,38,496,44],[426,39,496,45,"bind"],[426,43,496,49],[426,44,496,50,"originalThis"],[426,56,496,62],[426,57,496,63],[427,6,497,8],[428,4,498,4],[429,4,500,4],[429,11,500,11],[429,15,500,15],[430,2,501,0],[430,3,501,1],[432,2,503,0],[433,0,504,0],[434,0,505,0],[435,0,506,0],[436,0,507,0],[437,0,508,0],[438,2,509,0,"Type"],[438,6,509,4],[438,7,509,5,"prototype"],[438,16,509,14],[438,17,509,15,"encode"],[438,23,509,21],[438,26,509,24],[438,35,509,33,"encode_setup"],[438,47,509,45,"encode_setup"],[438,48,509,46,"message"],[438,55,509,53],[438,57,509,55,"writer"],[438,63,509,61],[438,65,509,63],[439,4,510,4],[439,11,510,11],[439,15,510,15],[439,16,510,16,"setup"],[439,21,510,21],[439,22,510,22],[439,23,510,23],[439,24,510,24,"encode"],[439,30,510,30],[439,31,510,31,"message"],[439,38,510,38],[439,40,510,40,"writer"],[439,46,510,46],[439,47,510,47],[439,48,510,48],[439,49,510,49],[440,2,511,0],[440,3,511,1],[442,2,513,0],[443,0,514,0],[444,0,515,0],[445,0,516,0],[446,0,517,0],[447,0,518,0],[448,2,519,0,"Type"],[448,6,519,4],[448,7,519,5,"prototype"],[448,16,519,14],[448,17,519,15,"encodeDelimited"],[448,32,519,30],[448,35,519,33],[448,44,519,42,"encodeDelimited"],[448,59,519,57,"encodeDelimited"],[448,60,519,58,"message"],[448,67,519,65],[448,69,519,67,"writer"],[448,75,519,73],[448,77,519,75],[449,4,520,4],[449,11,520,11],[449,15,520,15],[449,16,520,16,"encode"],[449,22,520,22],[449,23,520,23,"message"],[449,30,520,30],[449,32,520,32,"writer"],[449,38,520,38],[449,42,520,42,"writer"],[449,48,520,48],[449,49,520,49,"len"],[449,52,520,52],[449,55,520,55,"writer"],[449,61,520,61],[449,62,520,62,"fork"],[449,66,520,66],[449,67,520,67],[449,68,520,68],[449,71,520,71,"writer"],[449,77,520,77],[449,78,520,78],[449,79,520,79,"ldelim"],[449,85,520,85],[449,86,520,86],[449,87,520,87],[450,2,521,0],[450,3,521,1],[452,2,523,0],[453,0,524,0],[454,0,525,0],[455,0,526,0],[456,0,527,0],[457,0,528,0],[458,0,529,0],[459,0,530,0],[460,2,531,0,"Type"],[460,6,531,4],[460,7,531,5,"prototype"],[460,16,531,14],[460,17,531,15,"decode"],[460,23,531,21],[460,26,531,24],[460,35,531,33,"decode_setup"],[460,47,531,45,"decode_setup"],[460,48,531,46,"reader"],[460,54,531,52],[460,56,531,54,"length"],[460,62,531,60],[460,64,531,62],[461,4,532,4],[461,11,532,11],[461,15,532,15],[461,16,532,16,"setup"],[461,21,532,21],[461,22,532,22],[461,23,532,23],[461,24,532,24,"decode"],[461,30,532,30],[461,31,532,31,"reader"],[461,37,532,37],[461,39,532,39,"length"],[461,45,532,45],[461,46,532,46],[461,47,532,47],[461,48,532,48],[462,2,533,0],[462,3,533,1],[464,2,535,0],[465,0,536,0],[466,0,537,0],[467,0,538,0],[468,0,539,0],[469,0,540,0],[470,0,541,0],[471,2,542,0,"Type"],[471,6,542,4],[471,7,542,5,"prototype"],[471,16,542,14],[471,17,542,15,"decodeDelimited"],[471,32,542,30],[471,35,542,33],[471,44,542,42,"decodeDelimited"],[471,59,542,57,"decodeDelimited"],[471,60,542,58,"reader"],[471,66,542,64],[471,68,542,66],[472,4,543,4],[472,8,543,8],[472,10,543,10,"reader"],[472,16,543,16],[472,28,543,28,"Reader"],[472,34,543,34],[472,35,543,35],[472,37,544,8,"reader"],[472,43,544,14],[472,46,544,17,"Reader"],[472,52,544,23],[472,53,544,24,"create"],[472,59,544,30],[472,60,544,31,"reader"],[472,66,544,37],[472,67,544,38],[473,4,545,4],[473,11,545,11],[473,15,545,15],[473,16,545,16,"decode"],[473,22,545,22],[473,23,545,23,"reader"],[473,29,545,29],[473,31,545,31,"reader"],[473,37,545,37],[473,38,545,38,"uint32"],[473,44,545,44],[473,45,545,45],[473,46,545,46],[473,47,545,47],[474,2,546,0],[474,3,546,1],[476,2,548,0],[477,0,549,0],[478,0,550,0],[479,0,551,0],[480,0,552,0],[481,2,553,0,"Type"],[481,6,553,4],[481,7,553,5,"prototype"],[481,16,553,14],[481,17,553,15,"verify"],[481,23,553,21],[481,26,553,24],[481,35,553,33,"verify_setup"],[481,47,553,45,"verify_setup"],[481,48,553,46,"message"],[481,55,553,53],[481,57,553,55],[482,4,554,4],[482,11,554,11],[482,15,554,15],[482,16,554,16,"setup"],[482,21,554,21],[482,22,554,22],[482,23,554,23],[482,24,554,24,"verify"],[482,30,554,30],[482,31,554,31,"message"],[482,38,554,38],[482,39,554,39],[482,40,554,40],[482,41,554,41],[483,2,555,0],[483,3,555,1],[485,2,557,0],[486,0,558,0],[487,0,559,0],[488,0,560,0],[489,0,561,0],[490,2,562,0,"Type"],[490,6,562,4],[490,7,562,5,"prototype"],[490,16,562,14],[490,17,562,15,"fromObject"],[490,27,562,25],[490,30,562,28],[490,39,562,37,"fromObject"],[490,49,562,47,"fromObject"],[490,50,562,48,"object"],[490,56,562,54],[490,58,562,56],[491,4,563,4],[491,11,563,11],[491,15,563,15],[491,16,563,16,"setup"],[491,21,563,21],[491,22,563,22],[491,23,563,23],[491,24,563,24,"fromObject"],[491,34,563,34],[491,35,563,35,"object"],[491,41,563,41],[491,42,563,42],[492,2,564,0],[492,3,564,1],[494,2,566,0],[495,0,567,0],[496,0,568,0],[497,0,569,0],[498,0,570,0],[499,0,571,0],[500,0,572,0],[501,0,573,0],[502,0,574,0],[503,0,575,0],[504,0,576,0],[505,0,577,0],[506,0,578,0],[507,0,579,0],[508,0,580,0],[509,0,581,0],[510,0,582,0],[511,0,583,0],[513,2,585,0],[514,0,586,0],[515,0,587,0],[516,0,588,0],[517,0,589,0],[518,0,590,0],[519,2,591,0,"Type"],[519,6,591,4],[519,7,591,5,"prototype"],[519,16,591,14],[519,17,591,15,"toObject"],[519,25,591,23],[519,28,591,26],[519,37,591,35,"toObject"],[519,45,591,43,"toObject"],[519,46,591,44,"message"],[519,53,591,51],[519,55,591,53,"options"],[519,62,591,60],[519,64,591,62],[520,4,592,4],[520,11,592,11],[520,15,592,15],[520,16,592,16,"setup"],[520,21,592,21],[520,22,592,22],[520,23,592,23],[520,24,592,24,"toObject"],[520,32,592,32],[520,33,592,33,"message"],[520,40,592,40],[520,42,592,42,"options"],[520,49,592,49],[520,50,592,50],[521,2,593,0],[521,3,593,1],[523,2,595,0],[524,0,596,0],[525,0,597,0],[526,0,598,0],[527,0,599,0],[528,0,600,0],[529,0,601,0],[530,0,602,0],[532,2,604,0],[533,0,605,0],[534,0,606,0],[535,0,607,0],[536,0,608,0],[537,0,609,0],[538,2,610,0,"Type"],[538,6,610,4],[538,7,610,5,"d"],[538,8,610,6],[538,11,610,9],[538,20,610,18,"decorateType"],[538,32,610,30,"decorateType"],[538,33,610,31,"typeName"],[538,41,610,39],[538,43,610,41],[539,4,611,4],[539,11,611,11],[539,20,611,20,"typeDecorator"],[539,33,611,33,"typeDecorator"],[539,34,611,34,"target"],[539,40,611,40],[539,42,611,42],[540,6,612,8,"util"],[540,10,612,12],[540,11,612,13,"decorateType"],[540,23,612,25],[540,24,612,26,"target"],[540,30,612,32],[540,32,612,34,"typeName"],[540,40,612,42],[540,41,612,43],[541,4,613,4],[541,5,613,5],[542,2,614,0],[542,3,614,1],[543,0,614,2],[543,3]],"functionMap":{"names":["<global>","Type","Object.defineProperties$argument_1.fieldsById.get","Object.defineProperties$argument_1.fieldsArray.get","Object.defineProperties$argument_1.oneofsArray.get","Object.defineProperties$argument_1.ctor.get","Object.defineProperties$argument_1.ctor.set","generateConstructor","clearCache","fromJSON","toJSON","fieldsArray.filter$argument_0","resolveAll","_resolveFeaturesRecursive","oneofsArray.forEach$argument_0","fieldsArray.forEach$argument_0","get","add","remove","isReservedId","isReservedName","create","setup","encode_setup","encodeDelimited","decode_setup","decodeDelimited","verify_setup","fromObject","toObject","decorateType","typeDecorator"],"mappings":"AAA;AC8B;CD4D;aEW;SFkB;aGU;SHE;aIU;SJE;aKU;SLE;aMC;SN+B;2BOS;CPa;AQE;CRM;gBSmB;CT0C;wBUO;qECO,6CD;CVO;4BYK;CZW;2CaK;6BCM;KDE;6BEC;KFE;CbE;qBgBK;ChBK;qBiBS;CjBiC;wBkBS;ClByB;8BmBO;CnBE;gCoBO;CpBE;wBqBO;CrBE;uBsBM;CtBgD;wBuBQ;CvBE;iCwBQ;CxBE;wByBU;CzBE;iC0BS;C1BI;wB2BO;C3BE;4B4BO;C5BE;0B6B2B;C7BE;S8BiB;WCC;KDE;C9BC"}},"type":"js/module"}]}