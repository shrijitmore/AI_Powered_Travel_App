{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BaseRouter = void 0;\n  var _nonSecure = require(_dependencyMap[0], \"nanoid/non-secure\");\n  /**\n   * Base router object that can be used when writing custom routers.\n   * This provides few helper methods to handle common actions such as `RESET`.\n   */\n  const BaseRouter = exports.BaseRouter = {\n    getStateForAction(state, action) {\n      switch (action.type) {\n        case 'SET_PARAMS':\n        case 'REPLACE_PARAMS':\n          {\n            const index = action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            return Object.assign({}, state, {\n              routes: state.routes.map((r, i) => i === index ? Object.assign({}, r, {\n                params: action.type === 'REPLACE_PARAMS' ? action.payload.params : Object.assign({}, r.params, action.payload.params)\n              }) : r)\n            });\n          }\n        case 'RESET':\n          {\n            const nextState = action.payload;\n            if (nextState.routes.length === 0 || nextState.routes.some(route => !state.routeNames.includes(route.name))) {\n              return null;\n            }\n            if (nextState.stale === false) {\n              if (state.routeNames.length !== nextState.routeNames.length || nextState.routeNames.some(name => !state.routeNames.includes(name))) {\n                return null;\n              }\n              return Object.assign({}, nextState, {\n                routes: nextState.routes.map(route => route.key ? route : Object.assign({}, route, {\n                  key: `${route.name}-${(0, _nonSecure.nanoid)()}`\n                }))\n              });\n            }\n            return nextState;\n          }\n        default:\n          return null;\n      }\n    },\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED';\n    }\n  };\n});","lineCount":55,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"BaseRouter"],[7,20,1,13],[8,2,3,0],[8,6,3,0,"_nonSecure"],[8,16,3,0],[8,19,3,0,"require"],[8,26,3,0],[8,27,3,0,"_dependencyMap"],[8,41,3,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,2,8,7],[13,8,8,13,"BaseRouter"],[13,18,8,23],[13,21,8,23,"exports"],[13,28,8,23],[13,29,8,23,"BaseRouter"],[13,39,8,23],[13,42,8,26],[14,4,9,2,"getStateForAction"],[14,21,9,19,"getStateForAction"],[14,22,9,20,"state"],[14,27,9,25],[14,29,9,27,"action"],[14,35,9,33],[14,37,9,35],[15,6,10,4],[15,14,10,12,"action"],[15,20,10,18],[15,21,10,19,"type"],[15,25,10,23],[16,8,11,6],[16,13,11,11],[16,25,11,23],[17,8,12,6],[17,13,12,11],[17,29,12,27],[18,10,13,8],[19,12,14,10],[19,18,14,16,"index"],[19,23,14,21],[19,26,14,24,"action"],[19,32,14,30],[19,33,14,31,"source"],[19,39,14,37],[19,42,14,40,"state"],[19,47,14,45],[19,48,14,46,"routes"],[19,54,14,52],[19,55,14,53,"findIndex"],[19,64,14,62],[19,65,14,63,"r"],[19,66,14,64],[19,70,14,68,"r"],[19,71,14,69],[19,72,14,70,"key"],[19,75,14,73],[19,80,14,78,"action"],[19,86,14,84],[19,87,14,85,"source"],[19,93,14,91],[19,94,14,92],[19,97,14,95,"state"],[19,102,14,100],[19,103,14,101,"index"],[19,108,14,106],[20,12,15,10],[20,16,15,14,"index"],[20,21,15,19],[20,26,15,24],[20,27,15,25],[20,28,15,26],[20,30,15,28],[21,14,16,12],[21,21,16,19],[21,25,16,23],[22,12,17,10],[23,12,18,10],[23,19,18,10,"Object"],[23,25,18,10],[23,26,18,10,"assign"],[23,32,18,10],[23,37,19,15,"state"],[23,42,19,20],[24,14,20,12,"routes"],[24,20,20,18],[24,22,20,20,"state"],[24,27,20,25],[24,28,20,26,"routes"],[24,34,20,32],[24,35,20,33,"map"],[24,38,20,36],[24,39,20,37],[24,40,20,38,"r"],[24,41,20,39],[24,43,20,41,"i"],[24,44,20,42],[24,49,20,47,"i"],[24,50,20,48],[24,55,20,53,"index"],[24,60,20,58],[24,63,20,58,"Object"],[24,69,20,58],[24,70,20,58,"assign"],[24,76,20,58],[24,81,21,17,"r"],[24,82,21,18],[25,16,22,14,"params"],[25,22,22,20],[25,24,22,22,"action"],[25,30,22,28],[25,31,22,29,"type"],[25,35,22,33],[25,40,22,38],[25,56,22,54],[25,59,22,57,"action"],[25,65,22,63],[25,66,22,64,"payload"],[25,73,22,71],[25,74,22,72,"params"],[25,80,22,78],[25,83,22,78,"Object"],[25,89,22,78],[25,90,22,78,"assign"],[25,96,22,78],[25,101,23,19,"r"],[25,102,23,20],[25,103,23,21,"params"],[25,109,23,27],[25,111,24,19,"action"],[25,117,24,25],[25,118,24,26,"payload"],[25,125,24,33],[25,126,24,34,"params"],[25,132,24,40],[26,14,25,15],[26,19,26,16,"r"],[26,20,26,17],[27,12,26,18],[28,10,28,8],[29,8,29,6],[29,13,29,11],[29,20,29,18],[30,10,30,8],[31,12,31,10],[31,18,31,16,"nextState"],[31,27,31,25],[31,30,31,28,"action"],[31,36,31,34],[31,37,31,35,"payload"],[31,44,31,42],[32,12,32,10],[32,16,32,14,"nextState"],[32,25,32,23],[32,26,32,24,"routes"],[32,32,32,30],[32,33,32,31,"length"],[32,39,32,37],[32,44,32,42],[32,45,32,43],[32,49,32,47,"nextState"],[32,58,32,56],[32,59,32,57,"routes"],[32,65,32,63],[32,66,32,64,"some"],[32,70,32,68],[32,71,32,69,"route"],[32,76,32,74],[32,80,32,78],[32,81,32,79,"state"],[32,86,32,84],[32,87,32,85,"routeNames"],[32,97,32,95],[32,98,32,96,"includes"],[32,106,32,104],[32,107,32,105,"route"],[32,112,32,110],[32,113,32,111,"name"],[32,117,32,115],[32,118,32,116],[32,119,32,117],[32,121,32,119],[33,14,33,12],[33,21,33,19],[33,25,33,23],[34,12,34,10],[35,12,35,10],[35,16,35,14,"nextState"],[35,25,35,23],[35,26,35,24,"stale"],[35,31,35,29],[35,36,35,34],[35,41,35,39],[35,43,35,41],[36,14,36,12],[36,18,36,16,"state"],[36,23,36,21],[36,24,36,22,"routeNames"],[36,34,36,32],[36,35,36,33,"length"],[36,41,36,39],[36,46,36,44,"nextState"],[36,55,36,53],[36,56,36,54,"routeNames"],[36,66,36,64],[36,67,36,65,"length"],[36,73,36,71],[36,77,36,75,"nextState"],[36,86,36,84],[36,87,36,85,"routeNames"],[36,97,36,95],[36,98,36,96,"some"],[36,102,36,100],[36,103,36,101,"name"],[36,107,36,105],[36,111,36,109],[36,112,36,110,"state"],[36,117,36,115],[36,118,36,116,"routeNames"],[36,128,36,126],[36,129,36,127,"includes"],[36,137,36,135],[36,138,36,136,"name"],[36,142,36,140],[36,143,36,141],[36,144,36,142],[36,146,36,144],[37,16,37,14],[37,23,37,21],[37,27,37,25],[38,14,38,12],[39,14,39,12],[39,21,39,12,"Object"],[39,27,39,12],[39,28,39,12,"assign"],[39,34,39,12],[39,39,40,17,"nextState"],[39,48,40,26],[40,16,41,14,"routes"],[40,22,41,20],[40,24,41,22,"nextState"],[40,33,41,31],[40,34,41,32,"routes"],[40,40,41,38],[40,41,41,39,"map"],[40,44,41,42],[40,45,41,43,"route"],[40,50,41,48],[40,54,41,52,"route"],[40,59,41,57],[40,60,41,58,"key"],[40,63,41,61],[40,66,41,64,"route"],[40,71,41,69],[40,74,41,69,"Object"],[40,80,41,69],[40,81,41,69,"assign"],[40,87,41,69],[40,92,42,19,"route"],[40,97,42,24],[41,18,43,16,"key"],[41,21,43,19],[41,23,43,21],[41,26,43,24,"route"],[41,31,43,29],[41,32,43,30,"name"],[41,36,43,34],[41,40,43,38],[41,44,43,38,"nanoid"],[41,61,43,44],[41,63,43,45],[41,64,43,46],[42,16,43,48],[42,18,44,15],[43,14,44,16],[44,12,46,10],[45,12,47,10],[45,19,47,17,"nextState"],[45,28,47,26],[46,10,48,8],[47,8,49,6],[48,10,50,8],[48,17,50,15],[48,21,50,19],[49,6,51,4],[50,4,52,2],[50,5,52,3],[51,4,53,2,"shouldActionChangeFocus"],[51,27,53,25,"shouldActionChangeFocus"],[51,28,53,26,"action"],[51,34,53,32],[51,36,53,34],[52,6,54,4],[52,13,54,11,"action"],[52,19,54,17],[52,20,54,18,"type"],[52,24,54,22],[52,29,54,27],[52,39,54,37],[52,43,54,41,"action"],[52,49,54,47],[52,50,54,48,"type"],[52,54,54,52],[52,59,54,57],[52,80,54,78],[53,4,55,2],[54,2,56,0],[54,3,56,1],[55,0,56,2],[55,3]],"functionMap":{"names":["<global>","getStateForAction","state.routes.findIndex$argument_0","state.routes.map$argument_0","nextState.routes.some$argument_0","nextState.routeNames.some$argument_0","nextState.routes.map$argument_0","shouldActionChangeFocus"],"mappings":"AAA;ECQ;+DCK,4BD;qCEM;iBFM;qEGM,+CH;qGII,wCJ;2CKK;eLG;GDQ;EOC;GPE"}},"type":"js/module"}]}