{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.i = exports.a = void 0;\n  exports.r = replaceTraps;\n  exports.u = void 0;\n  exports.w = wrap;\n  const instanceOfAny = (object, constructors) => constructors.some(c => object instanceof c);\n  exports.i = instanceOfAny;\n  let idbProxyableTypes;\n  let cursorAdvanceMethods;\n  // This is a function to prevent it throwing up in node environments.\n  function getIdbProxyableTypes() {\n    return idbProxyableTypes || (idbProxyableTypes = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction]);\n  }\n  // This is a function to prevent it throwing up in node environments.\n  function getCursorAdvanceMethods() {\n    return cursorAdvanceMethods || (cursorAdvanceMethods = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey]);\n  }\n  const cursorRequestMap = new WeakMap();\n  const transactionDoneMap = new WeakMap();\n  const transactionStoreNamesMap = new WeakMap();\n  const transformCache = new WeakMap();\n  const reverseTransformCache = exports.a = new WeakMap();\n  function promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n      const unlisten = () => {\n        request.removeEventListener('success', success);\n        request.removeEventListener('error', error);\n      };\n      const success = () => {\n        resolve(wrap(request.result));\n        unlisten();\n      };\n      const error = () => {\n        reject(request.error);\n        unlisten();\n      };\n      request.addEventListener('success', success);\n      request.addEventListener('error', error);\n    });\n    promise.then(value => {\n      // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n      // (see wrapFunction).\n      if (value instanceof IDBCursor) {\n        cursorRequestMap.set(value, request);\n      }\n      // Catching to avoid \"Uncaught Promise exceptions\"\n    }).catch(() => {});\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n  }\n  function cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx)) return;\n    const done = new Promise((resolve, reject) => {\n      const unlisten = () => {\n        tx.removeEventListener('complete', complete);\n        tx.removeEventListener('error', error);\n        tx.removeEventListener('abort', error);\n      };\n      const complete = () => {\n        resolve();\n        unlisten();\n      };\n      const error = () => {\n        reject(tx.error || new DOMException('AbortError', 'AbortError'));\n        unlisten();\n      };\n      tx.addEventListener('complete', complete);\n      tx.addEventListener('error', error);\n      tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n  }\n  let idbProxyTraps = {\n    get(target, prop, receiver) {\n      if (target instanceof IDBTransaction) {\n        // Special handling for transaction.done.\n        if (prop === 'done') return transactionDoneMap.get(target);\n        // Polyfill for objectStoreNames because of Edge.\n        if (prop === 'objectStoreNames') {\n          return target.objectStoreNames || transactionStoreNamesMap.get(target);\n        }\n        // Make tx.store return the only store in the transaction, or undefined if there are many.\n        if (prop === 'store') {\n          return receiver.objectStoreNames[1] ? undefined : receiver.objectStore(receiver.objectStoreNames[0]);\n        }\n      }\n      // Else transform whatever we get back.\n      return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n      target[prop] = value;\n      return true;\n    },\n    has(target, prop) {\n      if (target instanceof IDBTransaction && (prop === 'done' || prop === 'store')) {\n        return true;\n      }\n      return prop in target;\n    }\n  };\n  function replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n  }\n  function wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction && !('objectStoreNames' in IDBTransaction.prototype)) {\n      return function (storeNames, ...args) {\n        const tx = func.call(unwrap(this), storeNames, ...args);\n        transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n        return wrap(tx);\n      };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n      return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        func.apply(unwrap(this), args);\n        return wrap(cursorRequestMap.get(this));\n      };\n    }\n    return function (...args) {\n      // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n      // the original object.\n      return wrap(func.apply(unwrap(this), args));\n    };\n  }\n  function transformCachableValue(value) {\n    if (typeof value === 'function') return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction) cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes())) return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n  }\n  function wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest) return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value)) return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n      transformCache.set(value, newValue);\n      reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n  }\n  const unwrap = value => reverseTransformCache.get(value);\n  exports.u = unwrap;\n});","lineCount":168,"map":[[9,2,1,0],[9,8,1,6,"instanceOfAny"],[9,21,1,19],[9,24,1,22,"instanceOfAny"],[9,25,1,23,"object"],[9,31,1,29],[9,33,1,31,"constructors"],[9,45,1,43],[9,50,1,48,"constructors"],[9,62,1,60],[9,63,1,61,"some"],[9,67,1,65],[9,68,1,67,"c"],[9,69,1,68],[9,73,1,73,"object"],[9,79,1,79],[9,91,1,91,"c"],[9,92,1,92],[9,93,1,93],[10,2,1,94,"exports"],[10,9,1,94],[10,10,1,94,"i"],[10,11,1,94],[10,14,1,94,"instanceOfAny"],[10,27,1,94],[11,2,3,0],[11,6,3,4,"idbProxyableTypes"],[11,23,3,21],[12,2,4,0],[12,6,4,4,"cursorAdvanceMethods"],[12,26,4,24],[13,2,5,0],[14,2,6,0],[14,11,6,9,"getIdbProxyableTypes"],[14,31,6,29,"getIdbProxyableTypes"],[14,32,6,29],[14,34,6,32],[15,4,7,4],[15,11,7,12,"idbProxyableTypes"],[15,28,7,29],[15,33,8,9,"idbProxyableTypes"],[15,50,8,26],[15,53,8,29],[15,54,9,12,"IDBDatabase"],[15,65,9,23],[15,67,10,12,"IDBObjectStore"],[15,81,10,26],[15,83,11,12,"IDBIndex"],[15,91,11,20],[15,93,12,12,"IDBCursor"],[15,102,12,21],[15,104,13,12,"IDBTransaction"],[15,118,13,26],[15,119,14,9],[15,120,14,10],[16,2,15,0],[17,2,16,0],[18,2,17,0],[18,11,17,9,"getCursorAdvanceMethods"],[18,34,17,32,"getCursorAdvanceMethods"],[18,35,17,32],[18,37,17,35],[19,4,18,4],[19,11,18,12,"cursorAdvanceMethods"],[19,31,18,32],[19,36,19,9,"cursorAdvanceMethods"],[19,56,19,29],[19,59,19,32],[19,60,20,12,"IDBCursor"],[19,69,20,21],[19,70,20,22,"prototype"],[19,79,20,31],[19,80,20,32,"advance"],[19,87,20,39],[19,89,21,12,"IDBCursor"],[19,98,21,21],[19,99,21,22,"prototype"],[19,108,21,31],[19,109,21,32,"continue"],[19,117,21,40],[19,119,22,12,"IDBCursor"],[19,128,22,21],[19,129,22,22,"prototype"],[19,138,22,31],[19,139,22,32,"continuePrimaryKey"],[19,157,22,50],[19,158,23,9],[19,159,23,10],[20,2,24,0],[21,2,25,0],[21,8,25,6,"cursorRequestMap"],[21,24,25,22],[21,27,25,25],[21,31,25,29,"WeakMap"],[21,38,25,36],[21,39,25,37],[21,40,25,38],[22,2,26,0],[22,8,26,6,"transactionDoneMap"],[22,26,26,24],[22,29,26,27],[22,33,26,31,"WeakMap"],[22,40,26,38],[22,41,26,39],[22,42,26,40],[23,2,27,0],[23,8,27,6,"transactionStoreNamesMap"],[23,32,27,30],[23,35,27,33],[23,39,27,37,"WeakMap"],[23,46,27,44],[23,47,27,45],[23,48,27,46],[24,2,28,0],[24,8,28,6,"transformCache"],[24,22,28,20],[24,25,28,23],[24,29,28,27,"WeakMap"],[24,36,28,34],[24,37,28,35],[24,38,28,36],[25,2,29,0],[25,8,29,6,"reverseTransformCache"],[25,29,29,27],[25,32,29,27,"exports"],[25,39,29,27],[25,40,29,27,"a"],[25,41,29,27],[25,44,29,30],[25,48,29,34,"WeakMap"],[25,55,29,41],[25,56,29,42],[25,57,29,43],[26,2,30,0],[26,11,30,9,"promisifyRequest"],[26,27,30,25,"promisifyRequest"],[26,28,30,26,"request"],[26,35,30,33],[26,37,30,35],[27,4,31,4],[27,10,31,10,"promise"],[27,17,31,17],[27,20,31,20],[27,24,31,24,"Promise"],[27,31,31,31],[27,32,31,32],[27,33,31,33,"resolve"],[27,40,31,40],[27,42,31,42,"reject"],[27,48,31,48],[27,53,31,53],[28,6,32,8],[28,12,32,14,"unlisten"],[28,20,32,22],[28,23,32,25,"unlisten"],[28,24,32,25],[28,29,32,31],[29,8,33,12,"request"],[29,15,33,19],[29,16,33,20,"removeEventListener"],[29,35,33,39],[29,36,33,40],[29,45,33,49],[29,47,33,51,"success"],[29,54,33,58],[29,55,33,59],[30,8,34,12,"request"],[30,15,34,19],[30,16,34,20,"removeEventListener"],[30,35,34,39],[30,36,34,40],[30,43,34,47],[30,45,34,49,"error"],[30,50,34,54],[30,51,34,55],[31,6,35,8],[31,7,35,9],[32,6,36,8],[32,12,36,14,"success"],[32,19,36,21],[32,22,36,24,"success"],[32,23,36,24],[32,28,36,30],[33,8,37,12,"resolve"],[33,15,37,19],[33,16,37,20,"wrap"],[33,20,37,24],[33,21,37,25,"request"],[33,28,37,32],[33,29,37,33,"result"],[33,35,37,39],[33,36,37,40],[33,37,37,41],[34,8,38,12,"unlisten"],[34,16,38,20],[34,17,38,21],[34,18,38,22],[35,6,39,8],[35,7,39,9],[36,6,40,8],[36,12,40,14,"error"],[36,17,40,19],[36,20,40,22,"error"],[36,21,40,22],[36,26,40,28],[37,8,41,12,"reject"],[37,14,41,18],[37,15,41,19,"request"],[37,22,41,26],[37,23,41,27,"error"],[37,28,41,32],[37,29,41,33],[38,8,42,12,"unlisten"],[38,16,42,20],[38,17,42,21],[38,18,42,22],[39,6,43,8],[39,7,43,9],[40,6,44,8,"request"],[40,13,44,15],[40,14,44,16,"addEventListener"],[40,30,44,32],[40,31,44,33],[40,40,44,42],[40,42,44,44,"success"],[40,49,44,51],[40,50,44,52],[41,6,45,8,"request"],[41,13,45,15],[41,14,45,16,"addEventListener"],[41,30,45,32],[41,31,45,33],[41,38,45,40],[41,40,45,42,"error"],[41,45,45,47],[41,46,45,48],[42,4,46,4],[42,5,46,5],[42,6,46,6],[43,4,47,4,"promise"],[43,11,47,11],[43,12,48,9,"then"],[43,16,48,13],[43,17,48,15,"value"],[43,22,48,20],[43,26,48,25],[44,6,49,8],[45,6,50,8],[46,6,51,8],[46,10,51,12,"value"],[46,15,51,17],[46,27,51,29,"IDBCursor"],[46,36,51,38],[46,38,51,40],[47,8,52,12,"cursorRequestMap"],[47,24,52,28],[47,25,52,29,"set"],[47,28,52,32],[47,29,52,33,"value"],[47,34,52,38],[47,36,52,40,"request"],[47,43,52,47],[47,44,52,48],[48,6,53,8],[49,6,54,8],[50,4,55,4],[50,5,55,5],[50,6,55,6],[50,7,56,9,"catch"],[50,12,56,14],[50,13,56,15],[50,19,56,21],[50,20,56,23],[50,21,56,24],[50,22,56,25],[51,4,57,4],[52,4,58,4],[53,4,59,4,"reverseTransformCache"],[53,25,59,25],[53,26,59,26,"set"],[53,29,59,29],[53,30,59,30,"promise"],[53,37,59,37],[53,39,59,39,"request"],[53,46,59,46],[53,47,59,47],[54,4,60,4],[54,11,60,11,"promise"],[54,18,60,18],[55,2,61,0],[56,2,62,0],[56,11,62,9,"cacheDonePromiseForTransaction"],[56,41,62,39,"cacheDonePromiseForTransaction"],[56,42,62,40,"tx"],[56,44,62,42],[56,46,62,44],[57,4,63,4],[58,4,64,4],[58,8,64,8,"transactionDoneMap"],[58,26,64,26],[58,27,64,27,"has"],[58,30,64,30],[58,31,64,31,"tx"],[58,33,64,33],[58,34,64,34],[58,36,65,8],[59,4,66,4],[59,10,66,10,"done"],[59,14,66,14],[59,17,66,17],[59,21,66,21,"Promise"],[59,28,66,28],[59,29,66,29],[59,30,66,30,"resolve"],[59,37,66,37],[59,39,66,39,"reject"],[59,45,66,45],[59,50,66,50],[60,6,67,8],[60,12,67,14,"unlisten"],[60,20,67,22],[60,23,67,25,"unlisten"],[60,24,67,25],[60,29,67,31],[61,8,68,12,"tx"],[61,10,68,14],[61,11,68,15,"removeEventListener"],[61,30,68,34],[61,31,68,35],[61,41,68,45],[61,43,68,47,"complete"],[61,51,68,55],[61,52,68,56],[62,8,69,12,"tx"],[62,10,69,14],[62,11,69,15,"removeEventListener"],[62,30,69,34],[62,31,69,35],[62,38,69,42],[62,40,69,44,"error"],[62,45,69,49],[62,46,69,50],[63,8,70,12,"tx"],[63,10,70,14],[63,11,70,15,"removeEventListener"],[63,30,70,34],[63,31,70,35],[63,38,70,42],[63,40,70,44,"error"],[63,45,70,49],[63,46,70,50],[64,6,71,8],[64,7,71,9],[65,6,72,8],[65,12,72,14,"complete"],[65,20,72,22],[65,23,72,25,"complete"],[65,24,72,25],[65,29,72,31],[66,8,73,12,"resolve"],[66,15,73,19],[66,16,73,20],[66,17,73,21],[67,8,74,12,"unlisten"],[67,16,74,20],[67,17,74,21],[67,18,74,22],[68,6,75,8],[68,7,75,9],[69,6,76,8],[69,12,76,14,"error"],[69,17,76,19],[69,20,76,22,"error"],[69,21,76,22],[69,26,76,28],[70,8,77,12,"reject"],[70,14,77,18],[70,15,77,19,"tx"],[70,17,77,21],[70,18,77,22,"error"],[70,23,77,27],[70,27,77,31],[70,31,77,35,"DOMException"],[70,43,77,47],[70,44,77,48],[70,56,77,60],[70,58,77,62],[70,70,77,74],[70,71,77,75],[70,72,77,76],[71,8,78,12,"unlisten"],[71,16,78,20],[71,17,78,21],[71,18,78,22],[72,6,79,8],[72,7,79,9],[73,6,80,8,"tx"],[73,8,80,10],[73,9,80,11,"addEventListener"],[73,25,80,27],[73,26,80,28],[73,36,80,38],[73,38,80,40,"complete"],[73,46,80,48],[73,47,80,49],[74,6,81,8,"tx"],[74,8,81,10],[74,9,81,11,"addEventListener"],[74,25,81,27],[74,26,81,28],[74,33,81,35],[74,35,81,37,"error"],[74,40,81,42],[74,41,81,43],[75,6,82,8,"tx"],[75,8,82,10],[75,9,82,11,"addEventListener"],[75,25,82,27],[75,26,82,28],[75,33,82,35],[75,35,82,37,"error"],[75,40,82,42],[75,41,82,43],[76,4,83,4],[76,5,83,5],[76,6,83,6],[77,4,84,4],[78,4,85,4,"transactionDoneMap"],[78,22,85,22],[78,23,85,23,"set"],[78,26,85,26],[78,27,85,27,"tx"],[78,29,85,29],[78,31,85,31,"done"],[78,35,85,35],[78,36,85,36],[79,2,86,0],[80,2,87,0],[80,6,87,4,"idbProxyTraps"],[80,19,87,17],[80,22,87,20],[81,4,88,4,"get"],[81,7,88,7,"get"],[81,8,88,8,"target"],[81,14,88,14],[81,16,88,16,"prop"],[81,20,88,20],[81,22,88,22,"receiver"],[81,30,88,30],[81,32,88,32],[82,6,89,8],[82,10,89,12,"target"],[82,16,89,18],[82,28,89,30,"IDBTransaction"],[82,42,89,44],[82,44,89,46],[83,8,90,12],[84,8,91,12],[84,12,91,16,"prop"],[84,16,91,20],[84,21,91,25],[84,27,91,31],[84,29,92,16],[84,36,92,23,"transactionDoneMap"],[84,54,92,41],[84,55,92,42,"get"],[84,58,92,45],[84,59,92,46,"target"],[84,65,92,52],[84,66,92,53],[85,8,93,12],[86,8,94,12],[86,12,94,16,"prop"],[86,16,94,20],[86,21,94,25],[86,39,94,43],[86,41,94,45],[87,10,95,16],[87,17,95,23,"target"],[87,23,95,29],[87,24,95,30,"objectStoreNames"],[87,40,95,46],[87,44,95,50,"transactionStoreNamesMap"],[87,68,95,74],[87,69,95,75,"get"],[87,72,95,78],[87,73,95,79,"target"],[87,79,95,85],[87,80,95,86],[88,8,96,12],[89,8,97,12],[90,8,98,12],[90,12,98,16,"prop"],[90,16,98,20],[90,21,98,25],[90,28,98,32],[90,30,98,34],[91,10,99,16],[91,17,99,23,"receiver"],[91,25,99,31],[91,26,99,32,"objectStoreNames"],[91,42,99,48],[91,43,99,49],[91,44,99,50],[91,45,99,51],[91,48,100,22,"undefined"],[91,57,100,31],[91,60,101,22,"receiver"],[91,68,101,30],[91,69,101,31,"objectStore"],[91,80,101,42],[91,81,101,43,"receiver"],[91,89,101,51],[91,90,101,52,"objectStoreNames"],[91,106,101,68],[91,107,101,69],[91,108,101,70],[91,109,101,71],[91,110,101,72],[92,8,102,12],[93,6,103,8],[94,6,104,8],[95,6,105,8],[95,13,105,15,"wrap"],[95,17,105,19],[95,18,105,20,"target"],[95,24,105,26],[95,25,105,27,"prop"],[95,29,105,31],[95,30,105,32],[95,31,105,33],[96,4,106,4],[96,5,106,5],[97,4,107,4,"set"],[97,7,107,7,"set"],[97,8,107,8,"target"],[97,14,107,14],[97,16,107,16,"prop"],[97,20,107,20],[97,22,107,22,"value"],[97,27,107,27],[97,29,107,29],[98,6,108,8,"target"],[98,12,108,14],[98,13,108,15,"prop"],[98,17,108,19],[98,18,108,20],[98,21,108,23,"value"],[98,26,108,28],[99,6,109,8],[99,13,109,15],[99,17,109,19],[100,4,110,4],[100,5,110,5],[101,4,111,4,"has"],[101,7,111,7,"has"],[101,8,111,8,"target"],[101,14,111,14],[101,16,111,16,"prop"],[101,20,111,20],[101,22,111,22],[102,6,112,8],[102,10,112,12,"target"],[102,16,112,18],[102,28,112,30,"IDBTransaction"],[102,42,112,44],[102,47,113,13,"prop"],[102,51,113,17],[102,56,113,22],[102,62,113,28],[102,66,113,32,"prop"],[102,70,113,36],[102,75,113,41],[102,82,113,48],[102,83,113,49],[102,85,113,51],[103,8,114,12],[103,15,114,19],[103,19,114,23],[104,6,115,8],[105,6,116,8],[105,13,116,15,"prop"],[105,17,116,19],[105,21,116,23,"target"],[105,27,116,29],[106,4,117,4],[107,2,118,0],[107,3,118,1],[108,2,119,0],[108,11,119,9,"replaceTraps"],[108,23,119,21,"replaceTraps"],[108,24,119,22,"callback"],[108,32,119,30],[108,34,119,32],[109,4,120,4,"idbProxyTraps"],[109,17,120,17],[109,20,120,20,"callback"],[109,28,120,28],[109,29,120,29,"idbProxyTraps"],[109,42,120,42],[109,43,120,43],[110,2,121,0],[111,2,122,0],[111,11,122,9,"wrapFunction"],[111,23,122,21,"wrapFunction"],[111,24,122,22,"func"],[111,28,122,26],[111,30,122,28],[112,4,123,4],[113,4,124,4],[114,4,125,4],[115,4,126,4],[115,8,126,8,"func"],[115,12,126,12],[115,17,126,17,"IDBDatabase"],[115,28,126,28],[115,29,126,29,"prototype"],[115,38,126,38],[115,39,126,39,"transaction"],[115,50,126,50],[115,54,127,8],[115,56,127,10],[115,74,127,28],[115,78,127,32,"IDBTransaction"],[115,92,127,46],[115,93,127,47,"prototype"],[115,102,127,56],[115,103,127,57],[115,105,127,59],[116,6,128,8],[116,13,128,15],[116,23,128,25,"storeNames"],[116,33,128,35],[116,35,128,37],[116,38,128,40,"args"],[116,42,128,44],[116,44,128,46],[117,8,129,12],[117,14,129,18,"tx"],[117,16,129,20],[117,19,129,23,"func"],[117,23,129,27],[117,24,129,28,"call"],[117,28,129,32],[117,29,129,33,"unwrap"],[117,35,129,39],[117,36,129,40],[117,40,129,44],[117,41,129,45],[117,43,129,47,"storeNames"],[117,53,129,57],[117,55,129,59],[117,58,129,62,"args"],[117,62,129,66],[117,63,129,67],[118,8,130,12,"transactionStoreNamesMap"],[118,32,130,36],[118,33,130,37,"set"],[118,36,130,40],[118,37,130,41,"tx"],[118,39,130,43],[118,41,130,45,"storeNames"],[118,51,130,55],[118,52,130,56,"sort"],[118,56,130,60],[118,59,130,63,"storeNames"],[118,69,130,73],[118,70,130,74,"sort"],[118,74,130,78],[118,75,130,79],[118,76,130,80],[118,79,130,83],[118,80,130,84,"storeNames"],[118,90,130,94],[118,91,130,95],[118,92,130,96],[119,8,131,12],[119,15,131,19,"wrap"],[119,19,131,23],[119,20,131,24,"tx"],[119,22,131,26],[119,23,131,27],[120,6,132,8],[120,7,132,9],[121,4,133,4],[122,4,134,4],[123,4,135,4],[124,4,136,4],[125,4,137,4],[126,4,138,4],[127,4,139,4],[127,8,139,8,"getCursorAdvanceMethods"],[127,31,139,31],[127,32,139,32],[127,33,139,33],[127,34,139,34,"includes"],[127,42,139,42],[127,43,139,43,"func"],[127,47,139,47],[127,48,139,48],[127,50,139,50],[128,6,140,8],[128,13,140,15],[128,23,140,25],[128,26,140,28,"args"],[128,30,140,32],[128,32,140,34],[129,8,141,12],[130,8,142,12],[131,8,143,12,"func"],[131,12,143,16],[131,13,143,17,"apply"],[131,18,143,22],[131,19,143,23,"unwrap"],[131,25,143,29],[131,26,143,30],[131,30,143,34],[131,31,143,35],[131,33,143,37,"args"],[131,37,143,41],[131,38,143,42],[132,8,144,12],[132,15,144,19,"wrap"],[132,19,144,23],[132,20,144,24,"cursorRequestMap"],[132,36,144,40],[132,37,144,41,"get"],[132,40,144,44],[132,41,144,45],[132,45,144,49],[132,46,144,50],[132,47,144,51],[133,6,145,8],[133,7,145,9],[134,4,146,4],[135,4,147,4],[135,11,147,11],[135,21,147,21],[135,24,147,24,"args"],[135,28,147,28],[135,30,147,30],[136,6,148,8],[137,6,149,8],[138,6,150,8],[138,13,150,15,"wrap"],[138,17,150,19],[138,18,150,20,"func"],[138,22,150,24],[138,23,150,25,"apply"],[138,28,150,30],[138,29,150,31,"unwrap"],[138,35,150,37],[138,36,150,38],[138,40,150,42],[138,41,150,43],[138,43,150,45,"args"],[138,47,150,49],[138,48,150,50],[138,49,150,51],[139,4,151,4],[139,5,151,5],[140,2,152,0],[141,2,153,0],[141,11,153,9,"transformCachableValue"],[141,33,153,31,"transformCachableValue"],[141,34,153,32,"value"],[141,39,153,37],[141,41,153,39],[142,4,154,4],[142,8,154,8],[142,15,154,15,"value"],[142,20,154,20],[142,25,154,25],[142,35,154,35],[142,37,155,8],[142,44,155,15,"wrapFunction"],[142,56,155,27],[142,57,155,28,"value"],[142,62,155,33],[142,63,155,34],[143,4,156,4],[144,4,157,4],[145,4,158,4],[145,8,158,8,"value"],[145,13,158,13],[145,25,158,25,"IDBTransaction"],[145,39,158,39],[145,41,159,8,"cacheDonePromiseForTransaction"],[145,71,159,38],[145,72,159,39,"value"],[145,77,159,44],[145,78,159,45],[146,4,160,4],[146,8,160,8,"instanceOfAny"],[146,21,160,21],[146,22,160,22,"value"],[146,27,160,27],[146,29,160,29,"getIdbProxyableTypes"],[146,49,160,49],[146,50,160,50],[146,51,160,51],[146,52,160,52],[146,54,161,8],[146,61,161,15],[146,65,161,19,"Proxy"],[146,70,161,24],[146,71,161,25,"value"],[146,76,161,30],[146,78,161,32,"idbProxyTraps"],[146,91,161,45],[146,92,161,46],[147,4,162,4],[148,4,163,4],[148,11,163,11,"value"],[148,16,163,16],[149,2,164,0],[150,2,165,0],[150,11,165,9,"wrap"],[150,15,165,13,"wrap"],[150,16,165,14,"value"],[150,21,165,19],[150,23,165,21],[151,4,166,4],[152,4,167,4],[153,4,168,4],[153,8,168,8,"value"],[153,13,168,13],[153,25,168,25,"IDBRequest"],[153,35,168,35],[153,37,169,8],[153,44,169,15,"promisifyRequest"],[153,60,169,31],[153,61,169,32,"value"],[153,66,169,37],[153,67,169,38],[154,4,170,4],[155,4,171,4],[156,4,172,4],[156,8,172,8,"transformCache"],[156,22,172,22],[156,23,172,23,"has"],[156,26,172,26],[156,27,172,27,"value"],[156,32,172,32],[156,33,172,33],[156,35,173,8],[156,42,173,15,"transformCache"],[156,56,173,29],[156,57,173,30,"get"],[156,60,173,33],[156,61,173,34,"value"],[156,66,173,39],[156,67,173,40],[157,4,174,4],[157,10,174,10,"newValue"],[157,18,174,18],[157,21,174,21,"transformCachableValue"],[157,43,174,43],[157,44,174,44,"value"],[157,49,174,49],[157,50,174,50],[158,4,175,4],[159,4,176,4],[160,4,177,4],[160,8,177,8,"newValue"],[160,16,177,16],[160,21,177,21,"value"],[160,26,177,26],[160,28,177,28],[161,6,178,8,"transformCache"],[161,20,178,22],[161,21,178,23,"set"],[161,24,178,26],[161,25,178,27,"value"],[161,30,178,32],[161,32,178,34,"newValue"],[161,40,178,42],[161,41,178,43],[162,6,179,8,"reverseTransformCache"],[162,27,179,29],[162,28,179,30,"set"],[162,31,179,33],[162,32,179,34,"newValue"],[162,40,179,42],[162,42,179,44,"value"],[162,47,179,49],[162,48,179,50],[163,4,180,4],[164,4,181,4],[164,11,181,11,"newValue"],[164,19,181,19],[165,2,182,0],[166,2,183,0],[166,8,183,6,"unwrap"],[166,14,183,12],[166,17,183,16,"value"],[166,22,183,21],[166,26,183,26,"reverseTransformCache"],[166,47,183,47],[166,48,183,48,"get"],[166,51,183,51],[166,52,183,52,"value"],[166,57,183,57],[166,58,183,58],[167,2,183,59,"exports"],[167,9,183,59],[167,10,183,59,"u"],[167,11,183,59],[167,14,183,59,"unwrap"],[167,20,183,59],[168,0,183,59],[168,3]],"functionMap":{"names":["<global>","instanceOfAny","constructors.some$argument_0","getIdbProxyableTypes","getCursorAdvanceMethods","promisifyRequest","Promise$argument_0","unlisten","success","error","promise.then$argument_0","promise.then._catch$argument_0","cacheDonePromiseForTransaction","complete","idbProxyTraps.get","idbProxyTraps.set","idbProxyTraps.has","replaceTraps","wrapFunction","<anonymous>","transformCachableValue","wrap","unwrap"],"mappings":"AAA,sBC,4CC,0BD,CD;AGK;CHS;AIE;CJO;AKM;gCCC;yBCC;SDG;wBEC;SFG;sBGC;SHG;KDG;cKE;KLO;eMC,SN;CLK;AYC;6BNI;yBCC;SDI;yBOC;SPG;sBGC;SHG;KMI;CZG;IcE;KdkB;IeC;KfG;IgBC;KhBM;AiBE;CjBE;AkBC;eCM;SDI;eCQ;SDK;WCE;KDI;ClBC;AoBC;CpBW;AqBC;CrBiB;esBC,2CtB"}},"type":"js/module"}]}