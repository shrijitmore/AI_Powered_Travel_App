{"dependencies":[{"name":"./oneof","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":114},"end":{"line":6,"column":32,"index":132}}],"key":"6NmAiHUhkqvb6p1LAZJI/y3pbuA=","exportNames":["*"]}},{"name":"./util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":11,"index":145},"end":{"line":7,"column":28,"index":162}}],"key":"hA8WsniBZrUJ/dmBZgrNdZcEmJ8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  module.exports = ReflectionObject;\n  ReflectionObject.className = \"ReflectionObject\";\n  const OneOf = require(_dependencyMap[0], \"./oneof\");\n  var util = require(_dependencyMap[1], \"./util\");\n  var Root; // cyclic\n\n  /* eslint-disable no-warning-comments */\n  // TODO: Replace with embedded proto.\n  var editions2023Defaults = {\n    enum_type: \"OPEN\",\n    field_presence: \"EXPLICIT\",\n    json_format: \"ALLOW\",\n    message_encoding: \"LENGTH_PREFIXED\",\n    repeated_field_encoding: \"PACKED\",\n    utf8_validation: \"VERIFY\"\n  };\n  var proto2Defaults = {\n    enum_type: \"CLOSED\",\n    field_presence: \"EXPLICIT\",\n    json_format: \"LEGACY_BEST_EFFORT\",\n    message_encoding: \"LENGTH_PREFIXED\",\n    repeated_field_encoding: \"EXPANDED\",\n    utf8_validation: \"NONE\"\n  };\n  var proto3Defaults = {\n    enum_type: \"OPEN\",\n    field_presence: \"IMPLICIT\",\n    json_format: \"ALLOW\",\n    message_encoding: \"LENGTH_PREFIXED\",\n    repeated_field_encoding: \"PACKED\",\n    utf8_validation: \"VERIFY\"\n  };\n\n  /**\n   * Constructs a new reflection object instance.\n   * @classdesc Base class of all reflection objects.\n   * @constructor\n   * @param {string} name Object name\n   * @param {Object.<string,*>} [options] Declared options\n   * @abstract\n   */\n  function ReflectionObject(name, options) {\n    if (!util.isString(name)) throw TypeError(\"name must be a string\");\n    if (options && !util.isObject(options)) throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * The edition specified for this object.  Only relevant for top-level objects.\n     * @type {string}\n     * @private\n     */\n    this._edition = null;\n\n    /**\n     * The default edition to use for this object if none is specified.  For legacy reasons,\n     * this is proto2 except in the JSON parsing case where it was proto3.\n     * @type {string}\n     * @private\n     */\n    this._defaultEdition = \"proto2\";\n\n    /**\n     * Resolved Features.\n     * @type {object}\n     * @private\n     */\n    this._features = {};\n\n    /**\n     * Whether or not features have been resolved.\n     * @type {boolean}\n     * @private\n     */\n    this._featuresResolved = false;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n  }\n  Object.defineProperties(ReflectionObject.prototype, {\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n      get: function () {\n        var ptr = this;\n        while (ptr.parent !== null) ptr = ptr.parent;\n        return ptr;\n      }\n    },\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n      get: function () {\n        var path = [this.name],\n          ptr = this.parent;\n        while (ptr) {\n          path.unshift(ptr.name);\n          ptr = ptr.parent;\n        }\n        return path.join(\".\");\n      }\n    }\n  });\n\n  /**\n   * Converts this reflection object to its descriptor representation.\n   * @returns {Object.<string,*>} Descriptor\n   * @abstract\n   */\n  ReflectionObject.prototype.toJSON = /* istanbul ignore next */function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n  };\n\n  /**\n   * Called when this object is added to a parent.\n   * @param {ReflectionObject} parent Parent added to\n   * @returns {undefined}\n   */\n  ReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent) this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root) root._handleAdd(this);\n  };\n\n  /**\n   * Called when this object is removed from a parent.\n   * @param {ReflectionObject} parent Parent removed from\n   * @returns {undefined}\n   */\n  ReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root) root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n  };\n\n  /**\n   * Resolves this objects type references.\n   * @returns {ReflectionObject} `this`\n   */\n  ReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved) return this;\n    if (this.root instanceof Root) this.resolved = true; // only if part of a root\n    return this;\n  };\n\n  /**\n   * Resolves this objects editions features.\n   * @param {string} edition The edition we're currently resolving for.\n   * @returns {ReflectionObject} `this`\n   */\n  ReflectionObject.prototype._resolveFeaturesRecursive = function _resolveFeaturesRecursive(edition) {\n    return this._resolveFeatures(this._edition || edition);\n  };\n\n  /**\n   * Resolves child features from parent features\n   * @param {string} edition The edition we're currently resolving for.\n   * @returns {undefined}\n   */\n  ReflectionObject.prototype._resolveFeatures = function _resolveFeatures(edition) {\n    if (this._featuresResolved) {\n      return;\n    }\n    var defaults = {};\n\n    /* istanbul ignore if */\n    if (!edition) {\n      throw new Error(\"Unknown edition for \" + this.fullName);\n    }\n    var protoFeatures = Object.assign(this.options ? Object.assign({}, this.options.features) : {}, this._inferLegacyProtoFeatures(edition));\n    if (this._edition) {\n      // For a namespace marked with a specific edition, reset defaults.\n      /* istanbul ignore else */\n      if (edition === \"proto2\") {\n        defaults = Object.assign({}, proto2Defaults);\n      } else if (edition === \"proto3\") {\n        defaults = Object.assign({}, proto3Defaults);\n      } else if (edition === \"2023\") {\n        defaults = Object.assign({}, editions2023Defaults);\n      } else {\n        throw new Error(\"Unknown edition: \" + edition);\n      }\n      this._features = Object.assign(defaults, protoFeatures || {});\n      this._featuresResolved = true;\n      return;\n    }\n\n    // fields in Oneofs aren't actually children of them, so we have to\n    // special-case it\n    /* istanbul ignore else */\n    if (this.partOf instanceof OneOf) {\n      var lexicalParentFeaturesCopy = Object.assign({}, this.partOf._features);\n      this._features = Object.assign(lexicalParentFeaturesCopy, protoFeatures || {});\n    } else if (this.declaringField) {\n      // Skip feature resolution of sister fields.\n    } else if (this.parent) {\n      var parentFeaturesCopy = Object.assign({}, this.parent._features);\n      this._features = Object.assign(parentFeaturesCopy, protoFeatures || {});\n    } else {\n      throw new Error(\"Unable to find a parent for \" + this.fullName);\n    }\n    if (this.extensionField) {\n      // Sister fields should have the same features as their extensions.\n      this.extensionField._features = this._features;\n    }\n    this._featuresResolved = true;\n  };\n\n  /**\n   * Infers features from legacy syntax that may have been specified differently.\n   * in older editions.\n   * @param {string|undefined} edition The edition this proto is on, or undefined if pre-editions\n   * @returns {object} The feature values to override\n   */\n  ReflectionObject.prototype._inferLegacyProtoFeatures = function _inferLegacyProtoFeatures(/*edition*/\n  ) {\n    return {};\n  };\n\n  /**\n   * Gets an option value.\n   * @param {string} name Option name\n   * @returns {*} Option value or `undefined` if not set\n   */\n  ReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options) return this.options[name];\n    return undefined;\n  };\n\n  /**\n   * Sets an option.\n   * @param {string} name Option name\n   * @param {*} value Option value\n   * @param {boolean|undefined} [ifNotSet] Sets the option only if it isn't currently set\n   * @returns {ReflectionObject} `this`\n   */\n  ReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!this.options) this.options = {};\n    if (/^features\\./.test(name)) {\n      util.setProperty(this.options, name, value, ifNotSet);\n    } else if (!ifNotSet || this.options[name] === undefined) {\n      if (this.getOption(name) !== value) this.resolved = false;\n      this.options[name] = value;\n    }\n    return this;\n  };\n\n  /**\n   * Sets a parsed option.\n   * @param {string} name parsed Option name\n   * @param {*} value Option value\n   * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n   * @returns {ReflectionObject} `this`\n   */\n  ReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n      this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n      // If setting a sub property of an option then try to merge it\n      // with an existing option\n      var opt = parsedOptions.find(function (opt) {\n        return Object.prototype.hasOwnProperty.call(opt, name);\n      });\n      if (opt) {\n        // If we found an existing option - just merge the property value\n        // (If it's a feature, will just write over)\n        var newValue = opt[name];\n        util.setProperty(newValue, propName, value);\n      } else {\n        // otherwise, create a new option, set its property and add it to the list\n        opt = {};\n        opt[name] = util.setProperty({}, propName, value);\n        parsedOptions.push(opt);\n      }\n    } else {\n      // Always create a new option when setting the value of the option itself\n      var newOpt = {};\n      newOpt[name] = value;\n      parsedOptions.push(newOpt);\n    }\n    return this;\n  };\n\n  /**\n   * Sets multiple options.\n   * @param {Object.<string,*>} options Options to set\n   * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n   * @returns {ReflectionObject} `this`\n   */\n  ReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options) for (var keys = Object.keys(options), i = 0; i < keys.length; ++i) this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n  };\n\n  /**\n   * Converts this instance to its string representation.\n   * @returns {string} Class name[, space, full name]\n   */\n  ReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n      fullName = this.fullName;\n    if (fullName.length) return className + \" \" + fullName;\n    return className;\n  };\n\n  /**\n   * Converts the edition this object is pinned to for JSON format.\n   * @returns {string|undefined} The edition string for JSON representation\n   */\n  ReflectionObject.prototype._editionToJSON = function _editionToJSON() {\n    if (!this._edition || this._edition === \"proto3\") {\n      // Avoid emitting proto3 since we need to default to it for backwards\n      // compatibility anyway.\n      return undefined;\n    }\n    return this._edition;\n  };\n\n  // Sets up cyclic dependencies (called in index-light)\n  ReflectionObject._configure = function (Root_) {\n    Root = Root_;\n  };\n});","lineCount":376,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"module"],[4,8,2,6],[4,9,2,7,"exports"],[4,16,2,14],[4,19,2,17,"ReflectionObject"],[4,35,2,33],[5,2,4,0,"ReflectionObject"],[5,18,4,16],[5,19,4,17,"className"],[5,28,4,26],[5,31,4,29],[5,49,4,47],[6,2,6,0],[6,8,6,6,"OneOf"],[6,13,6,11],[6,16,6,14,"require"],[6,23,6,21],[6,24,6,21,"_dependencyMap"],[6,38,6,21],[6,52,6,31],[6,53,6,32],[7,2,7,0],[7,6,7,4,"util"],[7,10,7,8],[7,13,7,11,"require"],[7,20,7,18],[7,21,7,18,"_dependencyMap"],[7,35,7,18],[7,48,7,27],[7,49,7,28],[8,2,9,0],[8,6,9,4,"Root"],[8,10,9,8],[8,11,9,9],[8,12,9,10],[10,2,11,0],[11,2,12,0],[12,2,13,0],[12,6,13,4,"editions2023Defaults"],[12,26,13,24],[12,29,13,27],[13,4,13,28,"enum_type"],[13,13,13,37],[13,15,13,39],[13,21,13,45],[14,4,13,47,"field_presence"],[14,18,13,61],[14,20,13,63],[14,30,13,73],[15,4,13,75,"json_format"],[15,15,13,86],[15,17,13,88],[15,24,13,95],[16,4,13,97,"message_encoding"],[16,20,13,113],[16,22,13,115],[16,39,13,132],[17,4,13,134,"repeated_field_encoding"],[17,27,13,157],[17,29,13,159],[17,37,13,167],[18,4,13,169,"utf8_validation"],[18,19,13,184],[18,21,13,186],[19,2,13,194],[19,3,13,195],[20,2,14,0],[20,6,14,4,"proto2Defaults"],[20,20,14,18],[20,23,14,21],[21,4,14,22,"enum_type"],[21,13,14,31],[21,15,14,33],[21,23,14,41],[22,4,14,43,"field_presence"],[22,18,14,57],[22,20,14,59],[22,30,14,69],[23,4,14,71,"json_format"],[23,15,14,82],[23,17,14,84],[23,37,14,104],[24,4,14,106,"message_encoding"],[24,20,14,122],[24,22,14,124],[24,39,14,141],[25,4,14,143,"repeated_field_encoding"],[25,27,14,166],[25,29,14,168],[25,39,14,178],[26,4,14,180,"utf8_validation"],[26,19,14,195],[26,21,14,197],[27,2,14,203],[27,3,14,204],[28,2,15,0],[28,6,15,4,"proto3Defaults"],[28,20,15,18],[28,23,15,21],[29,4,15,22,"enum_type"],[29,13,15,31],[29,15,15,33],[29,21,15,39],[30,4,15,41,"field_presence"],[30,18,15,55],[30,20,15,57],[30,30,15,67],[31,4,15,69,"json_format"],[31,15,15,80],[31,17,15,82],[31,24,15,89],[32,4,15,91,"message_encoding"],[32,20,15,107],[32,22,15,109],[32,39,15,126],[33,4,15,128,"repeated_field_encoding"],[33,27,15,151],[33,29,15,153],[33,37,15,161],[34,4,15,163,"utf8_validation"],[34,19,15,178],[34,21,15,180],[35,2,15,188],[35,3,15,189],[37,2,17,0],[38,0,18,0],[39,0,19,0],[40,0,20,0],[41,0,21,0],[42,0,22,0],[43,0,23,0],[44,0,24,0],[45,2,25,0],[45,11,25,9,"ReflectionObject"],[45,27,25,25,"ReflectionObject"],[45,28,25,26,"name"],[45,32,25,30],[45,34,25,32,"options"],[45,41,25,39],[45,43,25,41],[46,4,27,4],[46,8,27,8],[46,9,27,9,"util"],[46,13,27,13],[46,14,27,14,"isString"],[46,22,27,22],[46,23,27,23,"name"],[46,27,27,27],[46,28,27,28],[46,30,28,8],[46,36,28,14,"TypeError"],[46,45,28,23],[46,46,28,24],[46,69,28,47],[46,70,28,48],[47,4,30,4],[47,8,30,8,"options"],[47,15,30,15],[47,19,30,19],[47,20,30,20,"util"],[47,24,30,24],[47,25,30,25,"isObject"],[47,33,30,33],[47,34,30,34,"options"],[47,41,30,41],[47,42,30,42],[47,44,31,8],[47,50,31,14,"TypeError"],[47,59,31,23],[47,60,31,24],[47,87,31,51],[47,88,31,52],[49,4,33,4],[50,0,34,0],[51,0,35,0],[52,0,36,0],[53,4,37,4],[53,8,37,8],[53,9,37,9,"options"],[53,16,37,16],[53,19,37,19,"options"],[53,26,37,26],[53,27,37,27],[53,28,37,28],[55,4,39,4],[56,0,40,0],[57,0,41,0],[58,0,42,0],[59,4,43,4],[59,8,43,8],[59,9,43,9,"parsedOptions"],[59,22,43,22],[59,25,43,25],[59,29,43,29],[61,4,45,4],[62,0,46,0],[63,0,47,0],[64,0,48,0],[65,4,49,4],[65,8,49,8],[65,9,49,9,"name"],[65,13,49,13],[65,16,49,16,"name"],[65,20,49,20],[67,4,51,4],[68,0,52,0],[69,0,53,0],[70,0,54,0],[71,0,55,0],[72,4,56,4],[72,8,56,8],[72,9,56,9,"_edition"],[72,17,56,17],[72,20,56,20],[72,24,56,24],[74,4,58,4],[75,0,59,0],[76,0,60,0],[77,0,61,0],[78,0,62,0],[79,0,63,0],[80,4,64,4],[80,8,64,8],[80,9,64,9,"_defaultEdition"],[80,24,64,24],[80,27,64,27],[80,35,64,35],[82,4,66,4],[83,0,67,0],[84,0,68,0],[85,0,69,0],[86,0,70,0],[87,4,71,4],[87,8,71,8],[87,9,71,9,"_features"],[87,18,71,18],[87,21,71,21],[87,22,71,22],[87,23,71,23],[89,4,73,4],[90,0,74,0],[91,0,75,0],[92,0,76,0],[93,0,77,0],[94,4,78,4],[94,8,78,8],[94,9,78,9,"_featuresResolved"],[94,26,78,26],[94,29,78,29],[94,34,78,34],[96,4,80,4],[97,0,81,0],[98,0,82,0],[99,0,83,0],[100,4,84,4],[100,8,84,8],[100,9,84,9,"parent"],[100,15,84,15],[100,18,84,18],[100,22,84,22],[102,4,86,4],[103,0,87,0],[104,0,88,0],[105,0,89,0],[106,4,90,4],[106,8,90,8],[106,9,90,9,"resolved"],[106,17,90,17],[106,20,90,20],[106,25,90,25],[108,4,92,4],[109,0,93,0],[110,0,94,0],[111,0,95,0],[112,4,96,4],[112,8,96,8],[112,9,96,9,"comment"],[112,16,96,16],[112,19,96,19],[112,23,96,23],[114,4,98,4],[115,0,99,0],[116,0,100,0],[117,0,101,0],[118,4,102,4],[118,8,102,8],[118,9,102,9,"filename"],[118,17,102,17],[118,20,102,20],[118,24,102,24],[119,2,103,0],[120,2,105,0,"Object"],[120,8,105,6],[120,9,105,7,"defineProperties"],[120,25,105,23],[120,26,105,24,"ReflectionObject"],[120,42,105,40],[120,43,105,41,"prototype"],[120,52,105,50],[120,54,105,52],[121,4,107,4],[122,0,108,0],[123,0,109,0],[124,0,110,0],[125,0,111,0],[126,0,112,0],[127,4,113,4,"root"],[127,8,113,8],[127,10,113,10],[128,6,114,8,"get"],[128,9,114,11],[128,11,114,13],[128,20,114,13,"get"],[128,21,114,13],[128,23,114,24],[129,8,115,12],[129,12,115,16,"ptr"],[129,15,115,19],[129,18,115,22],[129,22,115,26],[130,8,116,12],[130,15,116,19,"ptr"],[130,18,116,22],[130,19,116,23,"parent"],[130,25,116,29],[130,30,116,34],[130,34,116,38],[130,36,117,16,"ptr"],[130,39,117,19],[130,42,117,22,"ptr"],[130,45,117,25],[130,46,117,26,"parent"],[130,52,117,32],[131,8,118,12],[131,15,118,19,"ptr"],[131,18,118,22],[132,6,119,8],[133,4,120,4],[133,5,120,5],[134,4,122,4],[135,0,123,0],[136,0,124,0],[137,0,125,0],[138,0,126,0],[139,0,127,0],[140,4,128,4,"fullName"],[140,12,128,12],[140,14,128,14],[141,6,129,8,"get"],[141,9,129,11],[141,11,129,13],[141,20,129,13,"get"],[141,21,129,13],[141,23,129,24],[142,8,130,12],[142,12,130,16,"path"],[142,16,130,20],[142,19,130,23],[142,20,130,25],[142,24,130,29],[142,25,130,30,"name"],[142,29,130,34],[142,30,130,36],[143,10,131,16,"ptr"],[143,13,131,19],[143,16,131,22],[143,20,131,26],[143,21,131,27,"parent"],[143,27,131,33],[144,8,132,12],[144,15,132,19,"ptr"],[144,18,132,22],[144,20,132,24],[145,10,133,16,"path"],[145,14,133,20],[145,15,133,21,"unshift"],[145,22,133,28],[145,23,133,29,"ptr"],[145,26,133,32],[145,27,133,33,"name"],[145,31,133,37],[145,32,133,38],[146,10,134,16,"ptr"],[146,13,134,19],[146,16,134,22,"ptr"],[146,19,134,25],[146,20,134,26,"parent"],[146,26,134,32],[147,8,135,12],[148,8,136,12],[148,15,136,19,"path"],[148,19,136,23],[148,20,136,24,"join"],[148,24,136,28],[148,25,136,29],[148,28,136,32],[148,29,136,33],[149,6,137,8],[150,4,138,4],[151,2,139,0],[151,3,139,1],[151,4,139,2],[153,2,141,0],[154,0,142,0],[155,0,143,0],[156,0,144,0],[157,0,145,0],[158,2,146,0,"ReflectionObject"],[158,18,146,16],[158,19,146,17,"prototype"],[158,28,146,26],[158,29,146,27,"toJSON"],[158,35,146,33],[158,38,146,36],[158,64,146,63],[158,73,146,72,"toJSON"],[158,79,146,78,"toJSON"],[158,80,146,78],[158,82,146,81],[159,4,147,4],[159,10,147,10,"Error"],[159,15,147,15],[159,16,147,16],[159,17,147,17],[159,18,147,18],[159,19,147,19],[160,2,148,0],[160,3,148,1],[162,2,150,0],[163,0,151,0],[164,0,152,0],[165,0,153,0],[166,0,154,0],[167,2,155,0,"ReflectionObject"],[167,18,155,16],[167,19,155,17,"prototype"],[167,28,155,26],[167,29,155,27,"onAdd"],[167,34,155,32],[167,37,155,35],[167,46,155,44,"onAdd"],[167,51,155,49,"onAdd"],[167,52,155,50,"parent"],[167,58,155,56],[167,60,155,58],[168,4,156,4],[168,8,156,8],[168,12,156,12],[168,13,156,13,"parent"],[168,19,156,19],[168,23,156,23],[168,27,156,27],[168,28,156,28,"parent"],[168,34,156,34],[168,39,156,39,"parent"],[168,45,156,45],[168,47,157,8],[168,51,157,12],[168,52,157,13,"parent"],[168,58,157,19],[168,59,157,20,"remove"],[168,65,157,26],[168,66,157,27],[168,70,157,31],[168,71,157,32],[169,4,158,4],[169,8,158,8],[169,9,158,9,"parent"],[169,15,158,15],[169,18,158,18,"parent"],[169,24,158,24],[170,4,159,4],[170,8,159,8],[170,9,159,9,"resolved"],[170,17,159,17],[170,20,159,20],[170,25,159,25],[171,4,160,4],[171,8,160,8,"root"],[171,12,160,12],[171,15,160,15,"parent"],[171,21,160,21],[171,22,160,22,"root"],[171,26,160,26],[172,4,161,4],[172,8,161,8,"root"],[172,12,161,12],[172,24,161,24,"Root"],[172,28,161,28],[172,30,162,8,"root"],[172,34,162,12],[172,35,162,13,"_handleAdd"],[172,45,162,23],[172,46,162,24],[172,50,162,28],[172,51,162,29],[173,2,163,0],[173,3,163,1],[175,2,165,0],[176,0,166,0],[177,0,167,0],[178,0,168,0],[179,0,169,0],[180,2,170,0,"ReflectionObject"],[180,18,170,16],[180,19,170,17,"prototype"],[180,28,170,26],[180,29,170,27,"onRemove"],[180,37,170,35],[180,40,170,38],[180,49,170,47,"onRemove"],[180,57,170,55,"onRemove"],[180,58,170,56,"parent"],[180,64,170,62],[180,66,170,64],[181,4,171,4],[181,8,171,8,"root"],[181,12,171,12],[181,15,171,15,"parent"],[181,21,171,21],[181,22,171,22,"root"],[181,26,171,26],[182,4,172,4],[182,8,172,8,"root"],[182,12,172,12],[182,24,172,24,"Root"],[182,28,172,28],[182,30,173,8,"root"],[182,34,173,12],[182,35,173,13,"_handleRemove"],[182,48,173,26],[182,49,173,27],[182,53,173,31],[182,54,173,32],[183,4,174,4],[183,8,174,8],[183,9,174,9,"parent"],[183,15,174,15],[183,18,174,18],[183,22,174,22],[184,4,175,4],[184,8,175,8],[184,9,175,9,"resolved"],[184,17,175,17],[184,20,175,20],[184,25,175,25],[185,2,176,0],[185,3,176,1],[187,2,178,0],[188,0,179,0],[189,0,180,0],[190,0,181,0],[191,2,182,0,"ReflectionObject"],[191,18,182,16],[191,19,182,17,"prototype"],[191,28,182,26],[191,29,182,27,"resolve"],[191,36,182,34],[191,39,182,37],[191,48,182,46,"resolve"],[191,55,182,53,"resolve"],[191,56,182,53],[191,58,182,56],[192,4,183,4],[192,8,183,8],[192,12,183,12],[192,13,183,13,"resolved"],[192,21,183,21],[192,23,184,8],[192,30,184,15],[192,34,184,19],[193,4,185,4],[193,8,185,8],[193,12,185,12],[193,13,185,13,"root"],[193,17,185,17],[193,29,185,29,"Root"],[193,33,185,33],[193,35,186,8],[193,39,186,12],[193,40,186,13,"resolved"],[193,48,186,21],[193,51,186,24],[193,55,186,28],[193,56,186,29],[193,57,186,30],[194,4,187,4],[194,11,187,11],[194,15,187,15],[195,2,188,0],[195,3,188,1],[197,2,190,0],[198,0,191,0],[199,0,192,0],[200,0,193,0],[201,0,194,0],[202,2,195,0,"ReflectionObject"],[202,18,195,16],[202,19,195,17,"prototype"],[202,28,195,26],[202,29,195,27,"_resolveFeaturesRecursive"],[202,54,195,52],[202,57,195,55],[202,66,195,64,"_resolveFeaturesRecursive"],[202,91,195,89,"_resolveFeaturesRecursive"],[202,92,195,90,"edition"],[202,99,195,97],[202,101,195,99],[203,4,196,4],[203,11,196,11],[203,15,196,15],[203,16,196,16,"_resolveFeatures"],[203,32,196,32],[203,33,196,33],[203,37,196,37],[203,38,196,38,"_edition"],[203,46,196,46],[203,50,196,50,"edition"],[203,57,196,57],[203,58,196,58],[204,2,197,0],[204,3,197,1],[206,2,199,0],[207,0,200,0],[208,0,201,0],[209,0,202,0],[210,0,203,0],[211,2,204,0,"ReflectionObject"],[211,18,204,16],[211,19,204,17,"prototype"],[211,28,204,26],[211,29,204,27,"_resolveFeatures"],[211,45,204,43],[211,48,204,46],[211,57,204,55,"_resolveFeatures"],[211,73,204,71,"_resolveFeatures"],[211,74,204,72,"edition"],[211,81,204,79],[211,83,204,81],[212,4,205,4],[212,8,205,8],[212,12,205,12],[212,13,205,13,"_featuresResolved"],[212,30,205,30],[212,32,205,32],[213,6,206,8],[214,4,207,4],[215,4,209,4],[215,8,209,8,"defaults"],[215,16,209,16],[215,19,209,19],[215,20,209,20],[215,21,209,21],[217,4,211,4],[218,4,212,4],[218,8,212,8],[218,9,212,9,"edition"],[218,16,212,16],[218,18,212,18],[219,6,213,8],[219,12,213,14],[219,16,213,18,"Error"],[219,21,213,23],[219,22,213,24],[219,44,213,46],[219,47,213,49],[219,51,213,53],[219,52,213,54,"fullName"],[219,60,213,62],[219,61,213,63],[220,4,214,4],[221,4,216,4],[221,8,216,8,"protoFeatures"],[221,21,216,21],[221,24,216,24,"Object"],[221,30,216,30],[221,31,216,31,"assign"],[221,37,216,37],[221,38,216,38],[221,42,216,42],[221,43,216,43,"options"],[221,50,216,50],[221,53,216,53,"Object"],[221,59,216,59],[221,60,216,60,"assign"],[221,66,216,66],[221,67,216,67],[221,68,216,68],[221,69,216,69],[221,71,216,72],[221,75,216,76],[221,76,216,77,"options"],[221,83,216,84],[221,84,216,85,"features"],[221,92,216,93],[221,93,216,94],[221,96,216,97],[221,97,216,98],[221,98,216,99],[221,100,217,8],[221,104,217,12],[221,105,217,13,"_inferLegacyProtoFeatures"],[221,130,217,38],[221,131,217,39,"edition"],[221,138,217,46],[221,139,217,47],[221,140,217,48],[222,4,219,4],[222,8,219,8],[222,12,219,12],[222,13,219,13,"_edition"],[222,21,219,21],[222,23,219,23],[223,6,220,8],[224,6,221,8],[225,6,222,8],[225,10,222,12,"edition"],[225,17,222,19],[225,22,222,24],[225,30,222,32],[225,32,222,34],[226,8,223,12,"defaults"],[226,16,223,20],[226,19,223,23,"Object"],[226,25,223,29],[226,26,223,30,"assign"],[226,32,223,36],[226,33,223,37],[226,34,223,38],[226,35,223,39],[226,37,223,41,"proto2Defaults"],[226,51,223,55],[226,52,223,56],[227,6,224,8],[227,7,224,9],[227,13,224,15],[227,17,224,19,"edition"],[227,24,224,26],[227,29,224,31],[227,37,224,39],[227,39,224,41],[228,8,225,12,"defaults"],[228,16,225,20],[228,19,225,23,"Object"],[228,25,225,29],[228,26,225,30,"assign"],[228,32,225,36],[228,33,225,37],[228,34,225,38],[228,35,225,39],[228,37,225,41,"proto3Defaults"],[228,51,225,55],[228,52,225,56],[229,6,226,8],[229,7,226,9],[229,13,226,15],[229,17,226,19,"edition"],[229,24,226,26],[229,29,226,31],[229,35,226,37],[229,37,226,39],[230,8,227,12,"defaults"],[230,16,227,20],[230,19,227,23,"Object"],[230,25,227,29],[230,26,227,30,"assign"],[230,32,227,36],[230,33,227,37],[230,34,227,38],[230,35,227,39],[230,37,227,41,"editions2023Defaults"],[230,57,227,61],[230,58,227,62],[231,6,228,8],[231,7,228,9],[231,13,228,15],[232,8,229,12],[232,14,229,18],[232,18,229,22,"Error"],[232,23,229,27],[232,24,229,28],[232,43,229,47],[232,46,229,50,"edition"],[232,53,229,57],[232,54,229,58],[233,6,230,8],[234,6,231,8],[234,10,231,12],[234,11,231,13,"_features"],[234,20,231,22],[234,23,231,25,"Object"],[234,29,231,31],[234,30,231,32,"assign"],[234,36,231,38],[234,37,231,39,"defaults"],[234,45,231,47],[234,47,231,49,"protoFeatures"],[234,60,231,62],[234,64,231,66],[234,65,231,67],[234,66,231,68],[234,67,231,69],[235,6,232,8],[235,10,232,12],[235,11,232,13,"_featuresResolved"],[235,28,232,30],[235,31,232,33],[235,35,232,37],[236,6,233,8],[237,4,234,4],[239,4,236,4],[240,4,237,4],[241,4,238,4],[242,4,239,4],[242,8,239,8],[242,12,239,12],[242,13,239,13,"partOf"],[242,19,239,19],[242,31,239,31,"OneOf"],[242,36,239,36],[242,38,239,38],[243,6,240,8],[243,10,240,12,"lexicalParentFeaturesCopy"],[243,35,240,37],[243,38,240,40,"Object"],[243,44,240,46],[243,45,240,47,"assign"],[243,51,240,53],[243,52,240,54],[243,53,240,55],[243,54,240,56],[243,56,240,58],[243,60,240,62],[243,61,240,63,"partOf"],[243,67,240,69],[243,68,240,70,"_features"],[243,77,240,79],[243,78,240,80],[244,6,241,8],[244,10,241,12],[244,11,241,13,"_features"],[244,20,241,22],[244,23,241,25,"Object"],[244,29,241,31],[244,30,241,32,"assign"],[244,36,241,38],[244,37,241,39,"lexicalParentFeaturesCopy"],[244,62,241,64],[244,64,241,66,"protoFeatures"],[244,77,241,79],[244,81,241,83],[244,82,241,84],[244,83,241,85],[244,84,241,86],[245,4,242,4],[245,5,242,5],[245,11,242,11],[245,15,242,15],[245,19,242,19],[245,20,242,20,"declaringField"],[245,34,242,34],[245,36,242,36],[246,6,243,8],[247,4,243,8],[247,5,244,5],[247,11,244,11],[247,15,244,15],[247,19,244,19],[247,20,244,20,"parent"],[247,26,244,26],[247,28,244,28],[248,6,245,8],[248,10,245,12,"parentFeaturesCopy"],[248,28,245,30],[248,31,245,33,"Object"],[248,37,245,39],[248,38,245,40,"assign"],[248,44,245,46],[248,45,245,47],[248,46,245,48],[248,47,245,49],[248,49,245,51],[248,53,245,55],[248,54,245,56,"parent"],[248,60,245,62],[248,61,245,63,"_features"],[248,70,245,72],[248,71,245,73],[249,6,246,8],[249,10,246,12],[249,11,246,13,"_features"],[249,20,246,22],[249,23,246,25,"Object"],[249,29,246,31],[249,30,246,32,"assign"],[249,36,246,38],[249,37,246,39,"parentFeaturesCopy"],[249,55,246,57],[249,57,246,59,"protoFeatures"],[249,70,246,72],[249,74,246,76],[249,75,246,77],[249,76,246,78],[249,77,246,79],[250,4,247,4],[250,5,247,5],[250,11,247,11],[251,6,248,8],[251,12,248,14],[251,16,248,18,"Error"],[251,21,248,23],[251,22,248,24],[251,52,248,54],[251,55,248,57],[251,59,248,61],[251,60,248,62,"fullName"],[251,68,248,70],[251,69,248,71],[252,4,249,4],[253,4,250,4],[253,8,250,8],[253,12,250,12],[253,13,250,13,"extensionField"],[253,27,250,27],[253,29,250,29],[254,6,251,8],[255,6,252,8],[255,10,252,12],[255,11,252,13,"extensionField"],[255,25,252,27],[255,26,252,28,"_features"],[255,35,252,37],[255,38,252,40],[255,42,252,44],[255,43,252,45,"_features"],[255,52,252,54],[256,4,253,4],[257,4,254,4],[257,8,254,8],[257,9,254,9,"_featuresResolved"],[257,26,254,26],[257,29,254,29],[257,33,254,33],[258,2,255,0],[258,3,255,1],[260,2,257,0],[261,0,258,0],[262,0,259,0],[263,0,260,0],[264,0,261,0],[265,0,262,0],[266,2,263,0,"ReflectionObject"],[266,18,263,16],[266,19,263,17,"prototype"],[266,28,263,26],[266,29,263,27,"_inferLegacyProtoFeatures"],[266,54,263,52],[266,57,263,55],[266,66,263,64,"_inferLegacyProtoFeatures"],[266,91,263,89,"_inferLegacyProtoFeatures"],[266,92,263,90],[267,2,263,90],[267,4,263,103],[268,4,264,4],[268,11,264,11],[268,12,264,12],[268,13,264,13],[269,2,265,0],[269,3,265,1],[271,2,267,0],[272,0,268,0],[273,0,269,0],[274,0,270,0],[275,0,271,0],[276,2,272,0,"ReflectionObject"],[276,18,272,16],[276,19,272,17,"prototype"],[276,28,272,26],[276,29,272,27,"getOption"],[276,38,272,36],[276,41,272,39],[276,50,272,48,"getOption"],[276,59,272,57,"getOption"],[276,60,272,58,"name"],[276,64,272,62],[276,66,272,64],[277,4,273,4],[277,8,273,8],[277,12,273,12],[277,13,273,13,"options"],[277,20,273,20],[277,22,274,8],[277,29,274,15],[277,33,274,19],[277,34,274,20,"options"],[277,41,274,27],[277,42,274,28,"name"],[277,46,274,32],[277,47,274,33],[278,4,275,4],[278,11,275,11,"undefined"],[278,20,275,20],[279,2,276,0],[279,3,276,1],[281,2,278,0],[282,0,279,0],[283,0,280,0],[284,0,281,0],[285,0,282,0],[286,0,283,0],[287,0,284,0],[288,2,285,0,"ReflectionObject"],[288,18,285,16],[288,19,285,17,"prototype"],[288,28,285,26],[288,29,285,27,"setOption"],[288,38,285,36],[288,41,285,39],[288,50,285,48,"setOption"],[288,59,285,57,"setOption"],[288,60,285,58,"name"],[288,64,285,62],[288,66,285,64,"value"],[288,71,285,69],[288,73,285,71,"ifNotSet"],[288,81,285,79],[288,83,285,81],[289,4,286,4],[289,8,286,8],[289,9,286,9],[289,13,286,13],[289,14,286,14,"options"],[289,21,286,21],[289,23,287,8],[289,27,287,12],[289,28,287,13,"options"],[289,35,287,20],[289,38,287,23],[289,39,287,24],[289,40,287,25],[290,4,288,4],[290,8,288,8],[290,21,288,21],[290,22,288,22,"test"],[290,26,288,26],[290,27,288,27,"name"],[290,31,288,31],[290,32,288,32],[290,34,288,34],[291,6,289,8,"util"],[291,10,289,12],[291,11,289,13,"setProperty"],[291,22,289,24],[291,23,289,25],[291,27,289,29],[291,28,289,30,"options"],[291,35,289,37],[291,37,289,39,"name"],[291,41,289,43],[291,43,289,45,"value"],[291,48,289,50],[291,50,289,52,"ifNotSet"],[291,58,289,60],[291,59,289,61],[292,4,290,4],[292,5,290,5],[292,11,290,11],[292,15,290,15],[292,16,290,16,"ifNotSet"],[292,24,290,24],[292,28,290,28],[292,32,290,32],[292,33,290,33,"options"],[292,40,290,40],[292,41,290,41,"name"],[292,45,290,45],[292,46,290,46],[292,51,290,51,"undefined"],[292,60,290,60],[292,62,290,62],[293,6,291,8],[293,10,291,12],[293,14,291,16],[293,15,291,17,"getOption"],[293,24,291,26],[293,25,291,27,"name"],[293,29,291,31],[293,30,291,32],[293,35,291,37,"value"],[293,40,291,42],[293,42,291,44],[293,46,291,48],[293,47,291,49,"resolved"],[293,55,291,57],[293,58,291,60],[293,63,291,65],[294,6,292,8],[294,10,292,12],[294,11,292,13,"options"],[294,18,292,20],[294,19,292,21,"name"],[294,23,292,25],[294,24,292,26],[294,27,292,29,"value"],[294,32,292,34],[295,4,293,4],[296,4,295,4],[296,11,295,11],[296,15,295,15],[297,2,296,0],[297,3,296,1],[299,2,298,0],[300,0,299,0],[301,0,300,0],[302,0,301,0],[303,0,302,0],[304,0,303,0],[305,0,304,0],[306,2,305,0,"ReflectionObject"],[306,18,305,16],[306,19,305,17,"prototype"],[306,28,305,26],[306,29,305,27,"setParsedOption"],[306,44,305,42],[306,47,305,45],[306,56,305,54,"setParsedOption"],[306,71,305,69,"setParsedOption"],[306,72,305,70,"name"],[306,76,305,74],[306,78,305,76,"value"],[306,83,305,81],[306,85,305,83,"propName"],[306,93,305,91],[306,95,305,93],[307,4,306,4],[307,8,306,8],[307,9,306,9],[307,13,306,13],[307,14,306,14,"parsedOptions"],[307,27,306,27],[307,29,306,29],[308,6,307,8],[308,10,307,12],[308,11,307,13,"parsedOptions"],[308,24,307,26],[308,27,307,29],[308,29,307,31],[309,4,308,4],[310,4,309,4],[310,8,309,8,"parsedOptions"],[310,21,309,21],[310,24,309,24],[310,28,309,28],[310,29,309,29,"parsedOptions"],[310,42,309,42],[311,4,310,4],[311,8,310,8,"propName"],[311,16,310,16],[311,18,310,18],[312,6,311,8],[313,6,312,8],[314,6,313,8],[314,10,313,12,"opt"],[314,13,313,15],[314,16,313,18,"parsedOptions"],[314,29,313,31],[314,30,313,32,"find"],[314,34,313,36],[314,35,313,37],[314,45,313,47,"opt"],[314,48,313,50],[314,50,313,52],[315,8,314,12],[315,15,314,19,"Object"],[315,21,314,25],[315,22,314,26,"prototype"],[315,31,314,35],[315,32,314,36,"hasOwnProperty"],[315,46,314,50],[315,47,314,51,"call"],[315,51,314,55],[315,52,314,56,"opt"],[315,55,314,59],[315,57,314,61,"name"],[315,61,314,65],[315,62,314,66],[316,6,315,8],[316,7,315,9],[316,8,315,10],[317,6,316,8],[317,10,316,12,"opt"],[317,13,316,15],[317,15,316,17],[318,8,317,12],[319,8,318,12],[320,8,319,12],[320,12,319,16,"newValue"],[320,20,319,24],[320,23,319,27,"opt"],[320,26,319,30],[320,27,319,31,"name"],[320,31,319,35],[320,32,319,36],[321,8,320,12,"util"],[321,12,320,16],[321,13,320,17,"setProperty"],[321,24,320,28],[321,25,320,29,"newValue"],[321,33,320,37],[321,35,320,39,"propName"],[321,43,320,47],[321,45,320,49,"value"],[321,50,320,54],[321,51,320,55],[322,6,321,8],[322,7,321,9],[322,13,321,15],[323,8,322,12],[324,8,323,12,"opt"],[324,11,323,15],[324,14,323,18],[324,15,323,19],[324,16,323,20],[325,8,324,12,"opt"],[325,11,324,15],[325,12,324,16,"name"],[325,16,324,20],[325,17,324,21],[325,20,324,24,"util"],[325,24,324,28],[325,25,324,29,"setProperty"],[325,36,324,40],[325,37,324,41],[325,38,324,42],[325,39,324,43],[325,41,324,45,"propName"],[325,49,324,53],[325,51,324,55,"value"],[325,56,324,60],[325,57,324,61],[326,8,325,12,"parsedOptions"],[326,21,325,25],[326,22,325,26,"push"],[326,26,325,30],[326,27,325,31,"opt"],[326,30,325,34],[326,31,325,35],[327,6,326,8],[328,4,327,4],[328,5,327,5],[328,11,327,11],[329,6,328,8],[330,6,329,8],[330,10,329,12,"newOpt"],[330,16,329,18],[330,19,329,21],[330,20,329,22],[330,21,329,23],[331,6,330,8,"newOpt"],[331,12,330,14],[331,13,330,15,"name"],[331,17,330,19],[331,18,330,20],[331,21,330,23,"value"],[331,26,330,28],[332,6,331,8,"parsedOptions"],[332,19,331,21],[332,20,331,22,"push"],[332,24,331,26],[332,25,331,27,"newOpt"],[332,31,331,33],[332,32,331,34],[333,4,332,4],[334,4,334,4],[334,11,334,11],[334,15,334,15],[335,2,335,0],[335,3,335,1],[337,2,337,0],[338,0,338,0],[339,0,339,0],[340,0,340,0],[341,0,341,0],[342,0,342,0],[343,2,343,0,"ReflectionObject"],[343,18,343,16],[343,19,343,17,"prototype"],[343,28,343,26],[343,29,343,27,"setOptions"],[343,39,343,37],[343,42,343,40],[343,51,343,49,"setOptions"],[343,61,343,59,"setOptions"],[343,62,343,60,"options"],[343,69,343,67],[343,71,343,69,"ifNotSet"],[343,79,343,77],[343,81,343,79],[344,4,344,4],[344,8,344,8,"options"],[344,15,344,15],[344,17,345,8],[344,22,345,13],[344,26,345,17,"keys"],[344,30,345,21],[344,33,345,24,"Object"],[344,39,345,30],[344,40,345,31,"keys"],[344,44,345,35],[344,45,345,36,"options"],[344,52,345,43],[344,53,345,44],[344,55,345,46,"i"],[344,56,345,47],[344,59,345,50],[344,60,345,51],[344,62,345,53,"i"],[344,63,345,54],[344,66,345,57,"keys"],[344,70,345,61],[344,71,345,62,"length"],[344,77,345,68],[344,79,345,70],[344,81,345,72,"i"],[344,82,345,73],[344,84,346,12],[344,88,346,16],[344,89,346,17,"setOption"],[344,98,346,26],[344,99,346,27,"keys"],[344,103,346,31],[344,104,346,32,"i"],[344,105,346,33],[344,106,346,34],[344,108,346,36,"options"],[344,115,346,43],[344,116,346,44,"keys"],[344,120,346,48],[344,121,346,49,"i"],[344,122,346,50],[344,123,346,51],[344,124,346,52],[344,126,346,54,"ifNotSet"],[344,134,346,62],[344,135,346,63],[345,4,347,4],[345,11,347,11],[345,15,347,15],[346,2,348,0],[346,3,348,1],[348,2,350,0],[349,0,351,0],[350,0,352,0],[351,0,353,0],[352,2,354,0,"ReflectionObject"],[352,18,354,16],[352,19,354,17,"prototype"],[352,28,354,26],[352,29,354,27,"toString"],[352,37,354,35],[352,40,354,38],[352,49,354,47,"toString"],[352,57,354,55,"toString"],[352,58,354,55],[352,60,354,58],[353,4,355,4],[353,8,355,8,"className"],[353,17,355,17],[353,20,355,20],[353,24,355,24],[353,25,355,25,"constructor"],[353,36,355,36],[353,37,355,37,"className"],[353,46,355,46],[354,6,356,8,"fullName"],[354,14,356,16],[354,17,356,20],[354,21,356,24],[354,22,356,25,"fullName"],[354,30,356,33],[355,4,357,4],[355,8,357,8,"fullName"],[355,16,357,16],[355,17,357,17,"length"],[355,23,357,23],[355,25,358,8],[355,32,358,15,"className"],[355,41,358,24],[355,44,358,27],[355,47,358,30],[355,50,358,33,"fullName"],[355,58,358,41],[356,4,359,4],[356,11,359,11,"className"],[356,20,359,20],[357,2,360,0],[357,3,360,1],[359,2,362,0],[360,0,363,0],[361,0,364,0],[362,0,365,0],[363,2,366,0,"ReflectionObject"],[363,18,366,16],[363,19,366,17,"prototype"],[363,28,366,26],[363,29,366,27,"_editionToJSON"],[363,43,366,41],[363,46,366,44],[363,55,366,53,"_editionToJSON"],[363,69,366,67,"_editionToJSON"],[363,70,366,67],[363,72,366,70],[364,4,367,4],[364,8,367,8],[364,9,367,9],[364,13,367,13],[364,14,367,14,"_edition"],[364,22,367,22],[364,26,367,26],[364,30,367,30],[364,31,367,31,"_edition"],[364,39,367,39],[364,44,367,44],[364,52,367,52],[364,54,367,54],[365,6,368,8],[366,6,369,8],[367,6,370,8],[367,13,370,15,"undefined"],[367,22,370,24],[368,4,371,4],[369,4,372,4],[369,11,372,11],[369,15,372,15],[369,16,372,16,"_edition"],[369,24,372,24],[370,2,373,0],[370,3,373,1],[372,2,375,0],[373,2,376,0,"ReflectionObject"],[373,18,376,16],[373,19,376,17,"_configure"],[373,29,376,27],[373,32,376,30],[373,42,376,39,"Root_"],[373,47,376,44],[373,49,376,46],[374,4,377,4,"Root"],[374,8,377,8],[374,11,377,11,"Root_"],[374,16,377,16],[375,2,378,0],[375,3,378,1],[376,0,378,2],[376,3]],"functionMap":{"names":["<global>","ReflectionObject","Object.defineProperties$argument_1.root.get","Object.defineProperties$argument_1.fullName.get","toJSON","onAdd","onRemove","resolve","_resolveFeaturesRecursive","_resolveFeatures","_inferLegacyProtoFeatures","getOption","setOption","setParsedOption","parsedOptions.find$argument_0","setOptions","toString","_editionToJSON","ReflectionObject._configure"],"mappings":"AAA;ACwB;CD8E;aEW;SFK;aGU;SHQ;+DIS;CJE;mCKO;CLQ;sCMO;CNM;qCOM;CPM;uDQO;CRE;8CSO;CTmD;uDUQ;CVE;uCWO;CXI;uCYS;CZW;6CaS;qCCQ;SDE;CboB;wCeQ;CfK;sCgBM;ChBM;4CiBM;CjBO;8BkBG;ClBE"}},"type":"js/module"}]}