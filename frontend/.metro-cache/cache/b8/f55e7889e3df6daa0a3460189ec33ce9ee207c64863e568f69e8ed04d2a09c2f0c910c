{"dependencies":[{"name":"./index-minimal","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":32,"index":46},"end":{"line":2,"column":58,"index":72}}],"key":"0y2y+RWS2XYIDEIFokrSPVaqm2U=","exportNames":["*"]}},{"name":"./encoder","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":75,"column":28,"index":2495},"end":{"line":75,"column":48,"index":2515}}],"key":"1PhosRH069etGatvJtufxzEaRVk=","exportNames":["*"]}},{"name":"./decoder","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":76,"column":28,"index":2545},"end":{"line":76,"column":48,"index":2565}}],"key":"HFW0TQlkm38C9qomYzyJaxYWYi0=","exportNames":["*"]}},{"name":"./verifier","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":77,"column":28,"index":2595},"end":{"line":77,"column":49,"index":2616}}],"key":"xTJinbetTSjBQ5uWtFFg7OYAPVQ=","exportNames":["*"]}},{"name":"./converter","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":78,"column":28,"index":2646},"end":{"line":78,"column":50,"index":2668}}],"key":"uRssGqofosQeJaCs7rDf/fgh9jo=","exportNames":["*"]}},{"name":"./object","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":81,"column":28,"index":2713},"end":{"line":81,"column":47,"index":2732}}],"key":"xOxKVS7k9wOBO7C50gqXbLVMn/0=","exportNames":["*"]}},{"name":"./namespace","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":82,"column":28,"index":2762},"end":{"line":82,"column":50,"index":2784}}],"key":"u0P7tC+K1OWBPm2ZPzGRIU5NEKE=","exportNames":["*"]}},{"name":"./root","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":83,"column":28,"index":2814},"end":{"line":83,"column":45,"index":2831}}],"key":"+623+1eejohPOqcdir5tNi6op/g=","exportNames":["*"]}},{"name":"./enum","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":84,"column":28,"index":2861},"end":{"line":84,"column":45,"index":2878}}],"key":"gyum9HaiytxYUYAerYZvNHG09ko=","exportNames":["*"]}},{"name":"./type","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":85,"column":28,"index":2908},"end":{"line":85,"column":45,"index":2925}}],"key":"V60QbB0X0zRp7FrHbxVhvo3GiWE=","exportNames":["*"]}},{"name":"./field","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":86,"column":28,"index":2955},"end":{"line":86,"column":46,"index":2973}}],"key":"NvI2xXoYDS7eVNBPYDi7RsbVioc=","exportNames":["*"]}},{"name":"./oneof","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":87,"column":28,"index":3003},"end":{"line":87,"column":46,"index":3021}}],"key":"6NmAiHUhkqvb6p1LAZJI/y3pbuA=","exportNames":["*"]}},{"name":"./mapfield","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":88,"column":28,"index":3051},"end":{"line":88,"column":49,"index":3072}}],"key":"MMmudVnVxEglPCDovE2ztoOe6EI=","exportNames":["*"]}},{"name":"./service","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":89,"column":28,"index":3102},"end":{"line":89,"column":48,"index":3122}}],"key":"SjCFclpm2vEeBKEx+WKCb/xzWJU=","exportNames":["*"]}},{"name":"./method","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":90,"column":28,"index":3152},"end":{"line":90,"column":47,"index":3171}}],"key":"3KWs9YDw9VAu1AlI6q+CsToc0yY=","exportNames":["*"]}},{"name":"./message","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":93,"column":28,"index":3213},"end":{"line":93,"column":48,"index":3233}}],"key":"ulpBHBwrX8gpPNstn8hH+L22bxo=","exportNames":["*"]}},{"name":"./wrappers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":94,"column":28,"index":3263},"end":{"line":94,"column":49,"index":3284}}],"key":"pnxjWrj+tW8MZoJprzsXPsRXgko=","exportNames":["*"]}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":97,"column":28,"index":3326},"end":{"line":97,"column":46,"index":3344}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo=","exportNames":["*"]}},{"name":"./util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":98,"column":28,"index":3374},"end":{"line":98,"column":45,"index":3391}}],"key":"hA8WsniBZrUJ/dmBZgrNdZcEmJ8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var protobuf = module.exports = require(_dependencyMap[0], \"./index-minimal\");\n  protobuf.build = \"light\";\n\n  /**\n   * A node-style callback as used by {@link load} and {@link Root#load}.\n   * @typedef LoadCallback\n   * @type {function}\n   * @param {Error|null} error Error, if any, otherwise `null`\n   * @param {Root} [root] Root, if there hasn't been an error\n   * @returns {undefined}\n   */\n\n  /**\n   * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n   * @param {string|string[]} filename One or multiple files to load\n   * @param {Root} root Root namespace, defaults to create a new one if omitted.\n   * @param {LoadCallback} callback Callback function\n   * @returns {undefined}\n   * @see {@link Root#load}\n   */\n  function load(filename, root, callback) {\n    if (typeof root === \"function\") {\n      callback = root;\n      root = new protobuf.Root();\n    } else if (!root) root = new protobuf.Root();\n    return root.load(filename, callback);\n  }\n\n  /**\n   * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n   * @name load\n   * @function\n   * @param {string|string[]} filename One or multiple files to load\n   * @param {LoadCallback} callback Callback function\n   * @returns {undefined}\n   * @see {@link Root#load}\n   * @variation 2\n   */\n  // function load(filename:string, callback:LoadCallback):undefined\n\n  /**\n   * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n   * @name load\n   * @function\n   * @param {string|string[]} filename One or multiple files to load\n   * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n   * @returns {Promise<Root>} Promise\n   * @see {@link Root#load}\n   * @variation 3\n   */\n  // function load(filename:string, [root:Root]):Promise<Root>\n\n  protobuf.load = load;\n\n  /**\n   * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n   * @param {string|string[]} filename One or multiple files to load\n   * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n   * @returns {Root} Root namespace\n   * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n   * @see {@link Root#loadSync}\n   */\n  function loadSync(filename, root) {\n    if (!root) root = new protobuf.Root();\n    return root.loadSync(filename);\n  }\n  protobuf.loadSync = loadSync;\n\n  // Serialization\n  protobuf.encoder = require(_dependencyMap[1], \"./encoder\");\n  protobuf.decoder = require(_dependencyMap[2], \"./decoder\");\n  protobuf.verifier = require(_dependencyMap[3], \"./verifier\");\n  protobuf.converter = require(_dependencyMap[4], \"./converter\");\n\n  // Reflection\n  protobuf.ReflectionObject = require(_dependencyMap[5], \"./object\");\n  protobuf.Namespace = require(_dependencyMap[6], \"./namespace\");\n  protobuf.Root = require(_dependencyMap[7], \"./root\");\n  protobuf.Enum = require(_dependencyMap[8], \"./enum\");\n  protobuf.Type = require(_dependencyMap[9], \"./type\");\n  protobuf.Field = require(_dependencyMap[10], \"./field\");\n  protobuf.OneOf = require(_dependencyMap[11], \"./oneof\");\n  protobuf.MapField = require(_dependencyMap[12], \"./mapfield\");\n  protobuf.Service = require(_dependencyMap[13], \"./service\");\n  protobuf.Method = require(_dependencyMap[14], \"./method\");\n\n  // Runtime\n  protobuf.Message = require(_dependencyMap[15], \"./message\");\n  protobuf.wrappers = require(_dependencyMap[16], \"./wrappers\");\n\n  // Utility\n  protobuf.types = require(_dependencyMap[17], \"./types\");\n  protobuf.util = require(_dependencyMap[18], \"./util\");\n\n  // Set up possibly cyclic reflection dependencies\n  protobuf.ReflectionObject._configure(protobuf.Root);\n  protobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\n  protobuf.Root._configure(protobuf.Type);\n  protobuf.Field._configure(protobuf.Type);\n});","lineCount":103,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"protobuf"],[4,14,2,12],[4,17,2,15,"module"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,34,2,32,"require"],[4,41,2,39],[4,42,2,39,"_dependencyMap"],[4,56,2,39],[4,78,2,57],[4,79,2,58],[5,2,4,0,"protobuf"],[5,10,4,8],[5,11,4,9,"build"],[5,16,4,14],[5,19,4,17],[5,26,4,24],[7,2,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[16,2,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,2,23,0],[24,11,23,9,"load"],[24,15,23,13,"load"],[24,16,23,14,"filename"],[24,24,23,22],[24,26,23,24,"root"],[24,30,23,28],[24,32,23,30,"callback"],[24,40,23,38],[24,42,23,40],[25,4,24,4],[25,8,24,8],[25,15,24,15,"root"],[25,19,24,19],[25,24,24,24],[25,34,24,34],[25,36,24,36],[26,6,25,8,"callback"],[26,14,25,16],[26,17,25,19,"root"],[26,21,25,23],[27,6,26,8,"root"],[27,10,26,12],[27,13,26,15],[27,17,26,19,"protobuf"],[27,25,26,27],[27,26,26,28,"Root"],[27,30,26,32],[27,31,26,33],[27,32,26,34],[28,4,27,4],[28,5,27,5],[28,11,27,11],[28,15,27,15],[28,16,27,16,"root"],[28,20,27,20],[28,22,28,8,"root"],[28,26,28,12],[28,29,28,15],[28,33,28,19,"protobuf"],[28,41,28,27],[28,42,28,28,"Root"],[28,46,28,32],[28,47,28,33],[28,48,28,34],[29,4,29,4],[29,11,29,11,"root"],[29,15,29,15],[29,16,29,16,"load"],[29,20,29,20],[29,21,29,21,"filename"],[29,29,29,29],[29,31,29,31,"callback"],[29,39,29,39],[29,40,29,40],[30,2,30,0],[32,2,32,0],[33,0,33,0],[34,0,34,0],[35,0,35,0],[36,0,36,0],[37,0,37,0],[38,0,38,0],[39,0,39,0],[40,0,40,0],[41,0,41,0],[42,2,42,0],[44,2,44,0],[45,0,45,0],[46,0,46,0],[47,0,47,0],[48,0,48,0],[49,0,49,0],[50,0,50,0],[51,0,51,0],[52,0,52,0],[53,0,53,0],[54,2,54,0],[56,2,56,0,"protobuf"],[56,10,56,8],[56,11,56,9,"load"],[56,15,56,13],[56,18,56,16,"load"],[56,22,56,20],[58,2,58,0],[59,0,59,0],[60,0,60,0],[61,0,61,0],[62,0,62,0],[63,0,63,0],[64,0,64,0],[65,0,65,0],[66,2,66,0],[66,11,66,9,"loadSync"],[66,19,66,17,"loadSync"],[66,20,66,18,"filename"],[66,28,66,26],[66,30,66,28,"root"],[66,34,66,32],[66,36,66,34],[67,4,67,4],[67,8,67,8],[67,9,67,9,"root"],[67,13,67,13],[67,15,68,8,"root"],[67,19,68,12],[67,22,68,15],[67,26,68,19,"protobuf"],[67,34,68,27],[67,35,68,28,"Root"],[67,39,68,32],[67,40,68,33],[67,41,68,34],[68,4,69,4],[68,11,69,11,"root"],[68,15,69,15],[68,16,69,16,"loadSync"],[68,24,69,24],[68,25,69,25,"filename"],[68,33,69,33],[68,34,69,34],[69,2,70,0],[70,2,72,0,"protobuf"],[70,10,72,8],[70,11,72,9,"loadSync"],[70,19,72,17],[70,22,72,20,"loadSync"],[70,30,72,28],[72,2,74,0],[73,2,75,0,"protobuf"],[73,10,75,8],[73,11,75,9,"encoder"],[73,18,75,16],[73,21,75,28,"require"],[73,28,75,35],[73,29,75,35,"_dependencyMap"],[73,43,75,35],[73,59,75,47],[73,60,75,48],[74,2,76,0,"protobuf"],[74,10,76,8],[74,11,76,9,"decoder"],[74,18,76,16],[74,21,76,28,"require"],[74,28,76,35],[74,29,76,35,"_dependencyMap"],[74,43,76,35],[74,59,76,47],[74,60,76,48],[75,2,77,0,"protobuf"],[75,10,77,8],[75,11,77,9,"verifier"],[75,19,77,17],[75,22,77,28,"require"],[75,29,77,35],[75,30,77,35,"_dependencyMap"],[75,44,77,35],[75,61,77,48],[75,62,77,49],[76,2,78,0,"protobuf"],[76,10,78,8],[76,11,78,9,"converter"],[76,20,78,18],[76,23,78,28,"require"],[76,30,78,35],[76,31,78,35,"_dependencyMap"],[76,45,78,35],[76,63,78,49],[76,64,78,50],[78,2,80,0],[79,2,81,0,"protobuf"],[79,10,81,8],[79,11,81,9,"ReflectionObject"],[79,27,81,25],[79,30,81,28,"require"],[79,37,81,35],[79,38,81,35,"_dependencyMap"],[79,52,81,35],[79,67,81,46],[79,68,81,47],[80,2,82,0,"protobuf"],[80,10,82,8],[80,11,82,9,"Namespace"],[80,20,82,18],[80,23,82,28,"require"],[80,30,82,35],[80,31,82,35,"_dependencyMap"],[80,45,82,35],[80,63,82,49],[80,64,82,50],[81,2,83,0,"protobuf"],[81,10,83,8],[81,11,83,9,"Root"],[81,15,83,13],[81,18,83,28,"require"],[81,25,83,35],[81,26,83,35,"_dependencyMap"],[81,40,83,35],[81,53,83,44],[81,54,83,45],[82,2,84,0,"protobuf"],[82,10,84,8],[82,11,84,9,"Enum"],[82,15,84,13],[82,18,84,28,"require"],[82,25,84,35],[82,26,84,35,"_dependencyMap"],[82,40,84,35],[82,53,84,44],[82,54,84,45],[83,2,85,0,"protobuf"],[83,10,85,8],[83,11,85,9,"Type"],[83,15,85,13],[83,18,85,28,"require"],[83,25,85,35],[83,26,85,35,"_dependencyMap"],[83,40,85,35],[83,53,85,44],[83,54,85,45],[84,2,86,0,"protobuf"],[84,10,86,8],[84,11,86,9,"Field"],[84,16,86,14],[84,19,86,28,"require"],[84,26,86,35],[84,27,86,35,"_dependencyMap"],[84,41,86,35],[84,56,86,45],[84,57,86,46],[85,2,87,0,"protobuf"],[85,10,87,8],[85,11,87,9,"OneOf"],[85,16,87,14],[85,19,87,28,"require"],[85,26,87,35],[85,27,87,35,"_dependencyMap"],[85,41,87,35],[85,56,87,45],[85,57,87,46],[86,2,88,0,"protobuf"],[86,10,88,8],[86,11,88,9,"MapField"],[86,19,88,17],[86,22,88,28,"require"],[86,29,88,35],[86,30,88,35,"_dependencyMap"],[86,44,88,35],[86,62,88,48],[86,63,88,49],[87,2,89,0,"protobuf"],[87,10,89,8],[87,11,89,9,"Service"],[87,18,89,16],[87,21,89,28,"require"],[87,28,89,35],[87,29,89,35,"_dependencyMap"],[87,43,89,35],[87,60,89,47],[87,61,89,48],[88,2,90,0,"protobuf"],[88,10,90,8],[88,11,90,9,"Method"],[88,17,90,15],[88,20,90,28,"require"],[88,27,90,35],[88,28,90,35,"_dependencyMap"],[88,42,90,35],[88,58,90,46],[88,59,90,47],[90,2,92,0],[91,2,93,0,"protobuf"],[91,10,93,8],[91,11,93,9,"Message"],[91,18,93,16],[91,21,93,28,"require"],[91,28,93,35],[91,29,93,35,"_dependencyMap"],[91,43,93,35],[91,60,93,47],[91,61,93,48],[92,2,94,0,"protobuf"],[92,10,94,8],[92,11,94,9,"wrappers"],[92,19,94,17],[92,22,94,28,"require"],[92,29,94,35],[92,30,94,35,"_dependencyMap"],[92,44,94,35],[92,62,94,48],[92,63,94,49],[94,2,96,0],[95,2,97,0,"protobuf"],[95,10,97,8],[95,11,97,9,"types"],[95,16,97,14],[95,19,97,28,"require"],[95,26,97,35],[95,27,97,35,"_dependencyMap"],[95,41,97,35],[95,56,97,45],[95,57,97,46],[96,2,98,0,"protobuf"],[96,10,98,8],[96,11,98,9,"util"],[96,15,98,13],[96,18,98,28,"require"],[96,25,98,35],[96,26,98,35,"_dependencyMap"],[96,40,98,35],[96,54,98,44],[96,55,98,45],[98,2,100,0],[99,2,101,0,"protobuf"],[99,10,101,8],[99,11,101,9,"ReflectionObject"],[99,27,101,25],[99,28,101,26,"_configure"],[99,38,101,36],[99,39,101,37,"protobuf"],[99,47,101,45],[99,48,101,46,"Root"],[99,52,101,50],[99,53,101,51],[100,2,102,0,"protobuf"],[100,10,102,8],[100,11,102,9,"Namespace"],[100,20,102,18],[100,21,102,19,"_configure"],[100,31,102,29],[100,32,102,30,"protobuf"],[100,40,102,38],[100,41,102,39,"Type"],[100,45,102,43],[100,47,102,45,"protobuf"],[100,55,102,53],[100,56,102,54,"Service"],[100,63,102,61],[100,65,102,63,"protobuf"],[100,73,102,71],[100,74,102,72,"Enum"],[100,78,102,76],[100,79,102,77],[101,2,103,0,"protobuf"],[101,10,103,8],[101,11,103,9,"Root"],[101,15,103,13],[101,16,103,14,"_configure"],[101,26,103,24],[101,27,103,25,"protobuf"],[101,35,103,33],[101,36,103,34,"Type"],[101,40,103,38],[101,41,103,39],[102,2,104,0,"protobuf"],[102,10,104,8],[102,11,104,9,"Field"],[102,16,104,14],[102,17,104,15,"_configure"],[102,27,104,25],[102,28,104,26,"protobuf"],[102,36,104,34],[102,37,104,35,"Type"],[102,41,104,39],[102,42,104,40],[103,0,104,41],[103,3]],"functionMap":{"names":["<global>","load","loadSync"],"mappings":"AAA;ACsB;CDO;AEoC;CFI"}},"type":"js/module"}]}