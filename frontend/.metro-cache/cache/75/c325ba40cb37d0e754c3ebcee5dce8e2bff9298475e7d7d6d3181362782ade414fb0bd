{"dependencies":[{"name":"net","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":14,"index":712},"end":{"line":19,"column":28,"index":726}}],"key":"VaJ41XPkzAfy8SiomkwZkgq4Twc=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":20,"index":748},"end":{"line":20,"column":42,"index":770}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"]}},{"name":"./metadata","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":19,"index":791},"end":{"line":21,"column":40,"index":812}}],"key":"6KRjstwF8yWfkztxpqnIypQq1mI=","exportNames":["*"]}},{"name":"./resolver","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":19,"index":833},"end":{"line":22,"column":40,"index":854}}],"key":"sRT48ZY0MO9jzJf+yVj+EkuLSJg=","exportNames":["*"]}},{"name":"./uri-parser","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":21,"index":877},"end":{"line":23,"column":44,"index":900}}],"key":"esiO732HplrDMf1oXKGdpawa/aM=","exportNames":["*"]}},{"name":"./logging","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":16,"index":918},"end":{"line":24,"column":36,"index":938}}],"key":"IuCQ7u+XFj9mcNQiMAuOpQn/EDM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2021 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.setup = void 0;\n  const net_1 = require(_dependencyMap[0], \"net\");\n  const constants_1 = require(_dependencyMap[1], \"./constants\");\n  const metadata_1 = require(_dependencyMap[2], \"./metadata\");\n  const resolver_1 = require(_dependencyMap[3], \"./resolver\");\n  const uri_parser_1 = require(_dependencyMap[4], \"./uri-parser\");\n  const logging = require(_dependencyMap[5], \"./logging\");\n  const TRACER_NAME = 'ip_resolver';\n  function trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n  }\n  const IPV4_SCHEME = 'ipv4';\n  const IPV6_SCHEME = 'ipv6';\n  /**\n   * The default TCP port to connect to if not explicitly specified in the target.\n   */\n  const DEFAULT_PORT = 443;\n  class IpResolver {\n    constructor(target, listener, channelOptions) {\n      var _a;\n      this.listener = listener;\n      this.addresses = [];\n      this.error = null;\n      this.hasReturnedResult = false;\n      trace('Resolver constructed for target ' + (0, uri_parser_1.uriToString)(target));\n      const addresses = [];\n      if (!(target.scheme === IPV4_SCHEME || target.scheme === IPV6_SCHEME)) {\n        this.error = {\n          code: constants_1.Status.UNAVAILABLE,\n          details: `Unrecognized scheme ${target.scheme} in IP resolver`,\n          metadata: new metadata_1.Metadata()\n        };\n        return;\n      }\n      const pathList = target.path.split(',');\n      for (const path of pathList) {\n        const hostPort = (0, uri_parser_1.splitHostPort)(path);\n        if (hostPort === null) {\n          this.error = {\n            code: constants_1.Status.UNAVAILABLE,\n            details: `Failed to parse ${target.scheme} address ${path}`,\n            metadata: new metadata_1.Metadata()\n          };\n          return;\n        }\n        if (target.scheme === IPV4_SCHEME && !(0, net_1.isIPv4)(hostPort.host) || target.scheme === IPV6_SCHEME && !(0, net_1.isIPv6)(hostPort.host)) {\n          this.error = {\n            code: constants_1.Status.UNAVAILABLE,\n            details: `Failed to parse ${target.scheme} address ${path}`,\n            metadata: new metadata_1.Metadata()\n          };\n          return;\n        }\n        addresses.push({\n          host: hostPort.host,\n          port: (_a = hostPort.port) !== null && _a !== void 0 ? _a : DEFAULT_PORT\n        });\n      }\n      this.addresses = addresses;\n      trace('Parsed ' + target.scheme + ' address list ' + this.addresses);\n    }\n    updateResolution() {\n      if (!this.hasReturnedResult) {\n        this.hasReturnedResult = true;\n        process.nextTick(() => {\n          if (this.error) {\n            this.listener.onError(this.error);\n          } else {\n            this.listener.onSuccessfulResolution(this.addresses, null, null, null, {});\n          }\n        });\n      }\n    }\n    destroy() {\n      this.hasReturnedResult = false;\n    }\n    static getDefaultAuthority(target) {\n      return target.path.split(',')[0];\n    }\n  }\n  function setup() {\n    (0, resolver_1.registerResolver)(IPV4_SCHEME, IpResolver);\n    (0, resolver_1.registerResolver)(IPV6_SCHEME, IpResolver);\n  }\n  exports.setup = setup;\n});","lineCount":107,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,2,17,0,"Object"],[19,8,17,6],[19,9,17,7,"defineProperty"],[19,23,17,21],[19,24,17,22,"exports"],[19,31,17,29],[19,33,17,31],[19,45,17,43],[19,47,17,45],[20,4,17,47,"value"],[20,9,17,52],[20,11,17,54],[21,2,17,59],[21,3,17,60],[21,4,17,61],[22,2,18,0,"exports"],[22,9,18,7],[22,10,18,8,"setup"],[22,15,18,13],[22,18,18,16],[22,23,18,21],[22,24,18,22],[23,2,19,0],[23,8,19,6,"net_1"],[23,13,19,11],[23,16,19,14,"require"],[23,23,19,21],[23,24,19,21,"_dependencyMap"],[23,38,19,21],[23,48,19,27],[23,49,19,28],[24,2,20,0],[24,8,20,6,"constants_1"],[24,19,20,17],[24,22,20,20,"require"],[24,29,20,27],[24,30,20,27,"_dependencyMap"],[24,44,20,27],[24,62,20,41],[24,63,20,42],[25,2,21,0],[25,8,21,6,"metadata_1"],[25,18,21,16],[25,21,21,19,"require"],[25,28,21,26],[25,29,21,26,"_dependencyMap"],[25,43,21,26],[25,60,21,39],[25,61,21,40],[26,2,22,0],[26,8,22,6,"resolver_1"],[26,18,22,16],[26,21,22,19,"require"],[26,28,22,26],[26,29,22,26,"_dependencyMap"],[26,43,22,26],[26,60,22,39],[26,61,22,40],[27,2,23,0],[27,8,23,6,"uri_parser_1"],[27,20,23,18],[27,23,23,21,"require"],[27,30,23,28],[27,31,23,28,"_dependencyMap"],[27,45,23,28],[27,64,23,43],[27,65,23,44],[28,2,24,0],[28,8,24,6,"logging"],[28,15,24,13],[28,18,24,16,"require"],[28,25,24,23],[28,26,24,23,"_dependencyMap"],[28,40,24,23],[28,56,24,35],[28,57,24,36],[29,2,25,0],[29,8,25,6,"TRACER_NAME"],[29,19,25,17],[29,22,25,20],[29,35,25,33],[30,2,26,0],[30,11,26,9,"trace"],[30,16,26,14,"trace"],[30,17,26,15,"text"],[30,21,26,19],[30,23,26,21],[31,4,27,4,"logging"],[31,11,27,11],[31,12,27,12,"trace"],[31,17,27,17],[31,18,27,18,"constants_1"],[31,29,27,29],[31,30,27,30,"LogVerbosity"],[31,42,27,42],[31,43,27,43,"DEBUG"],[31,48,27,48],[31,50,27,50,"TRACER_NAME"],[31,61,27,61],[31,63,27,63,"text"],[31,67,27,67],[31,68,27,68],[32,2,28,0],[33,2,29,0],[33,8,29,6,"IPV4_SCHEME"],[33,19,29,17],[33,22,29,20],[33,28,29,26],[34,2,30,0],[34,8,30,6,"IPV6_SCHEME"],[34,19,30,17],[34,22,30,20],[34,28,30,26],[35,2,31,0],[36,0,32,0],[37,0,33,0],[38,2,34,0],[38,8,34,6,"DEFAULT_PORT"],[38,20,34,18],[38,23,34,21],[38,26,34,24],[39,2,35,0],[39,8,35,6,"IpResolver"],[39,18,35,16],[39,19,35,17],[40,4,36,4,"constructor"],[40,15,36,15,"constructor"],[40,16,36,16,"target"],[40,22,36,22],[40,24,36,24,"listener"],[40,32,36,32],[40,34,36,34,"channelOptions"],[40,48,36,48],[40,50,36,50],[41,6,37,8],[41,10,37,12,"_a"],[41,12,37,14],[42,6,38,8],[42,10,38,12],[42,11,38,13,"listener"],[42,19,38,21],[42,22,38,24,"listener"],[42,30,38,32],[43,6,39,8],[43,10,39,12],[43,11,39,13,"addresses"],[43,20,39,22],[43,23,39,25],[43,25,39,27],[44,6,40,8],[44,10,40,12],[44,11,40,13,"error"],[44,16,40,18],[44,19,40,21],[44,23,40,25],[45,6,41,8],[45,10,41,12],[45,11,41,13,"hasReturnedResult"],[45,28,41,30],[45,31,41,33],[45,36,41,38],[46,6,42,8,"trace"],[46,11,42,13],[46,12,42,14],[46,46,42,48],[46,49,42,51],[46,50,42,52],[46,51,42,53],[46,53,42,55,"uri_parser_1"],[46,65,42,67],[46,66,42,68,"uriToString"],[46,77,42,79],[46,79,42,81,"target"],[46,85,42,87],[46,86,42,88],[46,87,42,89],[47,6,43,8],[47,12,43,14,"addresses"],[47,21,43,23],[47,24,43,26],[47,26,43,28],[48,6,44,8],[48,10,44,12],[48,12,44,14,"target"],[48,18,44,20],[48,19,44,21,"scheme"],[48,25,44,27],[48,30,44,32,"IPV4_SCHEME"],[48,41,44,43],[48,45,44,47,"target"],[48,51,44,53],[48,52,44,54,"scheme"],[48,58,44,60],[48,63,44,65,"IPV6_SCHEME"],[48,74,44,76],[48,75,44,77],[48,77,44,79],[49,8,45,12],[49,12,45,16],[49,13,45,17,"error"],[49,18,45,22],[49,21,45,25],[50,10,46,16,"code"],[50,14,46,20],[50,16,46,22,"constants_1"],[50,27,46,33],[50,28,46,34,"Status"],[50,34,46,40],[50,35,46,41,"UNAVAILABLE"],[50,46,46,52],[51,10,47,16,"details"],[51,17,47,23],[51,19,47,25],[51,42,47,48,"target"],[51,48,47,54],[51,49,47,55,"scheme"],[51,55,47,61],[51,72,47,78],[52,10,48,16,"metadata"],[52,18,48,24],[52,20,48,26],[52,24,48,30,"metadata_1"],[52,34,48,40],[52,35,48,41,"Metadata"],[52,43,48,49],[52,44,48,50],[53,8,49,12],[53,9,49,13],[54,8,50,12],[55,6,51,8],[56,6,52,8],[56,12,52,14,"pathList"],[56,20,52,22],[56,23,52,25,"target"],[56,29,52,31],[56,30,52,32,"path"],[56,34,52,36],[56,35,52,37,"split"],[56,40,52,42],[56,41,52,43],[56,44,52,46],[56,45,52,47],[57,6,53,8],[57,11,53,13],[57,17,53,19,"path"],[57,21,53,23],[57,25,53,27,"pathList"],[57,33,53,35],[57,35,53,37],[58,8,54,12],[58,14,54,18,"hostPort"],[58,22,54,26],[58,25,54,29],[58,26,54,30],[58,27,54,31],[58,29,54,33,"uri_parser_1"],[58,41,54,45],[58,42,54,46,"splitHostPort"],[58,55,54,59],[58,57,54,61,"path"],[58,61,54,65],[58,62,54,66],[59,8,55,12],[59,12,55,16,"hostPort"],[59,20,55,24],[59,25,55,29],[59,29,55,33],[59,31,55,35],[60,10,56,16],[60,14,56,20],[60,15,56,21,"error"],[60,20,56,26],[60,23,56,29],[61,12,57,20,"code"],[61,16,57,24],[61,18,57,26,"constants_1"],[61,29,57,37],[61,30,57,38,"Status"],[61,36,57,44],[61,37,57,45,"UNAVAILABLE"],[61,48,57,56],[62,12,58,20,"details"],[62,19,58,27],[62,21,58,29],[62,40,58,48,"target"],[62,46,58,54],[62,47,58,55,"scheme"],[62,53,58,61],[62,65,58,73,"path"],[62,69,58,77],[62,71,58,79],[63,12,59,20,"metadata"],[63,20,59,28],[63,22,59,30],[63,26,59,34,"metadata_1"],[63,36,59,44],[63,37,59,45,"Metadata"],[63,45,59,53],[63,46,59,54],[64,10,60,16],[64,11,60,17],[65,10,61,16],[66,8,62,12],[67,8,63,12],[67,12,63,17,"target"],[67,18,63,23],[67,19,63,24,"scheme"],[67,25,63,30],[67,30,63,35,"IPV4_SCHEME"],[67,41,63,46],[67,45,63,50],[67,46,63,51],[67,47,63,52],[67,48,63,53],[67,50,63,55,"net_1"],[67,55,63,60],[67,56,63,61,"isIPv4"],[67,62,63,67],[67,64,63,69,"hostPort"],[67,72,63,77],[67,73,63,78,"host"],[67,77,63,82],[67,78,63,83],[67,82,64,17,"target"],[67,88,64,23],[67,89,64,24,"scheme"],[67,95,64,30],[67,100,64,35,"IPV6_SCHEME"],[67,111,64,46],[67,115,64,50],[67,116,64,51],[67,117,64,52],[67,118,64,53],[67,120,64,55,"net_1"],[67,125,64,60],[67,126,64,61,"isIPv6"],[67,132,64,67],[67,134,64,69,"hostPort"],[67,142,64,77],[67,143,64,78,"host"],[67,147,64,82],[67,148,64,84],[67,150,64,86],[68,10,65,16],[68,14,65,20],[68,15,65,21,"error"],[68,20,65,26],[68,23,65,29],[69,12,66,20,"code"],[69,16,66,24],[69,18,66,26,"constants_1"],[69,29,66,37],[69,30,66,38,"Status"],[69,36,66,44],[69,37,66,45,"UNAVAILABLE"],[69,48,66,56],[70,12,67,20,"details"],[70,19,67,27],[70,21,67,29],[70,40,67,48,"target"],[70,46,67,54],[70,47,67,55,"scheme"],[70,53,67,61],[70,65,67,73,"path"],[70,69,67,77],[70,71,67,79],[71,12,68,20,"metadata"],[71,20,68,28],[71,22,68,30],[71,26,68,34,"metadata_1"],[71,36,68,44],[71,37,68,45,"Metadata"],[71,45,68,53],[71,46,68,54],[72,10,69,16],[72,11,69,17],[73,10,70,16],[74,8,71,12],[75,8,72,12,"addresses"],[75,17,72,21],[75,18,72,22,"push"],[75,22,72,26],[75,23,72,27],[76,10,73,16,"host"],[76,14,73,20],[76,16,73,22,"hostPort"],[76,24,73,30],[76,25,73,31,"host"],[76,29,73,35],[77,10,74,16,"port"],[77,14,74,20],[77,16,74,22],[77,17,74,23,"_a"],[77,19,74,25],[77,22,74,28,"hostPort"],[77,30,74,36],[77,31,74,37,"port"],[77,35,74,41],[77,41,74,47],[77,45,74,51],[77,49,74,55,"_a"],[77,51,74,57],[77,56,74,62],[77,61,74,67],[77,62,74,68],[77,65,74,71,"_a"],[77,67,74,73],[77,70,74,76,"DEFAULT_PORT"],[78,8,75,12],[78,9,75,13],[78,10,75,14],[79,6,76,8],[80,6,77,8],[80,10,77,12],[80,11,77,13,"addresses"],[80,20,77,22],[80,23,77,25,"addresses"],[80,32,77,34],[81,6,78,8,"trace"],[81,11,78,13],[81,12,78,14],[81,21,78,23],[81,24,78,26,"target"],[81,30,78,32],[81,31,78,33,"scheme"],[81,37,78,39],[81,40,78,42],[81,56,78,58],[81,59,78,61],[81,63,78,65],[81,64,78,66,"addresses"],[81,73,78,75],[81,74,78,76],[82,4,79,4],[83,4,80,4,"updateResolution"],[83,20,80,20,"updateResolution"],[83,21,80,20],[83,23,80,23],[84,6,81,8],[84,10,81,12],[84,11,81,13],[84,15,81,17],[84,16,81,18,"hasReturnedResult"],[84,33,81,35],[84,35,81,37],[85,8,82,12],[85,12,82,16],[85,13,82,17,"hasReturnedResult"],[85,30,82,34],[85,33,82,37],[85,37,82,41],[86,8,83,12,"process"],[86,15,83,19],[86,16,83,20,"nextTick"],[86,24,83,28],[86,25,83,29],[86,31,83,35],[87,10,84,16],[87,14,84,20],[87,18,84,24],[87,19,84,25,"error"],[87,24,84,30],[87,26,84,32],[88,12,85,20],[88,16,85,24],[88,17,85,25,"listener"],[88,25,85,33],[88,26,85,34,"onError"],[88,33,85,41],[88,34,85,42],[88,38,85,46],[88,39,85,47,"error"],[88,44,85,52],[88,45,85,53],[89,10,86,16],[89,11,86,17],[89,17,87,21],[90,12,88,20],[90,16,88,24],[90,17,88,25,"listener"],[90,25,88,33],[90,26,88,34,"onSuccessfulResolution"],[90,48,88,56],[90,49,88,57],[90,53,88,61],[90,54,88,62,"addresses"],[90,63,88,71],[90,65,88,73],[90,69,88,77],[90,71,88,79],[90,75,88,83],[90,77,88,85],[90,81,88,89],[90,83,88,91],[90,84,88,92],[90,85,88,93],[90,86,88,94],[91,10,89,16],[92,8,90,12],[92,9,90,13],[92,10,90,14],[93,6,91,8],[94,4,92,4],[95,4,93,4,"destroy"],[95,11,93,11,"destroy"],[95,12,93,11],[95,14,93,14],[96,6,94,8],[96,10,94,12],[96,11,94,13,"hasReturnedResult"],[96,28,94,30],[96,31,94,33],[96,36,94,38],[97,4,95,4],[98,4,96,4],[98,11,96,11,"getDefaultAuthority"],[98,30,96,30,"getDefaultAuthority"],[98,31,96,31,"target"],[98,37,96,37],[98,39,96,39],[99,6,97,8],[99,13,97,15,"target"],[99,19,97,21],[99,20,97,22,"path"],[99,24,97,26],[99,25,97,27,"split"],[99,30,97,32],[99,31,97,33],[99,34,97,36],[99,35,97,37],[99,36,97,38],[99,37,97,39],[99,38,97,40],[100,4,98,4],[101,2,99,0],[102,2,100,0],[102,11,100,9,"setup"],[102,16,100,14,"setup"],[102,17,100,14],[102,19,100,17],[103,4,101,4],[103,5,101,5],[103,6,101,6],[103,8,101,8,"resolver_1"],[103,18,101,18],[103,19,101,19,"registerResolver"],[103,35,101,35],[103,37,101,37,"IPV4_SCHEME"],[103,48,101,48],[103,50,101,50,"IpResolver"],[103,60,101,60],[103,61,101,61],[104,4,102,4],[104,5,102,5],[104,6,102,6],[104,8,102,8,"resolver_1"],[104,18,102,18],[104,19,102,19,"registerResolver"],[104,35,102,35],[104,37,102,37,"IPV6_SCHEME"],[104,48,102,48],[104,50,102,50,"IpResolver"],[104,60,102,60],[104,61,102,61],[105,2,103,0],[106,2,104,0,"exports"],[106,9,104,7],[106,10,104,8,"setup"],[106,15,104,13],[106,18,104,16,"setup"],[106,23,104,21],[107,0,104,22],[107,3]],"functionMap":{"names":["<global>","trace","IpResolver","IpResolver#constructor","IpResolver#updateResolution","process.nextTick$argument_0","IpResolver#destroy","IpResolver.getDefaultAuthority","setup"],"mappings":"AAA;ACyB;CDE;AEO;ICC;KD2C;IEC;6BCG;aDO;KFE;IIC;KJE;IKC;KLE;CFC;AQC;CRG"}},"type":"js/module"}]}