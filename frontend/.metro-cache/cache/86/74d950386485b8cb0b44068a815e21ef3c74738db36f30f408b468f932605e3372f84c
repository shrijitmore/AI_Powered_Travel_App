{"dependencies":[{"name":"net","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":14,"index":837},"end":{"line":20,"column":28,"index":851}}],"key":"VaJ41XPkzAfy8SiomkwZkgq4Twc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2021 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.stringToSubchannelAddress = exports.subchannelAddressToString = exports.subchannelAddressEqual = exports.isTcpSubchannelAddress = void 0;\n  const net_1 = require(_dependencyMap[0], \"net\");\n  function isTcpSubchannelAddress(address) {\n    return 'port' in address;\n  }\n  exports.isTcpSubchannelAddress = isTcpSubchannelAddress;\n  function subchannelAddressEqual(address1, address2) {\n    if (!address1 && !address2) {\n      return true;\n    }\n    if (!address1 || !address2) {\n      return false;\n    }\n    if (isTcpSubchannelAddress(address1)) {\n      return isTcpSubchannelAddress(address2) && address1.host === address2.host && address1.port === address2.port;\n    } else {\n      return !isTcpSubchannelAddress(address2) && address1.path === address2.path;\n    }\n  }\n  exports.subchannelAddressEqual = subchannelAddressEqual;\n  function subchannelAddressToString(address) {\n    if (isTcpSubchannelAddress(address)) {\n      return address.host + ':' + address.port;\n    } else {\n      return address.path;\n    }\n  }\n  exports.subchannelAddressToString = subchannelAddressToString;\n  const DEFAULT_PORT = 443;\n  function stringToSubchannelAddress(addressString, port) {\n    if ((0, net_1.isIP)(addressString)) {\n      return {\n        host: addressString,\n        port: port !== null && port !== void 0 ? port : DEFAULT_PORT\n      };\n    } else {\n      return {\n        path: addressString\n      };\n    }\n  }\n  exports.stringToSubchannelAddress = stringToSubchannelAddress;\n});","lineCount":65,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,2,18,0,"Object"],[20,8,18,6],[20,9,18,7,"defineProperty"],[20,23,18,21],[20,24,18,22,"exports"],[20,31,18,29],[20,33,18,31],[20,45,18,43],[20,47,18,45],[21,4,18,47,"value"],[21,9,18,52],[21,11,18,54],[22,2,18,59],[22,3,18,60],[22,4,18,61],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"stringToSubchannelAddress"],[23,35,19,33],[23,38,19,36,"exports"],[23,45,19,43],[23,46,19,44,"subchannelAddressToString"],[23,71,19,69],[23,74,19,72,"exports"],[23,81,19,79],[23,82,19,80,"subchannelAddressEqual"],[23,104,19,102],[23,107,19,105,"exports"],[23,114,19,112],[23,115,19,113,"isTcpSubchannelAddress"],[23,137,19,135],[23,140,19,138],[23,145,19,143],[23,146,19,144],[24,2,20,0],[24,8,20,6,"net_1"],[24,13,20,11],[24,16,20,14,"require"],[24,23,20,21],[24,24,20,21,"_dependencyMap"],[24,38,20,21],[24,48,20,27],[24,49,20,28],[25,2,21,0],[25,11,21,9,"isTcpSubchannelAddress"],[25,33,21,31,"isTcpSubchannelAddress"],[25,34,21,32,"address"],[25,41,21,39],[25,43,21,41],[26,4,22,4],[26,11,22,11],[26,17,22,17],[26,21,22,21,"address"],[26,28,22,28],[27,2,23,0],[28,2,24,0,"exports"],[28,9,24,7],[28,10,24,8,"isTcpSubchannelAddress"],[28,32,24,30],[28,35,24,33,"isTcpSubchannelAddress"],[28,57,24,55],[29,2,25,0],[29,11,25,9,"subchannelAddressEqual"],[29,33,25,31,"subchannelAddressEqual"],[29,34,25,32,"address1"],[29,42,25,40],[29,44,25,42,"address2"],[29,52,25,50],[29,54,25,52],[30,4,26,4],[30,8,26,8],[30,9,26,9,"address1"],[30,17,26,17],[30,21,26,21],[30,22,26,22,"address2"],[30,30,26,30],[30,32,26,32],[31,6,27,8],[31,13,27,15],[31,17,27,19],[32,4,28,4],[33,4,29,4],[33,8,29,8],[33,9,29,9,"address1"],[33,17,29,17],[33,21,29,21],[33,22,29,22,"address2"],[33,30,29,30],[33,32,29,32],[34,6,30,8],[34,13,30,15],[34,18,30,20],[35,4,31,4],[36,4,32,4],[36,8,32,8,"isTcpSubchannelAddress"],[36,30,32,30],[36,31,32,31,"address1"],[36,39,32,39],[36,40,32,40],[36,42,32,42],[37,6,33,8],[37,13,33,16,"isTcpSubchannelAddress"],[37,35,33,38],[37,36,33,39,"address2"],[37,44,33,47],[37,45,33,48],[37,49,34,12,"address1"],[37,57,34,20],[37,58,34,21,"host"],[37,62,34,25],[37,67,34,30,"address2"],[37,75,34,38],[37,76,34,39,"host"],[37,80,34,43],[37,84,35,12,"address1"],[37,92,35,20],[37,93,35,21,"port"],[37,97,35,25],[37,102,35,30,"address2"],[37,110,35,38],[37,111,35,39,"port"],[37,115,35,43],[38,4,36,4],[38,5,36,5],[38,11,37,9],[39,6,38,8],[39,13,38,15],[39,14,38,16,"isTcpSubchannelAddress"],[39,36,38,38],[39,37,38,39,"address2"],[39,45,38,47],[39,46,38,48],[39,50,38,52,"address1"],[39,58,38,60],[39,59,38,61,"path"],[39,63,38,65],[39,68,38,70,"address2"],[39,76,38,78],[39,77,38,79,"path"],[39,81,38,83],[40,4,39,4],[41,2,40,0],[42,2,41,0,"exports"],[42,9,41,7],[42,10,41,8,"subchannelAddressEqual"],[42,32,41,30],[42,35,41,33,"subchannelAddressEqual"],[42,57,41,55],[43,2,42,0],[43,11,42,9,"subchannelAddressToString"],[43,36,42,34,"subchannelAddressToString"],[43,37,42,35,"address"],[43,44,42,42],[43,46,42,44],[44,4,43,4],[44,8,43,8,"isTcpSubchannelAddress"],[44,30,43,30],[44,31,43,31,"address"],[44,38,43,38],[44,39,43,39],[44,41,43,41],[45,6,44,8],[45,13,44,15,"address"],[45,20,44,22],[45,21,44,23,"host"],[45,25,44,27],[45,28,44,30],[45,31,44,33],[45,34,44,36,"address"],[45,41,44,43],[45,42,44,44,"port"],[45,46,44,48],[46,4,45,4],[46,5,45,5],[46,11,46,9],[47,6,47,8],[47,13,47,15,"address"],[47,20,47,22],[47,21,47,23,"path"],[47,25,47,27],[48,4,48,4],[49,2,49,0],[50,2,50,0,"exports"],[50,9,50,7],[50,10,50,8,"subchannelAddressToString"],[50,35,50,33],[50,38,50,36,"subchannelAddressToString"],[50,63,50,61],[51,2,51,0],[51,8,51,6,"DEFAULT_PORT"],[51,20,51,18],[51,23,51,21],[51,26,51,24],[52,2,52,0],[52,11,52,9,"stringToSubchannelAddress"],[52,36,52,34,"stringToSubchannelAddress"],[52,37,52,35,"addressString"],[52,50,52,48],[52,52,52,50,"port"],[52,56,52,54],[52,58,52,56],[53,4,53,4],[53,8,53,8],[53,9,53,9],[53,10,53,10],[53,12,53,12,"net_1"],[53,17,53,17],[53,18,53,18,"isIP"],[53,22,53,22],[53,24,53,24,"addressString"],[53,37,53,37],[53,38,53,38],[53,40,53,40],[54,6,54,8],[54,13,54,15],[55,8,55,12,"host"],[55,12,55,16],[55,14,55,18,"addressString"],[55,27,55,31],[56,8,56,12,"port"],[56,12,56,16],[56,14,56,18,"port"],[56,18,56,22],[56,23,56,27],[56,27,56,31],[56,31,56,35,"port"],[56,35,56,39],[56,40,56,44],[56,45,56,49],[56,46,56,50],[56,49,56,53,"port"],[56,53,56,57],[56,56,56,60,"DEFAULT_PORT"],[57,6,57,8],[57,7,57,9],[58,4,58,4],[58,5,58,5],[58,11,59,9],[59,6,60,8],[59,13,60,15],[60,8,61,12,"path"],[60,12,61,16],[60,14,61,18,"addressString"],[61,6,62,8],[61,7,62,9],[62,4,63,4],[63,2,64,0],[64,2,65,0,"exports"],[64,9,65,7],[64,10,65,8,"stringToSubchannelAddress"],[64,35,65,33],[64,38,65,36,"stringToSubchannelAddress"],[64,63,65,61],[65,0,65,62],[65,3]],"functionMap":{"names":["<global>","isTcpSubchannelAddress","subchannelAddressEqual","subchannelAddressToString","stringToSubchannelAddress"],"mappings":"AAA;ACoB;CDE;AEE;CFe;AGE;CHO;AIG;CJY"}},"type":"js/module"}]}