{"dependencies":[{"name":"./object","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":23,"index":90},"end":{"line":5,"column":42,"index":109}}],"key":"xOxKVS7k9wOBO7C50gqXbLVMn/0=","exportNames":["*"]}},{"name":"./field","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":12,"index":229},"end":{"line":8,"column":30,"index":247}}],"key":"NvI2xXoYDS7eVNBPYDi7RsbVioc=","exportNames":["*"]}},{"name":"./util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":12,"index":261},"end":{"line":9,"column":29,"index":278}}],"key":"hA8WsniBZrUJ/dmBZgrNdZcEmJ8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  module.exports = OneOf;\n\n  // extends ReflectionObject\n  var ReflectionObject = require(_dependencyMap[0], \"./object\");\n  ((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n  var Field = require(_dependencyMap[1], \"./field\"),\n    util = require(_dependencyMap[2], \"./util\");\n\n  /**\n   * Constructs a new oneof instance.\n   * @classdesc Reflected oneof.\n   * @extends ReflectionObject\n   * @constructor\n   * @param {string} name Oneof name\n   * @param {string[]|Object.<string,*>} [fieldNames] Field names\n   * @param {Object.<string,*>} [options] Declared options\n   * @param {string} [comment] Comment associated with this field\n   */\n  function OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n      options = fieldNames;\n      fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames))) throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n  }\n\n  /**\n   * Oneof descriptor.\n   * @interface IOneOf\n   * @property {Array.<string>} oneof Oneof field names\n   * @property {Object.<string,*>} [options] Oneof options\n   */\n\n  /**\n   * Constructs a oneof from a oneof descriptor.\n   * @param {string} name Oneof name\n   * @param {IOneOf} json Oneof descriptor\n   * @returns {OneOf} Created oneof\n   * @throws {TypeError} If arguments are invalid\n   */\n  OneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n  };\n\n  /**\n   * Converts this oneof to a oneof descriptor.\n   * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n   * @returns {IOneOf} Oneof descriptor\n   */\n  OneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\"options\", this.options, \"oneof\", this.oneof, \"comment\", keepComments ? this.comment : undefined]);\n  };\n\n  /**\n   * Adds the fields of the specified oneof to the parent if not already done so.\n   * @param {OneOf} oneof The oneof\n   * @returns {undefined}\n   * @inner\n   * @ignore\n   */\n  function addFieldsToParent(oneof) {\n    if (oneof.parent) for (var i = 0; i < oneof.fieldsArray.length; ++i) if (!oneof.fieldsArray[i].parent) oneof.parent.add(oneof.fieldsArray[i]);\n  }\n\n  /**\n   * Adds a field to this oneof and removes it from its current parent, if any.\n   * @param {Field} field Field to add\n   * @returns {OneOf} `this`\n   */\n  OneOf.prototype.add = function add(field) {\n    /* istanbul ignore if */\n    if (!(field instanceof Field)) throw TypeError(\"field must be a Field\");\n    if (field.parent && field.parent !== this.parent) field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n  };\n\n  /**\n   * Removes a field from this oneof and puts it back to the oneof's parent.\n   * @param {Field} field Field to remove\n   * @returns {OneOf} `this`\n   */\n  OneOf.prototype.remove = function remove(field) {\n    /* istanbul ignore if */\n    if (!(field instanceof Field)) throw TypeError(\"field must be a Field\");\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0) throw Error(field + \" is not a member of \" + this);\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1)\n      // theoretical\n      this.oneof.splice(index, 1);\n    field.partOf = null;\n    return this;\n  };\n\n  /**\n   * @override\n   */\n  OneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n      var field = parent.get(this.oneof[i]);\n      if (field && !field.partOf) {\n        field.partOf = self;\n        self.fieldsArray.push(field);\n      }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n  };\n\n  /**\n   * @override\n   */\n  OneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i) if ((field = this.fieldsArray[i]).parent) field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n  };\n\n  /**\n   * Determines whether this field corresponds to a synthetic oneof created for\n   * a proto3 optional field.  No behavioral logic should depend on this, but it\n   * can be relevant for reflection.\n   * @name OneOf#isProto3Optional\n   * @type {boolean}\n   * @readonly\n   */\n  Object.defineProperty(OneOf.prototype, \"isProto3Optional\", {\n    get: function () {\n      if (this.fieldsArray == null || this.fieldsArray.length !== 1) {\n        return false;\n      }\n      var field = this.fieldsArray[0];\n      return field.options != null && field.options[\"proto3_optional\"] === true;\n    }\n  });\n\n  /**\n   * Decorator function as returned by {@link OneOf.d} (TypeScript).\n   * @typedef OneOfDecorator\n   * @type {function}\n   * @param {Object} prototype Target prototype\n   * @param {string} oneofName OneOf name\n   * @returns {undefined}\n   */\n\n  /**\n   * OneOf decorator (TypeScript).\n   * @function\n   * @param {...string} fieldNames Field names\n   * @returns {OneOfDecorator} Decorator function\n   * @template T extends string\n   */\n  OneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n      index = 0;\n    while (index < arguments.length) fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n      util.decorateType(prototype.constructor).add(new OneOf(oneofName, fieldNames));\n      Object.defineProperty(prototype, oneofName, {\n        get: util.oneOfGetter(fieldNames),\n        set: util.oneOfSetter(fieldNames)\n      });\n    };\n  };\n});","lineCount":202,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"module"],[4,8,2,6],[4,9,2,7,"exports"],[4,16,2,14],[4,19,2,17,"OneOf"],[4,24,2,22],[6,2,4,0],[7,2,5,0],[7,6,5,4,"ReflectionObject"],[7,22,5,20],[7,25,5,23,"require"],[7,32,5,30],[7,33,5,30,"_dependencyMap"],[7,47,5,30],[7,62,5,41],[7,63,5,42],[8,2,6,0],[8,3,6,1],[8,4,6,2,"OneOf"],[8,9,6,7],[8,10,6,8,"prototype"],[8,19,6,17],[8,22,6,20,"Object"],[8,28,6,26],[8,29,6,27,"create"],[8,35,6,33],[8,36,6,34,"ReflectionObject"],[8,52,6,50],[8,53,6,51,"prototype"],[8,62,6,60],[8,63,6,61],[8,65,6,63,"constructor"],[8,76,6,74],[8,79,6,77,"OneOf"],[8,84,6,82],[8,86,6,84,"className"],[8,95,6,93],[8,98,6,96],[8,105,6,103],[9,2,8,0],[9,6,8,4,"Field"],[9,11,8,9],[9,14,8,12,"require"],[9,21,8,19],[9,22,8,19,"_dependencyMap"],[9,36,8,19],[9,50,8,29],[9,51,8,30],[10,4,9,4,"util"],[10,8,9,8],[10,11,9,12,"require"],[10,18,9,19],[10,19,9,19,"_dependencyMap"],[10,33,9,19],[10,46,9,28],[10,47,9,29],[12,2,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,2,21,0],[22,11,21,9,"OneOf"],[22,16,21,14,"OneOf"],[22,17,21,15,"name"],[22,21,21,19],[22,23,21,21,"fieldNames"],[22,33,21,31],[22,35,21,33,"options"],[22,42,21,40],[22,44,21,42,"comment"],[22,51,21,49],[22,53,21,51],[23,4,22,4],[23,8,22,8],[23,9,22,9,"Array"],[23,14,22,14],[23,15,22,15,"isArray"],[23,22,22,22],[23,23,22,23,"fieldNames"],[23,33,22,33],[23,34,22,34],[23,36,22,36],[24,6,23,8,"options"],[24,13,23,15],[24,16,23,18,"fieldNames"],[24,26,23,28],[25,6,24,8,"fieldNames"],[25,16,24,18],[25,19,24,21,"undefined"],[25,28,24,30],[26,4,25,4],[27,4,26,4,"ReflectionObject"],[27,20,26,20],[27,21,26,21,"call"],[27,25,26,25],[27,26,26,26],[27,30,26,30],[27,32,26,32,"name"],[27,36,26,36],[27,38,26,38,"options"],[27,45,26,45],[27,46,26,46],[29,4,28,4],[30,4,29,4],[30,8,29,8],[30,10,29,10,"fieldNames"],[30,20,29,20],[30,25,29,25,"undefined"],[30,34,29,34],[30,38,29,38,"Array"],[30,43,29,43],[30,44,29,44,"isArray"],[30,51,29,51],[30,52,29,52,"fieldNames"],[30,62,29,62],[30,63,29,63],[30,64,29,64],[30,66,30,8],[30,72,30,14,"TypeError"],[30,81,30,23],[30,82,30,24],[30,111,30,53],[30,112,30,54],[32,4,32,4],[33,0,33,0],[34,0,34,0],[35,0,35,0],[36,4,36,4],[36,8,36,8],[36,9,36,9,"oneof"],[36,14,36,14],[36,17,36,17,"fieldNames"],[36,27,36,27],[36,31,36,31],[36,33,36,33],[36,34,36,34],[36,35,36,35],[38,4,38,4],[39,0,39,0],[40,0,40,0],[41,0,41,0],[42,0,42,0],[43,4,43,4],[43,8,43,8],[43,9,43,9,"fieldsArray"],[43,20,43,20],[43,23,43,23],[43,25,43,25],[43,26,43,26],[43,27,43,27],[45,4,45,4],[46,0,46,0],[47,0,47,0],[48,0,48,0],[49,4,49,4],[49,8,49,8],[49,9,49,9,"comment"],[49,16,49,16],[49,19,49,19,"comment"],[49,26,49,26],[50,2,50,0],[52,2,52,0],[53,0,53,0],[54,0,54,0],[55,0,55,0],[56,0,56,0],[57,0,57,0],[59,2,59,0],[60,0,60,0],[61,0,61,0],[62,0,62,0],[63,0,63,0],[64,0,64,0],[65,0,65,0],[66,2,66,0,"OneOf"],[66,7,66,5],[66,8,66,6,"fromJSON"],[66,16,66,14],[66,19,66,17],[66,28,66,26,"fromJSON"],[66,36,66,34,"fromJSON"],[66,37,66,35,"name"],[66,41,66,39],[66,43,66,41,"json"],[66,47,66,45],[66,49,66,47],[67,4,67,4],[67,11,67,11],[67,15,67,15,"OneOf"],[67,20,67,20],[67,21,67,21,"name"],[67,25,67,25],[67,27,67,27,"json"],[67,31,67,31],[67,32,67,32,"oneof"],[67,37,67,37],[67,39,67,39,"json"],[67,43,67,43],[67,44,67,44,"options"],[67,51,67,51],[67,53,67,53,"json"],[67,57,67,57],[67,58,67,58,"comment"],[67,65,67,65],[67,66,67,66],[68,2,68,0],[68,3,68,1],[70,2,70,0],[71,0,71,0],[72,0,72,0],[73,0,73,0],[74,0,74,0],[75,2,75,0,"OneOf"],[75,7,75,5],[75,8,75,6,"prototype"],[75,17,75,15],[75,18,75,16,"toJSON"],[75,24,75,22],[75,27,75,25],[75,36,75,34,"toJSON"],[75,42,75,40,"toJSON"],[75,43,75,41,"toJSONOptions"],[75,56,75,54],[75,58,75,56],[76,4,76,4],[76,8,76,8,"keepComments"],[76,20,76,20],[76,23,76,23,"toJSONOptions"],[76,36,76,36],[76,39,76,39,"Boolean"],[76,46,76,46],[76,47,76,47,"toJSONOptions"],[76,60,76,60],[76,61,76,61,"keepComments"],[76,73,76,73],[76,74,76,74],[76,77,76,77],[76,82,76,82],[77,4,77,4],[77,11,77,11,"util"],[77,15,77,15],[77,16,77,16,"toObject"],[77,24,77,24],[77,25,77,25],[77,26,78,8],[77,35,78,17],[77,37,78,20],[77,41,78,24],[77,42,78,25,"options"],[77,49,78,32],[77,51,79,8],[77,58,79,15],[77,60,79,20],[77,64,79,24],[77,65,79,25,"oneof"],[77,70,79,30],[77,72,80,8],[77,81,80,17],[77,83,80,20,"keepComments"],[77,95,80,32],[77,98,80,35],[77,102,80,39],[77,103,80,40,"comment"],[77,110,80,47],[77,113,80,50,"undefined"],[77,122,80,59],[77,123,81,5],[77,124,81,6],[78,2,82,0],[78,3,82,1],[80,2,84,0],[81,0,85,0],[82,0,86,0],[83,0,87,0],[84,0,88,0],[85,0,89,0],[86,0,90,0],[87,2,91,0],[87,11,91,9,"addFieldsToParent"],[87,28,91,26,"addFieldsToParent"],[87,29,91,27,"oneof"],[87,34,91,32],[87,36,91,34],[88,4,92,4],[88,8,92,8,"oneof"],[88,13,92,13],[88,14,92,14,"parent"],[88,20,92,20],[88,22,93,8],[88,27,93,13],[88,31,93,17,"i"],[88,32,93,18],[88,35,93,21],[88,36,93,22],[88,38,93,24,"i"],[88,39,93,25],[88,42,93,28,"oneof"],[88,47,93,33],[88,48,93,34,"fieldsArray"],[88,59,93,45],[88,60,93,46,"length"],[88,66,93,52],[88,68,93,54],[88,70,93,56,"i"],[88,71,93,57],[88,73,94,12],[88,77,94,16],[88,78,94,17,"oneof"],[88,83,94,22],[88,84,94,23,"fieldsArray"],[88,95,94,34],[88,96,94,35,"i"],[88,97,94,36],[88,98,94,37],[88,99,94,38,"parent"],[88,105,94,44],[88,107,95,16,"oneof"],[88,112,95,21],[88,113,95,22,"parent"],[88,119,95,28],[88,120,95,29,"add"],[88,123,95,32],[88,124,95,33,"oneof"],[88,129,95,38],[88,130,95,39,"fieldsArray"],[88,141,95,50],[88,142,95,51,"i"],[88,143,95,52],[88,144,95,53],[88,145,95,54],[89,2,96,0],[91,2,98,0],[92,0,99,0],[93,0,100,0],[94,0,101,0],[95,0,102,0],[96,2,103,0,"OneOf"],[96,7,103,5],[96,8,103,6,"prototype"],[96,17,103,15],[96,18,103,16,"add"],[96,21,103,19],[96,24,103,22],[96,33,103,31,"add"],[96,36,103,34,"add"],[96,37,103,35,"field"],[96,42,103,40],[96,44,103,42],[97,4,105,4],[98,4,106,4],[98,8,106,8],[98,10,106,10,"field"],[98,15,106,15],[98,27,106,27,"Field"],[98,32,106,32],[98,33,106,33],[98,35,107,8],[98,41,107,14,"TypeError"],[98,50,107,23],[98,51,107,24],[98,74,107,47],[98,75,107,48],[99,4,109,4],[99,8,109,8,"field"],[99,13,109,13],[99,14,109,14,"parent"],[99,20,109,20],[99,24,109,24,"field"],[99,29,109,29],[99,30,109,30,"parent"],[99,36,109,36],[99,41,109,41],[99,45,109,45],[99,46,109,46,"parent"],[99,52,109,52],[99,54,110,8,"field"],[99,59,110,13],[99,60,110,14,"parent"],[99,66,110,20],[99,67,110,21,"remove"],[99,73,110,27],[99,74,110,28,"field"],[99,79,110,33],[99,80,110,34],[100,4,111,4],[100,8,111,8],[100,9,111,9,"oneof"],[100,14,111,14],[100,15,111,15,"push"],[100,19,111,19],[100,20,111,20,"field"],[100,25,111,25],[100,26,111,26,"name"],[100,30,111,30],[100,31,111,31],[101,4,112,4],[101,8,112,8],[101,9,112,9,"fieldsArray"],[101,20,112,20],[101,21,112,21,"push"],[101,25,112,25],[101,26,112,26,"field"],[101,31,112,31],[101,32,112,32],[102,4,113,4,"field"],[102,9,113,9],[102,10,113,10,"partOf"],[102,16,113,16],[102,19,113,19],[102,23,113,23],[102,24,113,24],[102,25,113,25],[103,4,114,4,"addFieldsToParent"],[103,21,114,21],[103,22,114,22],[103,26,114,26],[103,27,114,27],[104,4,115,4],[104,11,115,11],[104,15,115,15],[105,2,116,0],[105,3,116,1],[107,2,118,0],[108,0,119,0],[109,0,120,0],[110,0,121,0],[111,0,122,0],[112,2,123,0,"OneOf"],[112,7,123,5],[112,8,123,6,"prototype"],[112,17,123,15],[112,18,123,16,"remove"],[112,24,123,22],[112,27,123,25],[112,36,123,34,"remove"],[112,42,123,40,"remove"],[112,43,123,41,"field"],[112,48,123,46],[112,50,123,48],[113,4,125,4],[114,4,126,4],[114,8,126,8],[114,10,126,10,"field"],[114,15,126,15],[114,27,126,27,"Field"],[114,32,126,32],[114,33,126,33],[114,35,127,8],[114,41,127,14,"TypeError"],[114,50,127,23],[114,51,127,24],[114,74,127,47],[114,75,127,48],[115,4,129,4],[115,8,129,8,"index"],[115,13,129,13],[115,16,129,16],[115,20,129,20],[115,21,129,21,"fieldsArray"],[115,32,129,32],[115,33,129,33,"indexOf"],[115,40,129,40],[115,41,129,41,"field"],[115,46,129,46],[115,47,129,47],[117,4,131,4],[118,4,132,4],[118,8,132,8,"index"],[118,13,132,13],[118,16,132,16],[118,17,132,17],[118,19,133,8],[118,25,133,14,"Error"],[118,30,133,19],[118,31,133,20,"field"],[118,36,133,25],[118,39,133,28],[118,61,133,50],[118,64,133,53],[118,68,133,57],[118,69,133,58],[119,4,135,4],[119,8,135,8],[119,9,135,9,"fieldsArray"],[119,20,135,20],[119,21,135,21,"splice"],[119,27,135,27],[119,28,135,28,"index"],[119,33,135,33],[119,35,135,35],[119,36,135,36],[119,37,135,37],[120,4,136,4,"index"],[120,9,136,9],[120,12,136,12],[120,16,136,16],[120,17,136,17,"oneof"],[120,22,136,22],[120,23,136,23,"indexOf"],[120,30,136,30],[120,31,136,31,"field"],[120,36,136,36],[120,37,136,37,"name"],[120,41,136,41],[120,42,136,42],[122,4,138,4],[123,4,139,4],[123,8,139,8,"index"],[123,13,139,13],[123,16,139,16],[123,17,139,17],[123,18,139,18],[124,6,139,20],[125,6,140,8],[125,10,140,12],[125,11,140,13,"oneof"],[125,16,140,18],[125,17,140,19,"splice"],[125,23,140,25],[125,24,140,26,"index"],[125,29,140,31],[125,31,140,33],[125,32,140,34],[125,33,140,35],[126,4,142,4,"field"],[126,9,142,9],[126,10,142,10,"partOf"],[126,16,142,16],[126,19,142,19],[126,23,142,23],[127,4,143,4],[127,11,143,11],[127,15,143,15],[128,2,144,0],[128,3,144,1],[130,2,146,0],[131,0,147,0],[132,0,148,0],[133,2,149,0,"OneOf"],[133,7,149,5],[133,8,149,6,"prototype"],[133,17,149,15],[133,18,149,16,"onAdd"],[133,23,149,21],[133,26,149,24],[133,35,149,33,"onAdd"],[133,40,149,38,"onAdd"],[133,41,149,39,"parent"],[133,47,149,45],[133,49,149,47],[134,4,150,4,"ReflectionObject"],[134,20,150,20],[134,21,150,21,"prototype"],[134,30,150,30],[134,31,150,31,"onAdd"],[134,36,150,36],[134,37,150,37,"call"],[134,41,150,41],[134,42,150,42],[134,46,150,46],[134,48,150,48,"parent"],[134,54,150,54],[134,55,150,55],[135,4,151,4],[135,8,151,8,"self"],[135,12,151,12],[135,15,151,15],[135,19,151,19],[136,4,152,4],[137,4,153,4],[137,9,153,9],[137,13,153,13,"i"],[137,14,153,14],[137,17,153,17],[137,18,153,18],[137,20,153,20,"i"],[137,21,153,21],[137,24,153,24],[137,28,153,28],[137,29,153,29,"oneof"],[137,34,153,34],[137,35,153,35,"length"],[137,41,153,41],[137,43,153,43],[137,45,153,45,"i"],[137,46,153,46],[137,48,153,48],[138,6,154,8],[138,10,154,12,"field"],[138,15,154,17],[138,18,154,20,"parent"],[138,24,154,26],[138,25,154,27,"get"],[138,28,154,30],[138,29,154,31],[138,33,154,35],[138,34,154,36,"oneof"],[138,39,154,41],[138,40,154,42,"i"],[138,41,154,43],[138,42,154,44],[138,43,154,45],[139,6,155,8],[139,10,155,12,"field"],[139,15,155,17],[139,19,155,21],[139,20,155,22,"field"],[139,25,155,27],[139,26,155,28,"partOf"],[139,32,155,34],[139,34,155,36],[140,8,156,12,"field"],[140,13,156,17],[140,14,156,18,"partOf"],[140,20,156,24],[140,23,156,27,"self"],[140,27,156,31],[141,8,157,12,"self"],[141,12,157,16],[141,13,157,17,"fieldsArray"],[141,24,157,28],[141,25,157,29,"push"],[141,29,157,33],[141,30,157,34,"field"],[141,35,157,39],[141,36,157,40],[142,6,158,8],[143,4,159,4],[144,4,160,4],[145,4,161,4,"addFieldsToParent"],[145,21,161,21],[145,22,161,22],[145,26,161,26],[145,27,161,27],[146,2,162,0],[146,3,162,1],[148,2,164,0],[149,0,165,0],[150,0,166,0],[151,2,167,0,"OneOf"],[151,7,167,5],[151,8,167,6,"prototype"],[151,17,167,15],[151,18,167,16,"onRemove"],[151,26,167,24],[151,29,167,27],[151,38,167,36,"onRemove"],[151,46,167,44,"onRemove"],[151,47,167,45,"parent"],[151,53,167,51],[151,55,167,53],[152,4,168,4],[152,9,168,9],[152,13,168,13,"i"],[152,14,168,14],[152,17,168,17],[152,18,168,18],[152,20,168,20,"field"],[152,25,168,25],[152,27,168,27,"i"],[152,28,168,28],[152,31,168,31],[152,35,168,35],[152,36,168,36,"fieldsArray"],[152,47,168,47],[152,48,168,48,"length"],[152,54,168,54],[152,56,168,56],[152,58,168,58,"i"],[152,59,168,59],[152,61,169,8],[152,65,169,12],[152,66,169,13,"field"],[152,71,169,18],[152,74,169,21],[152,78,169,25],[152,79,169,26,"fieldsArray"],[152,90,169,37],[152,91,169,38,"i"],[152,92,169,39],[152,93,169,40],[152,95,169,42,"parent"],[152,101,169,48],[152,103,170,12,"field"],[152,108,170,17],[152,109,170,18,"parent"],[152,115,170,24],[152,116,170,25,"remove"],[152,122,170,31],[152,123,170,32,"field"],[152,128,170,37],[152,129,170,38],[153,4,171,4,"ReflectionObject"],[153,20,171,20],[153,21,171,21,"prototype"],[153,30,171,30],[153,31,171,31,"onRemove"],[153,39,171,39],[153,40,171,40,"call"],[153,44,171,44],[153,45,171,45],[153,49,171,49],[153,51,171,51,"parent"],[153,57,171,57],[153,58,171,58],[154,2,172,0],[154,3,172,1],[156,2,174,0],[157,0,175,0],[158,0,176,0],[159,0,177,0],[160,0,178,0],[161,0,179,0],[162,0,180,0],[163,0,181,0],[164,2,182,0,"Object"],[164,8,182,6],[164,9,182,7,"defineProperty"],[164,23,182,21],[164,24,182,22,"OneOf"],[164,29,182,27],[164,30,182,28,"prototype"],[164,39,182,37],[164,41,182,39],[164,59,182,57],[164,61,182,59],[165,4,183,4,"get"],[165,7,183,7],[165,9,183,9],[165,18,183,9,"get"],[165,19,183,9],[165,21,183,20],[166,6,184,8],[166,10,184,12],[166,14,184,16],[166,15,184,17,"fieldsArray"],[166,26,184,28],[166,30,184,32],[166,34,184,36],[166,38,184,40],[166,42,184,44],[166,43,184,45,"fieldsArray"],[166,54,184,56],[166,55,184,57,"length"],[166,61,184,63],[166,66,184,68],[166,67,184,69],[166,69,184,71],[167,8,185,12],[167,15,185,19],[167,20,185,24],[168,6,186,8],[169,6,188,8],[169,10,188,12,"field"],[169,15,188,17],[169,18,188,20],[169,22,188,24],[169,23,188,25,"fieldsArray"],[169,34,188,36],[169,35,188,37],[169,36,188,38],[169,37,188,39],[170,6,189,8],[170,13,189,15,"field"],[170,18,189,20],[170,19,189,21,"options"],[170,26,189,28],[170,30,189,32],[170,34,189,36],[170,38,189,40,"field"],[170,43,189,45],[170,44,189,46,"options"],[170,51,189,53],[170,52,189,54],[170,69,189,71],[170,70,189,72],[170,75,189,77],[170,79,189,81],[171,4,190,4],[172,2,191,0],[172,3,191,1],[172,4,191,2],[174,2,193,0],[175,0,194,0],[176,0,195,0],[177,0,196,0],[178,0,197,0],[179,0,198,0],[180,0,199,0],[181,0,200,0],[183,2,202,0],[184,0,203,0],[185,0,204,0],[186,0,205,0],[187,0,206,0],[188,0,207,0],[189,0,208,0],[190,2,209,0,"OneOf"],[190,7,209,5],[190,8,209,6,"d"],[190,9,209,7],[190,12,209,10],[190,21,209,19,"decorateOneOf"],[190,34,209,32,"decorateOneOf"],[190,35,209,32],[190,37,209,35],[191,4,210,4],[191,8,210,8,"fieldNames"],[191,18,210,18],[191,21,210,21],[191,25,210,25,"Array"],[191,30,210,30],[191,31,210,31,"arguments"],[191,40,210,40],[191,41,210,41,"length"],[191,47,210,47],[191,48,210,48],[192,6,211,8,"index"],[192,11,211,13],[192,14,211,16],[192,15,211,17],[193,4,212,4],[193,11,212,11,"index"],[193,16,212,16],[193,19,212,19,"arguments"],[193,28,212,28],[193,29,212,29,"length"],[193,35,212,35],[193,37,213,8,"fieldNames"],[193,47,213,18],[193,48,213,19,"index"],[193,53,213,24],[193,54,213,25],[193,57,213,28,"arguments"],[193,66,213,37],[193,67,213,38,"index"],[193,72,213,43],[193,74,213,45],[193,75,213,46],[194,4,214,4],[194,11,214,11],[194,20,214,20,"oneOfDecorator"],[194,34,214,34,"oneOfDecorator"],[194,35,214,35,"prototype"],[194,44,214,44],[194,46,214,46,"oneofName"],[194,55,214,55],[194,57,214,57],[195,6,215,8,"util"],[195,10,215,12],[195,11,215,13,"decorateType"],[195,23,215,25],[195,24,215,26,"prototype"],[195,33,215,35],[195,34,215,36,"constructor"],[195,45,215,47],[195,46,215,48],[195,47,216,13,"add"],[195,50,216,16],[195,51,216,17],[195,55,216,21,"OneOf"],[195,60,216,26],[195,61,216,27,"oneofName"],[195,70,216,36],[195,72,216,38,"fieldNames"],[195,82,216,48],[195,83,216,49],[195,84,216,50],[196,6,217,8,"Object"],[196,12,217,14],[196,13,217,15,"defineProperty"],[196,27,217,29],[196,28,217,30,"prototype"],[196,37,217,39],[196,39,217,41,"oneofName"],[196,48,217,50],[196,50,217,52],[197,8,218,12,"get"],[197,11,218,15],[197,13,218,17,"util"],[197,17,218,21],[197,18,218,22,"oneOfGetter"],[197,29,218,33],[197,30,218,34,"fieldNames"],[197,40,218,44],[197,41,218,45],[198,8,219,12,"set"],[198,11,219,15],[198,13,219,17,"util"],[198,17,219,21],[198,18,219,22,"oneOfSetter"],[198,29,219,33],[198,30,219,34,"fieldNames"],[198,40,219,44],[199,6,220,8],[199,7,220,9],[199,8,220,10],[200,4,221,4],[200,5,221,5],[201,2,222,0],[201,3,222,1],[202,0,222,2],[202,3]],"functionMap":{"names":["<global>","OneOf","fromJSON","toJSON","addFieldsToParent","add","remove","onAdd","onRemove","Object.defineProperty$argument_2.get","decorateOneOf","oneOfDecorator"],"mappings":"AAA;ACoB;CD6B;iBEgB;CFE;yBGO;CHO;AIS;CJK;sBKO;CLa;yBMO;CNqB;wBOK;CPa;2BQK;CRK;SSW;KTO;UUmB;WCK;KDO;CVC"}},"type":"js/module"}]}