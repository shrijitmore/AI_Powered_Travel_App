{"dependencies":[{"name":"./metadata","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":19,"index":730},"end":{"line":20,"column":40,"index":751}}],"key":"6KRjstwF8yWfkztxpqnIypQq1mI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2019 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.CallCredentials = void 0;\n  const metadata_1 = require(_dependencyMap[0], \"./metadata\");\n  function isCurrentOauth2Client(client) {\n    return 'getRequestHeaders' in client && typeof client.getRequestHeaders === 'function';\n  }\n  /**\n   * A class that represents a generic method of adding authentication-related\n   * metadata on a per-request basis.\n   */\n  class CallCredentials {\n    /**\n     * Creates a new CallCredentials object from a given function that generates\n     * Metadata objects.\n     * @param metadataGenerator A function that accepts a set of options, and\n     * generates a Metadata object based on these options, which is passed back\n     * to the caller via a supplied (err, metadata) callback.\n     */\n    static createFromMetadataGenerator(metadataGenerator) {\n      return new SingleCallCredentials(metadataGenerator);\n    }\n    /**\n     * Create a gRPC credential from a Google credential object.\n     * @param googleCredentials The authentication client to use.\n     * @return The resulting CallCredentials object.\n     */\n    static createFromGoogleCredential(googleCredentials) {\n      return CallCredentials.createFromMetadataGenerator((options, callback) => {\n        let getHeaders;\n        if (isCurrentOauth2Client(googleCredentials)) {\n          getHeaders = googleCredentials.getRequestHeaders(options.service_url);\n        } else {\n          getHeaders = new Promise((resolve, reject) => {\n            googleCredentials.getRequestMetadata(options.service_url, (err, headers) => {\n              if (err) {\n                reject(err);\n                return;\n              }\n              if (!headers) {\n                reject(new Error('Headers not set by metadata plugin'));\n                return;\n              }\n              resolve(headers);\n            });\n          });\n        }\n        getHeaders.then(headers => {\n          const metadata = new metadata_1.Metadata();\n          for (const key of Object.keys(headers)) {\n            metadata.add(key, headers[key]);\n          }\n          callback(null, metadata);\n        }, err => {\n          callback(err);\n        });\n      });\n    }\n    static createEmpty() {\n      return new EmptyCallCredentials();\n    }\n  }\n  exports.CallCredentials = CallCredentials;\n  class ComposedCallCredentials extends CallCredentials {\n    constructor(creds) {\n      super();\n      this.creds = creds;\n    }\n    async generateMetadata(options) {\n      const base = new metadata_1.Metadata();\n      const generated = await Promise.all(this.creds.map(cred => cred.generateMetadata(options)));\n      for (const gen of generated) {\n        base.merge(gen);\n      }\n      return base;\n    }\n    compose(other) {\n      return new ComposedCallCredentials(this.creds.concat([other]));\n    }\n    _equals(other) {\n      if (this === other) {\n        return true;\n      }\n      if (other instanceof ComposedCallCredentials) {\n        return this.creds.every((value, index) => value._equals(other.creds[index]));\n      } else {\n        return false;\n      }\n    }\n  }\n  class SingleCallCredentials extends CallCredentials {\n    constructor(metadataGenerator) {\n      super();\n      this.metadataGenerator = metadataGenerator;\n    }\n    generateMetadata(options) {\n      return new Promise((resolve, reject) => {\n        this.metadataGenerator(options, (err, metadata) => {\n          if (metadata !== undefined) {\n            resolve(metadata);\n          } else {\n            reject(err);\n          }\n        });\n      });\n    }\n    compose(other) {\n      return new ComposedCallCredentials([this, other]);\n    }\n    _equals(other) {\n      if (this === other) {\n        return true;\n      }\n      if (other instanceof SingleCallCredentials) {\n        return this.metadataGenerator === other.metadataGenerator;\n      } else {\n        return false;\n      }\n    }\n  }\n  class EmptyCallCredentials extends CallCredentials {\n    generateMetadata(options) {\n      return Promise.resolve(new metadata_1.Metadata());\n    }\n    compose(other) {\n      return other;\n    }\n    _equals(other) {\n      return other instanceof EmptyCallCredentials;\n    }\n  }\n});","lineCount":152,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,2,18,0,"Object"],[20,8,18,6],[20,9,18,7,"defineProperty"],[20,23,18,21],[20,24,18,22,"exports"],[20,31,18,29],[20,33,18,31],[20,45,18,43],[20,47,18,45],[21,4,18,47,"value"],[21,9,18,52],[21,11,18,54],[22,2,18,59],[22,3,18,60],[22,4,18,61],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"CallCredentials"],[23,25,19,23],[23,28,19,26],[23,33,19,31],[23,34,19,32],[24,2,20,0],[24,8,20,6,"metadata_1"],[24,18,20,16],[24,21,20,19,"require"],[24,28,20,26],[24,29,20,26,"_dependencyMap"],[24,43,20,26],[24,60,20,39],[24,61,20,40],[25,2,21,0],[25,11,21,9,"isCurrentOauth2Client"],[25,32,21,30,"isCurrentOauth2Client"],[25,33,21,31,"client"],[25,39,21,37],[25,41,21,39],[26,4,22,4],[26,11,22,12],[26,30,22,31],[26,34,22,35,"client"],[26,40,22,41],[26,44,23,8],[26,51,23,15,"client"],[26,57,23,21],[26,58,23,22,"getRequestHeaders"],[26,75,23,39],[26,80,23,44],[26,90,23,54],[27,2,24,0],[28,2,25,0],[29,0,26,0],[30,0,27,0],[31,0,28,0],[32,2,29,0],[32,8,29,6,"CallCredentials"],[32,23,29,21],[32,24,29,22],[33,4,30,4],[34,0,31,0],[35,0,32,0],[36,0,33,0],[37,0,34,0],[38,0,35,0],[39,0,36,0],[40,4,37,4],[40,11,37,11,"createFromMetadataGenerator"],[40,38,37,38,"createFromMetadataGenerator"],[40,39,37,39,"metadataGenerator"],[40,56,37,56],[40,58,37,58],[41,6,38,8],[41,13,38,15],[41,17,38,19,"SingleCallCredentials"],[41,38,38,40],[41,39,38,41,"metadataGenerator"],[41,56,38,58],[41,57,38,59],[42,4,39,4],[43,4,40,4],[44,0,41,0],[45,0,42,0],[46,0,43,0],[47,0,44,0],[48,4,45,4],[48,11,45,11,"createFromGoogleCredential"],[48,37,45,37,"createFromGoogleCredential"],[48,38,45,38,"googleCredentials"],[48,55,45,55],[48,57,45,57],[49,6,46,8],[49,13,46,15,"CallCredentials"],[49,28,46,30],[49,29,46,31,"createFromMetadataGenerator"],[49,56,46,58],[49,57,46,59],[49,58,46,60,"options"],[49,65,46,67],[49,67,46,69,"callback"],[49,75,46,77],[49,80,46,82],[50,8,47,12],[50,12,47,16,"getHeaders"],[50,22,47,26],[51,8,48,12],[51,12,48,16,"isCurrentOauth2Client"],[51,33,48,37],[51,34,48,38,"googleCredentials"],[51,51,48,55],[51,52,48,56],[51,54,48,58],[52,10,49,16,"getHeaders"],[52,20,49,26],[52,23,49,29,"googleCredentials"],[52,40,49,46],[52,41,49,47,"getRequestHeaders"],[52,58,49,64],[52,59,49,65,"options"],[52,66,49,72],[52,67,49,73,"service_url"],[52,78,49,84],[52,79,49,85],[53,8,50,12],[53,9,50,13],[53,15,51,17],[54,10,52,16,"getHeaders"],[54,20,52,26],[54,23,52,29],[54,27,52,33,"Promise"],[54,34,52,40],[54,35,52,41],[54,36,52,42,"resolve"],[54,43,52,49],[54,45,52,51,"reject"],[54,51,52,57],[54,56,52,62],[55,12,53,20,"googleCredentials"],[55,29,53,37],[55,30,53,38,"getRequestMetadata"],[55,48,53,56],[55,49,53,57,"options"],[55,56,53,64],[55,57,53,65,"service_url"],[55,68,53,76],[55,70,53,78],[55,71,53,79,"err"],[55,74,53,82],[55,76,53,84,"headers"],[55,83,53,91],[55,88,53,96],[56,14,54,24],[56,18,54,28,"err"],[56,21,54,31],[56,23,54,33],[57,16,55,28,"reject"],[57,22,55,34],[57,23,55,35,"err"],[57,26,55,38],[57,27,55,39],[58,16,56,28],[59,14,57,24],[60,14,58,24],[60,18,58,28],[60,19,58,29,"headers"],[60,26,58,36],[60,28,58,38],[61,16,59,28,"reject"],[61,22,59,34],[61,23,59,35],[61,27,59,39,"Error"],[61,32,59,44],[61,33,59,45],[61,69,59,81],[61,70,59,82],[61,71,59,83],[62,16,60,28],[63,14,61,24],[64,14,62,24,"resolve"],[64,21,62,31],[64,22,62,32,"headers"],[64,29,62,39],[64,30,62,40],[65,12,63,20],[65,13,63,21],[65,14,63,22],[66,10,64,16],[66,11,64,17],[66,12,64,18],[67,8,65,12],[68,8,66,12,"getHeaders"],[68,18,66,22],[68,19,66,23,"then"],[68,23,66,27],[68,24,66,28,"headers"],[68,31,66,35],[68,35,66,39],[69,10,67,16],[69,16,67,22,"metadata"],[69,24,67,30],[69,27,67,33],[69,31,67,37,"metadata_1"],[69,41,67,47],[69,42,67,48,"Metadata"],[69,50,67,56],[69,51,67,57],[69,52,67,58],[70,10,68,16],[70,15,68,21],[70,21,68,27,"key"],[70,24,68,30],[70,28,68,34,"Object"],[70,34,68,40],[70,35,68,41,"keys"],[70,39,68,45],[70,40,68,46,"headers"],[70,47,68,53],[70,48,68,54],[70,50,68,56],[71,12,69,20,"metadata"],[71,20,69,28],[71,21,69,29,"add"],[71,24,69,32],[71,25,69,33,"key"],[71,28,69,36],[71,30,69,38,"headers"],[71,37,69,45],[71,38,69,46,"key"],[71,41,69,49],[71,42,69,50],[71,43,69,51],[72,10,70,16],[73,10,71,16,"callback"],[73,18,71,24],[73,19,71,25],[73,23,71,29],[73,25,71,31,"metadata"],[73,33,71,39],[73,34,71,40],[74,8,72,12],[74,9,72,13],[74,11,72,15,"err"],[74,14,72,18],[74,18,72,22],[75,10,73,16,"callback"],[75,18,73,24],[75,19,73,25,"err"],[75,22,73,28],[75,23,73,29],[76,8,74,12],[76,9,74,13],[76,10,74,14],[77,6,75,8],[77,7,75,9],[77,8,75,10],[78,4,76,4],[79,4,77,4],[79,11,77,11,"createEmpty"],[79,22,77,22,"createEmpty"],[79,23,77,22],[79,25,77,25],[80,6,78,8],[80,13,78,15],[80,17,78,19,"EmptyCallCredentials"],[80,37,78,39],[80,38,78,40],[80,39,78,41],[81,4,79,4],[82,2,80,0],[83,2,81,0,"exports"],[83,9,81,7],[83,10,81,8,"CallCredentials"],[83,25,81,23],[83,28,81,26,"CallCredentials"],[83,43,81,41],[84,2,82,0],[84,8,82,6,"ComposedCallCredentials"],[84,31,82,29],[84,40,82,38,"CallCredentials"],[84,55,82,53],[84,56,82,54],[85,4,83,4,"constructor"],[85,15,83,15,"constructor"],[85,16,83,16,"creds"],[85,21,83,21],[85,23,83,23],[86,6,84,8],[86,11,84,13],[86,12,84,14],[86,13,84,15],[87,6,85,8],[87,10,85,12],[87,11,85,13,"creds"],[87,16,85,18],[87,19,85,21,"creds"],[87,24,85,26],[88,4,86,4],[89,4,87,4],[89,10,87,10,"generateMetadata"],[89,26,87,26,"generateMetadata"],[89,27,87,27,"options"],[89,34,87,34],[89,36,87,36],[90,6,88,8],[90,12,88,14,"base"],[90,16,88,18],[90,19,88,21],[90,23,88,25,"metadata_1"],[90,33,88,35],[90,34,88,36,"Metadata"],[90,42,88,44],[90,43,88,45],[90,44,88,46],[91,6,89,8],[91,12,89,14,"generated"],[91,21,89,23],[91,24,89,26],[91,30,89,32,"Promise"],[91,37,89,39],[91,38,89,40,"all"],[91,41,89,43],[91,42,89,44],[91,46,89,48],[91,47,89,49,"creds"],[91,52,89,54],[91,53,89,55,"map"],[91,56,89,58],[91,57,89,59,"cred"],[91,61,89,63],[91,65,89,67,"cred"],[91,69,89,71],[91,70,89,72,"generateMetadata"],[91,86,89,88],[91,87,89,89,"options"],[91,94,89,96],[91,95,89,97],[91,96,89,98],[91,97,89,99],[92,6,90,8],[92,11,90,13],[92,17,90,19,"gen"],[92,20,90,22],[92,24,90,26,"generated"],[92,33,90,35],[92,35,90,37],[93,8,91,12,"base"],[93,12,91,16],[93,13,91,17,"merge"],[93,18,91,22],[93,19,91,23,"gen"],[93,22,91,26],[93,23,91,27],[94,6,92,8],[95,6,93,8],[95,13,93,15,"base"],[95,17,93,19],[96,4,94,4],[97,4,95,4,"compose"],[97,11,95,11,"compose"],[97,12,95,12,"other"],[97,17,95,17],[97,19,95,19],[98,6,96,8],[98,13,96,15],[98,17,96,19,"ComposedCallCredentials"],[98,40,96,42],[98,41,96,43],[98,45,96,47],[98,46,96,48,"creds"],[98,51,96,53],[98,52,96,54,"concat"],[98,58,96,60],[98,59,96,61],[98,60,96,62,"other"],[98,65,96,67],[98,66,96,68],[98,67,96,69],[98,68,96,70],[99,4,97,4],[100,4,98,4,"_equals"],[100,11,98,11,"_equals"],[100,12,98,12,"other"],[100,17,98,17],[100,19,98,19],[101,6,99,8],[101,10,99,12],[101,14,99,16],[101,19,99,21,"other"],[101,24,99,26],[101,26,99,28],[102,8,100,12],[102,15,100,19],[102,19,100,23],[103,6,101,8],[104,6,102,8],[104,10,102,12,"other"],[104,15,102,17],[104,27,102,29,"ComposedCallCredentials"],[104,50,102,52],[104,52,102,54],[105,8,103,12],[105,15,103,19],[105,19,103,23],[105,20,103,24,"creds"],[105,25,103,29],[105,26,103,30,"every"],[105,31,103,35],[105,32,103,36],[105,33,103,37,"value"],[105,38,103,42],[105,40,103,44,"index"],[105,45,103,49],[105,50,103,54,"value"],[105,55,103,59],[105,56,103,60,"_equals"],[105,63,103,67],[105,64,103,68,"other"],[105,69,103,73],[105,70,103,74,"creds"],[105,75,103,79],[105,76,103,80,"index"],[105,81,103,85],[105,82,103,86],[105,83,103,87],[105,84,103,88],[106,6,104,8],[106,7,104,9],[106,13,105,13],[107,8,106,12],[107,15,106,19],[107,20,106,24],[108,6,107,8],[109,4,108,4],[110,2,109,0],[111,2,110,0],[111,8,110,6,"SingleCallCredentials"],[111,29,110,27],[111,38,110,36,"CallCredentials"],[111,53,110,51],[111,54,110,52],[112,4,111,4,"constructor"],[112,15,111,15,"constructor"],[112,16,111,16,"metadataGenerator"],[112,33,111,33],[112,35,111,35],[113,6,112,8],[113,11,112,13],[113,12,112,14],[113,13,112,15],[114,6,113,8],[114,10,113,12],[114,11,113,13,"metadataGenerator"],[114,28,113,30],[114,31,113,33,"metadataGenerator"],[114,48,113,50],[115,4,114,4],[116,4,115,4,"generateMetadata"],[116,20,115,20,"generateMetadata"],[116,21,115,21,"options"],[116,28,115,28],[116,30,115,30],[117,6,116,8],[117,13,116,15],[117,17,116,19,"Promise"],[117,24,116,26],[117,25,116,27],[117,26,116,28,"resolve"],[117,33,116,35],[117,35,116,37,"reject"],[117,41,116,43],[117,46,116,48],[118,8,117,12],[118,12,117,16],[118,13,117,17,"metadataGenerator"],[118,30,117,34],[118,31,117,35,"options"],[118,38,117,42],[118,40,117,44],[118,41,117,45,"err"],[118,44,117,48],[118,46,117,50,"metadata"],[118,54,117,58],[118,59,117,63],[119,10,118,16],[119,14,118,20,"metadata"],[119,22,118,28],[119,27,118,33,"undefined"],[119,36,118,42],[119,38,118,44],[120,12,119,20,"resolve"],[120,19,119,27],[120,20,119,28,"metadata"],[120,28,119,36],[120,29,119,37],[121,10,120,16],[121,11,120,17],[121,17,121,21],[122,12,122,20,"reject"],[122,18,122,26],[122,19,122,27,"err"],[122,22,122,30],[122,23,122,31],[123,10,123,16],[124,8,124,12],[124,9,124,13],[124,10,124,14],[125,6,125,8],[125,7,125,9],[125,8,125,10],[126,4,126,4],[127,4,127,4,"compose"],[127,11,127,11,"compose"],[127,12,127,12,"other"],[127,17,127,17],[127,19,127,19],[128,6,128,8],[128,13,128,15],[128,17,128,19,"ComposedCallCredentials"],[128,40,128,42],[128,41,128,43],[128,42,128,44],[128,46,128,48],[128,48,128,50,"other"],[128,53,128,55],[128,54,128,56],[128,55,128,57],[129,4,129,4],[130,4,130,4,"_equals"],[130,11,130,11,"_equals"],[130,12,130,12,"other"],[130,17,130,17],[130,19,130,19],[131,6,131,8],[131,10,131,12],[131,14,131,16],[131,19,131,21,"other"],[131,24,131,26],[131,26,131,28],[132,8,132,12],[132,15,132,19],[132,19,132,23],[133,6,133,8],[134,6,134,8],[134,10,134,12,"other"],[134,15,134,17],[134,27,134,29,"SingleCallCredentials"],[134,48,134,50],[134,50,134,52],[135,8,135,12],[135,15,135,19],[135,19,135,23],[135,20,135,24,"metadataGenerator"],[135,37,135,41],[135,42,135,46,"other"],[135,47,135,51],[135,48,135,52,"metadataGenerator"],[135,65,135,69],[136,6,136,8],[136,7,136,9],[136,13,137,13],[137,8,138,12],[137,15,138,19],[137,20,138,24],[138,6,139,8],[139,4,140,4],[140,2,141,0],[141,2,142,0],[141,8,142,6,"EmptyCallCredentials"],[141,28,142,26],[141,37,142,35,"CallCredentials"],[141,52,142,50],[141,53,142,51],[142,4,143,4,"generateMetadata"],[142,20,143,20,"generateMetadata"],[142,21,143,21,"options"],[142,28,143,28],[142,30,143,30],[143,6,144,8],[143,13,144,15,"Promise"],[143,20,144,22],[143,21,144,23,"resolve"],[143,28,144,30],[143,29,144,31],[143,33,144,35,"metadata_1"],[143,43,144,45],[143,44,144,46,"Metadata"],[143,52,144,54],[143,53,144,55],[143,54,144,56],[143,55,144,57],[144,4,145,4],[145,4,146,4,"compose"],[145,11,146,11,"compose"],[145,12,146,12,"other"],[145,17,146,17],[145,19,146,19],[146,6,147,8],[146,13,147,15,"other"],[146,18,147,20],[147,4,148,4],[148,4,149,4,"_equals"],[148,11,149,11,"_equals"],[148,12,149,12,"other"],[148,17,149,17],[148,19,149,19],[149,6,150,8],[149,13,150,15,"other"],[149,18,150,20],[149,30,150,32,"EmptyCallCredentials"],[149,50,150,52],[150,4,151,4],[151,2,152,0],[152,0,152,1],[152,3]],"functionMap":{"names":["<global>","isCurrentOauth2Client","CallCredentials","CallCredentials.createFromMetadataGenerator","CallCredentials.createFromGoogleCredential","CallCredentials.createFromMetadataGenerator$argument_0","Promise$argument_0","googleCredentials.getRequestMetadata$argument_1","getHeaders.then$argument_0","getHeaders.then$argument_1","CallCredentials.createEmpty","ComposedCallCredentials","ComposedCallCredentials#constructor","ComposedCallCredentials#generateMetadata","creds.map$argument_0","ComposedCallCredentials#compose","ComposedCallCredentials#_equals","creds.every$argument_0","SingleCallCredentials","SingleCallCredentials#constructor","SingleCallCredentials#generateMetadata","metadataGenerator$argument_1","SingleCallCredentials#compose","SingleCallCredentials#_equals","EmptyCallCredentials","EmptyCallCredentials#generateMetadata","EmptyCallCredentials#compose","EmptyCallCredentials#_equals"],"mappings":"AAA;ACoB;CDG;AEK;ICQ;KDE;IEM;2DCC;yCCM;8ECC;qBDU;iBDC;4BGE;aHM,EI;aJE;SDC;KFC;IQC;KRE;CFC;AWE;ICC;KDG;IEC;2DCE,sCD;KFK;IIC;KJE;IKC;oCCK,mDD;KLK;CXC;AkBC;ICC;KDG;IEC;2BdC;4CeC;afO;ScC;KFC;IIC;KJE;IKC;KLU;ClBC;AwBC;ICC;KDE;IEC;KFE;IGC;KHE;CxBC"}},"type":"js/module"}]}