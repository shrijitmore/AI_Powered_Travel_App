{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  module.exports = EventEmitter;\n\n  /**\r\n   * Constructs a new event emitter instance.\r\n   * @classdesc A minimal event emitter.\r\n   * @memberof util\r\n   * @constructor\r\n   */\n  function EventEmitter() {\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\n    this._listeners = {};\n  }\n\n  /**\r\n   * Registers an event listener.\r\n   * @param {string} evt Event name\r\n   * @param {function} fn Listener\r\n   * @param {*} [ctx] Listener context\r\n   * @returns {util.EventEmitter} `this`\r\n   */\n  EventEmitter.prototype.on = function on(evt, fn, ctx) {\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\n      fn: fn,\n      ctx: ctx || this\n    });\n    return this;\n  };\n\n  /**\r\n   * Removes an event listener or any matching listeners if arguments are omitted.\r\n   * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n   * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n   * @returns {util.EventEmitter} `this`\r\n   */\n  EventEmitter.prototype.off = function off(evt, fn) {\n    if (evt === undefined) this._listeners = {};else {\n      if (fn === undefined) this._listeners[evt] = [];else {\n        var listeners = this._listeners[evt];\n        for (var i = 0; i < listeners.length;) if (listeners[i].fn === fn) listeners.splice(i, 1);else ++i;\n      }\n    }\n    return this;\n  };\n\n  /**\r\n   * Emits an event by calling its listeners with the specified arguments.\r\n   * @param {string} evt Event name\r\n   * @param {...*} args Arguments\r\n   * @returns {util.EventEmitter} `this`\r\n   */\n  EventEmitter.prototype.emit = function emit(evt) {\n    var listeners = this._listeners[evt];\n    if (listeners) {\n      var args = [],\n        i = 1;\n      for (; i < arguments.length;) args.push(arguments[i++]);\n      for (i = 0; i < listeners.length;) listeners[i].fn.apply(listeners[i++].ctx, args);\n    }\n    return this;\n  };\n});","lineCount":68,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"module"],[4,8,2,6],[4,9,2,7,"exports"],[4,16,2,14],[4,19,2,17,"EventEmitter"],[4,31,2,29],[6,2,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,2,10,0],[12,11,10,9,"EventEmitter"],[12,23,10,21,"EventEmitter"],[12,24,10,21],[12,26,10,24],[13,4,12,4],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,4,17,4],[18,8,17,8],[18,9,17,9,"_listeners"],[18,19,17,19],[18,22,17,22],[18,23,17,23],[18,24,17,24],[19,2,18,0],[21,2,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,2,27,0,"EventEmitter"],[28,14,27,12],[28,15,27,13,"prototype"],[28,24,27,22],[28,25,27,23,"on"],[28,27,27,25],[28,30,27,28],[28,39,27,37,"on"],[28,41,27,39,"on"],[28,42,27,40,"evt"],[28,45,27,43],[28,47,27,45,"fn"],[28,49,27,47],[28,51,27,49,"ctx"],[28,54,27,52],[28,56,27,54],[29,4,28,4],[29,5,28,5],[29,9,28,9],[29,10,28,10,"_listeners"],[29,20,28,20],[29,21,28,21,"evt"],[29,24,28,24],[29,25,28,25],[29,30,28,30],[29,34,28,34],[29,35,28,35,"_listeners"],[29,45,28,45],[29,46,28,46,"evt"],[29,49,28,49],[29,50,28,50],[29,53,28,53],[29,55,28,55],[29,56,28,56],[29,58,28,58,"push"],[29,62,28,62],[29,63,28,63],[30,6,29,8,"fn"],[30,8,29,10],[30,10,29,14,"fn"],[30,12,29,16],[31,6,30,8,"ctx"],[31,9,30,11],[31,11,30,14,"ctx"],[31,14,30,17],[31,18,30,21],[32,4,31,4],[32,5,31,5],[32,6,31,6],[33,4,32,4],[33,11,32,11],[33,15,32,15],[34,2,33,0],[34,3,33,1],[36,2,35,0],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,0,39,0],[41,0,40,0],[42,2,41,0,"EventEmitter"],[42,14,41,12],[42,15,41,13,"prototype"],[42,24,41,22],[42,25,41,23,"off"],[42,28,41,26],[42,31,41,29],[42,40,41,38,"off"],[42,43,41,41,"off"],[42,44,41,42,"evt"],[42,47,41,45],[42,49,41,47,"fn"],[42,51,41,49],[42,53,41,51],[43,4,42,4],[43,8,42,8,"evt"],[43,11,42,11],[43,16,42,16,"undefined"],[43,25,42,25],[43,27,43,8],[43,31,43,12],[43,32,43,13,"_listeners"],[43,42,43,23],[43,45,43,26],[43,46,43,27],[43,47,43,28],[43,48,43,29],[43,53,44,9],[44,6,45,8],[44,10,45,12,"fn"],[44,12,45,14],[44,17,45,19,"undefined"],[44,26,45,28],[44,28,46,12],[44,32,46,16],[44,33,46,17,"_listeners"],[44,43,46,27],[44,44,46,28,"evt"],[44,47,46,31],[44,48,46,32],[44,51,46,35],[44,53,46,37],[44,54,46,38],[44,59,47,13],[45,8,48,12],[45,12,48,16,"listeners"],[45,21,48,25],[45,24,48,28],[45,28,48,32],[45,29,48,33,"_listeners"],[45,39,48,43],[45,40,48,44,"evt"],[45,43,48,47],[45,44,48,48],[46,8,49,12],[46,13,49,17],[46,17,49,21,"i"],[46,18,49,22],[46,21,49,25],[46,22,49,26],[46,24,49,28,"i"],[46,25,49,29],[46,28,49,32,"listeners"],[46,37,49,41],[46,38,49,42,"length"],[46,44,49,48],[46,47,50,16],[46,51,50,20,"listeners"],[46,60,50,29],[46,61,50,30,"i"],[46,62,50,31],[46,63,50,32],[46,64,50,33,"fn"],[46,66,50,35],[46,71,50,40,"fn"],[46,73,50,42],[46,75,51,20,"listeners"],[46,84,51,29],[46,85,51,30,"splice"],[46,91,51,36],[46,92,51,37,"i"],[46,93,51,38],[46,95,51,40],[46,96,51,41],[46,97,51,42],[46,98,51,43],[46,103,53,20],[46,105,53,22,"i"],[46,106,53,23],[47,6,54,8],[48,4,55,4],[49,4,56,4],[49,11,56,11],[49,15,56,15],[50,2,57,0],[50,3,57,1],[52,2,59,0],[53,0,60,0],[54,0,61,0],[55,0,62,0],[56,0,63,0],[57,0,64,0],[58,2,65,0,"EventEmitter"],[58,14,65,12],[58,15,65,13,"prototype"],[58,24,65,22],[58,25,65,23,"emit"],[58,29,65,27],[58,32,65,30],[58,41,65,39,"emit"],[58,45,65,43,"emit"],[58,46,65,44,"evt"],[58,49,65,47],[58,51,65,49],[59,4,66,4],[59,8,66,8,"listeners"],[59,17,66,17],[59,20,66,20],[59,24,66,24],[59,25,66,25,"_listeners"],[59,35,66,35],[59,36,66,36,"evt"],[59,39,66,39],[59,40,66,40],[60,4,67,4],[60,8,67,8,"listeners"],[60,17,67,17],[60,19,67,19],[61,6,68,8],[61,10,68,12,"args"],[61,14,68,16],[61,17,68,19],[61,19,68,21],[62,8,69,12,"i"],[62,9,69,13],[62,12,69,16],[62,13,69,17],[63,6,70,8],[63,13,70,15,"i"],[63,14,70,16],[63,17,70,19,"arguments"],[63,26,70,28],[63,27,70,29,"length"],[63,33,70,35],[63,36,71,12,"args"],[63,40,71,16],[63,41,71,17,"push"],[63,45,71,21],[63,46,71,22,"arguments"],[63,55,71,31],[63,56,71,32,"i"],[63,57,71,33],[63,59,71,35],[63,60,71,36],[63,61,71,37],[64,6,72,8],[64,11,72,13,"i"],[64,12,72,14],[64,15,72,17],[64,16,72,18],[64,18,72,20,"i"],[64,19,72,21],[64,22,72,24,"listeners"],[64,31,72,33],[64,32,72,34,"length"],[64,38,72,40],[64,41,73,12,"listeners"],[64,50,73,21],[64,51,73,22,"i"],[64,52,73,23],[64,53,73,24],[64,54,73,25,"fn"],[64,56,73,27],[64,57,73,28,"apply"],[64,62,73,33],[64,63,73,34,"listeners"],[64,72,73,43],[64,73,73,44,"i"],[64,74,73,45],[64,76,73,47],[64,77,73,48],[64,78,73,49,"ctx"],[64,81,73,52],[64,83,73,54,"args"],[64,87,73,58],[64,88,73,59],[65,4,74,4],[66,4,75,4],[66,11,75,11],[66,15,75,15],[67,2,76,0],[67,3,76,1],[68,0,76,2],[68,3]],"functionMap":{"names":["<global>","EventEmitter","on","off","emit"],"mappings":"AAA;ACS;CDQ;4BES;CFM;6BGQ;CHgB;8BIQ;CJW"}},"type":"js/module"}]}