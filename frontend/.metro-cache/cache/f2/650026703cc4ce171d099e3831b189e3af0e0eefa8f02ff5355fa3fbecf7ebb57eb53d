{"dependencies":[{"name":"./writer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":77},"end":{"line":5,"column":32,"index":96}}],"key":"usVAgAn3tTe1d501/iIZVOVL+GM=","exportNames":["*"]}},{"name":"./util/minimal","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":11,"index":197},"end":{"line":8,"column":36,"index":222}}],"key":"lbVPmRyLj/Ai/u8LmEyLBVy/L2I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  module.exports = BufferWriter;\n\n  // extends Writer\n  var Writer = require(_dependencyMap[0], \"./writer\");\n  (BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n  var util = require(_dependencyMap[1], \"./util/minimal\");\n\n  /**\n   * Constructs a new buffer writer instance.\n   * @classdesc Wire format writer using node buffers.\n   * @extends Writer\n   * @constructor\n   */\n  function BufferWriter() {\n    Writer.call(this);\n  }\n  BufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\" ? function writeBytesBuffer_set(val, buf, pos) {\n      buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n      // also works for plain array values\n    }\n    /* istanbul ignore next */ : function writeBytesBuffer_copy(val, buf, pos) {\n      if (val.copy)\n        // Buffer values\n        val.copy(buf, pos, 0, val.length);else for (var i = 0; i < val.length;)\n      // plain array values\n      buf[pos++] = val[i++];\n    };\n  };\n\n  /**\n   * @override\n   */\n  BufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value)) value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len) this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n  };\n  function writeStringBuffer(val, buf, pos) {\n    if (val.length < 40)\n      // plain js is faster for short strings (probably due to redundant assertions)\n      util.utf8.write(val, buf, pos);else if (buf.utf8Write) buf.utf8Write(val, pos);else buf.write(val, pos);\n  }\n\n  /**\n   * @override\n   */\n  BufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len) this._push(writeStringBuffer, len, value);\n    return this;\n  };\n\n  /**\n   * Finishes the write operation.\n   * @name BufferWriter#finish\n   * @function\n   * @returns {Buffer} Finished buffer\n   */\n\n  BufferWriter._configure();\n});","lineCount":75,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"module"],[4,8,2,6],[4,9,2,7,"exports"],[4,16,2,14],[4,19,2,17,"BufferWriter"],[4,31,2,29],[6,2,4,0],[7,2,5,0],[7,6,5,4,"Writer"],[7,12,5,10],[7,15,5,13,"require"],[7,22,5,20],[7,23,5,20,"_dependencyMap"],[7,37,5,20],[7,52,5,31],[7,53,5,32],[8,2,6,0],[8,3,6,1,"BufferWriter"],[8,15,6,13],[8,16,6,14,"prototype"],[8,25,6,23],[8,28,6,26,"Object"],[8,34,6,32],[8,35,6,33,"create"],[8,41,6,39],[8,42,6,40,"Writer"],[8,48,6,46],[8,49,6,47,"prototype"],[8,58,6,56],[8,59,6,57],[8,61,6,59,"constructor"],[8,72,6,70],[8,75,6,73,"BufferWriter"],[8,87,6,85],[9,2,8,0],[9,6,8,4,"util"],[9,10,8,8],[9,13,8,11,"require"],[9,20,8,18],[9,21,8,18,"_dependencyMap"],[9,35,8,18],[9,56,8,35],[9,57,8,36],[11,2,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,2,16,0],[17,11,16,9,"BufferWriter"],[17,23,16,21,"BufferWriter"],[17,24,16,21],[17,26,16,24],[18,4,17,4,"Writer"],[18,10,17,10],[18,11,17,11,"call"],[18,15,17,15],[18,16,17,16],[18,20,17,20],[18,21,17,21],[19,2,18,0],[20,2,20,0,"BufferWriter"],[20,14,20,12],[20,15,20,13,"_configure"],[20,25,20,23],[20,28,20,26],[20,40,20,38],[21,4,21,4],[22,0,22,0],[23,0,23,0],[24,0,24,0],[25,0,25,0],[26,0,26,0],[27,4,27,4,"BufferWriter"],[27,16,27,16],[27,17,27,17,"alloc"],[27,22,27,22],[27,25,27,25,"util"],[27,29,27,29],[27,30,27,30,"_Buffer_allocUnsafe"],[27,49,27,49],[28,4,29,4,"BufferWriter"],[28,16,29,16],[28,17,29,17,"writeBytesBuffer"],[28,33,29,33],[28,36,29,36,"util"],[28,40,29,40],[28,41,29,41,"Buffer"],[28,47,29,47],[28,51,29,51,"util"],[28,55,29,55],[28,56,29,56,"Buffer"],[28,62,29,62],[28,63,29,63,"prototype"],[28,72,29,72],[28,84,29,84,"Uint8Array"],[28,94,29,94],[28,98,29,98,"util"],[28,102,29,102],[28,103,29,103,"Buffer"],[28,109,29,109],[28,110,29,110,"prototype"],[28,119,29,119],[28,120,29,120,"set"],[28,123,29,123],[28,124,29,124,"name"],[28,128,29,128],[28,133,29,133],[28,138,29,138],[28,141,30,10],[28,150,30,19,"writeBytesBuffer_set"],[28,170,30,39,"writeBytesBuffer_set"],[28,171,30,40,"val"],[28,174,30,43],[28,176,30,45,"buf"],[28,179,30,48],[28,181,30,50,"pos"],[28,184,30,53],[28,186,30,55],[29,6,31,10,"buf"],[29,9,31,13],[29,10,31,14,"set"],[29,13,31,17],[29,14,31,18,"val"],[29,17,31,21],[29,19,31,23,"pos"],[29,22,31,26],[29,23,31,27],[29,24,31,28],[29,25,31,29],[30,6,32,10],[31,4,33,8],[32,4,34,8],[32,33,35,10],[32,42,35,19,"writeBytesBuffer_copy"],[32,63,35,40,"writeBytesBuffer_copy"],[32,64,35,41,"val"],[32,67,35,44],[32,69,35,46,"buf"],[32,72,35,49],[32,74,35,51,"pos"],[32,77,35,54],[32,79,35,56],[33,6,36,10],[33,10,36,14,"val"],[33,13,36,17],[33,14,36,18,"copy"],[33,18,36,22],[34,8,36,24],[35,8,37,12,"val"],[35,11,37,15],[35,12,37,16,"copy"],[35,16,37,20],[35,17,37,21,"buf"],[35,20,37,24],[35,22,37,26,"pos"],[35,25,37,29],[35,27,37,31],[35,28,37,32],[35,30,37,34,"val"],[35,33,37,37],[35,34,37,38,"length"],[35,40,37,44],[35,41,37,45],[35,42,37,46],[35,47,38,15],[35,52,38,20],[35,56,38,24,"i"],[35,57,38,25],[35,60,38,28],[35,61,38,29],[35,63,38,31,"i"],[35,64,38,32],[35,67,38,35,"val"],[35,70,38,38],[35,71,38,39,"length"],[35,77,38,45],[36,6,38,48],[37,6,39,12,"buf"],[37,9,39,15],[37,10,39,16,"pos"],[37,13,39,19],[37,15,39,21],[37,16,39,22],[37,19,39,25,"val"],[37,22,39,28],[37,23,39,29,"i"],[37,24,39,30],[37,26,39,32],[37,27,39,33],[38,4,40,8],[38,5,40,9],[39,2,41,0],[39,3,41,1],[41,2,44,0],[42,0,45,0],[43,0,46,0],[44,2,47,0,"BufferWriter"],[44,14,47,12],[44,15,47,13,"prototype"],[44,24,47,22],[44,25,47,23,"bytes"],[44,30,47,28],[44,33,47,31],[44,42,47,40,"write_bytes_buffer"],[44,60,47,58,"write_bytes_buffer"],[44,61,47,59,"value"],[44,66,47,64],[44,68,47,66],[45,4,48,4],[45,8,48,8,"util"],[45,12,48,12],[45,13,48,13,"isString"],[45,21,48,21],[45,22,48,22,"value"],[45,27,48,27],[45,28,48,28],[45,30,49,8,"value"],[45,35,49,13],[45,38,49,16,"util"],[45,42,49,20],[45,43,49,21,"_Buffer_from"],[45,55,49,33],[45,56,49,34,"value"],[45,61,49,39],[45,63,49,41],[45,71,49,49],[45,72,49,50],[46,4,50,4],[46,8,50,8,"len"],[46,11,50,11],[46,14,50,14,"value"],[46,19,50,19],[46,20,50,20,"length"],[46,26,50,26],[46,31,50,31],[46,32,50,32],[47,4,51,4],[47,8,51,8],[47,9,51,9,"uint32"],[47,15,51,15],[47,16,51,16,"len"],[47,19,51,19],[47,20,51,20],[48,4,52,4],[48,8,52,8,"len"],[48,11,52,11],[48,13,53,8],[48,17,53,12],[48,18,53,13,"_push"],[48,23,53,18],[48,24,53,19,"BufferWriter"],[48,36,53,31],[48,37,53,32,"writeBytesBuffer"],[48,53,53,48],[48,55,53,50,"len"],[48,58,53,53],[48,60,53,55,"value"],[48,65,53,60],[48,66,53,61],[49,4,54,4],[49,11,54,11],[49,15,54,15],[50,2,55,0],[50,3,55,1],[51,2,57,0],[51,11,57,9,"writeStringBuffer"],[51,28,57,26,"writeStringBuffer"],[51,29,57,27,"val"],[51,32,57,30],[51,34,57,32,"buf"],[51,37,57,35],[51,39,57,37,"pos"],[51,42,57,40],[51,44,57,42],[52,4,58,4],[52,8,58,8,"val"],[52,11,58,11],[52,12,58,12,"length"],[52,18,58,18],[52,21,58,21],[52,23,58,23],[53,6,58,25],[54,6,59,8,"util"],[54,10,59,12],[54,11,59,13,"utf8"],[54,15,59,17],[54,16,59,18,"write"],[54,21,59,23],[54,22,59,24,"val"],[54,25,59,27],[54,27,59,29,"buf"],[54,30,59,32],[54,32,59,34,"pos"],[54,35,59,37],[54,36,59,38],[54,37,59,39],[54,42,60,9],[54,46,60,13,"buf"],[54,49,60,16],[54,50,60,17,"utf8Write"],[54,59,60,26],[54,61,61,8,"buf"],[54,64,61,11],[54,65,61,12,"utf8Write"],[54,74,61,21],[54,75,61,22,"val"],[54,78,61,25],[54,80,61,27,"pos"],[54,83,61,30],[54,84,61,31],[54,85,61,32],[54,90,63,8,"buf"],[54,93,63,11],[54,94,63,12,"write"],[54,99,63,17],[54,100,63,18,"val"],[54,103,63,21],[54,105,63,23,"pos"],[54,108,63,26],[54,109,63,27],[55,2,64,0],[57,2,66,0],[58,0,67,0],[59,0,68,0],[60,2,69,0,"BufferWriter"],[60,14,69,12],[60,15,69,13,"prototype"],[60,24,69,22],[60,25,69,23,"string"],[60,31,69,29],[60,34,69,32],[60,43,69,41,"write_string_buffer"],[60,62,69,60,"write_string_buffer"],[60,63,69,61,"value"],[60,68,69,66],[60,70,69,68],[61,4,70,4],[61,8,70,8,"len"],[61,11,70,11],[61,14,70,14,"util"],[61,18,70,18],[61,19,70,19,"Buffer"],[61,25,70,25],[61,26,70,26,"byteLength"],[61,36,70,36],[61,37,70,37,"value"],[61,42,70,42],[61,43,70,43],[62,4,71,4],[62,8,71,8],[62,9,71,9,"uint32"],[62,15,71,15],[62,16,71,16,"len"],[62,19,71,19],[62,20,71,20],[63,4,72,4],[63,8,72,8,"len"],[63,11,72,11],[63,13,73,8],[63,17,73,12],[63,18,73,13,"_push"],[63,23,73,18],[63,24,73,19,"writeStringBuffer"],[63,41,73,36],[63,43,73,38,"len"],[63,46,73,41],[63,48,73,43,"value"],[63,53,73,48],[63,54,73,49],[64,4,74,4],[64,11,74,11],[64,15,74,15],[65,2,75,0],[65,3,75,1],[67,2,78,0],[68,0,79,0],[69,0,80,0],[70,0,81,0],[71,0,82,0],[72,0,83,0],[74,2,85,0,"BufferWriter"],[74,14,85,12],[74,15,85,13,"_configure"],[74,25,85,23],[74,26,85,24],[74,27,85,25],[75,0,85,26],[75,3]],"functionMap":{"names":["<global>","BufferWriter","BufferWriter._configure","writeBytesBuffer_set","writeBytesBuffer_copy","write_bytes_buffer","writeStringBuffer","write_string_buffer"],"mappings":"AAA;ACe;CDE;0BEE;UCU;SDG;UEE;SFK;CFC;+BKM;CLQ;AME;CNO;gCOK;CPM"}},"type":"js/module"}]}