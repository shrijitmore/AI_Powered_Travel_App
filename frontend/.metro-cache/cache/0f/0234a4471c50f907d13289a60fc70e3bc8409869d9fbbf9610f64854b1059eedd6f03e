{"dependencies":[{"name":"./load-balancer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":24,"index":744},"end":{"line":20,"column":50,"index":770}}],"key":"uOBAJTyNQHYWLk8tq5Ek7vETkD0=","exportNames":["*"]}},{"name":"./connectivity-state","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":29,"index":801},"end":{"line":21,"column":60,"index":832}}],"key":"jyxLDTe7V7Ou6ov9nXyoEe1g9Sg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2020 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ChildLoadBalancerHandler = void 0;\n  const load_balancer_1 = require(_dependencyMap[0], \"./load-balancer\");\n  const connectivity_state_1 = require(_dependencyMap[1], \"./connectivity-state\");\n  const TYPE_NAME = 'child_load_balancer_helper';\n  class ChildLoadBalancerHandler {\n    constructor(channelControlHelper) {\n      this.channelControlHelper = channelControlHelper;\n      this.currentChild = null;\n      this.pendingChild = null;\n      this.latestConfig = null;\n      this.ChildPolicyHelper = class {\n        constructor(parent) {\n          this.parent = parent;\n          this.child = null;\n        }\n        createSubchannel(subchannelAddress, subchannelArgs) {\n          return this.parent.channelControlHelper.createSubchannel(subchannelAddress, subchannelArgs);\n        }\n        updateState(connectivityState, picker) {\n          var _a;\n          if (this.calledByPendingChild()) {\n            if (connectivityState === connectivity_state_1.ConnectivityState.CONNECTING) {\n              return;\n            }\n            (_a = this.parent.currentChild) === null || _a === void 0 ? void 0 : _a.destroy();\n            this.parent.currentChild = this.parent.pendingChild;\n            this.parent.pendingChild = null;\n          } else if (!this.calledByCurrentChild()) {\n            return;\n          }\n          this.parent.channelControlHelper.updateState(connectivityState, picker);\n        }\n        requestReresolution() {\n          var _a;\n          const latestChild = (_a = this.parent.pendingChild) !== null && _a !== void 0 ? _a : this.parent.currentChild;\n          if (this.child === latestChild) {\n            this.parent.channelControlHelper.requestReresolution();\n          }\n        }\n        setChild(newChild) {\n          this.child = newChild;\n        }\n        addChannelzChild(child) {\n          this.parent.channelControlHelper.addChannelzChild(child);\n        }\n        removeChannelzChild(child) {\n          this.parent.channelControlHelper.removeChannelzChild(child);\n        }\n        calledByPendingChild() {\n          return this.child === this.parent.pendingChild;\n        }\n        calledByCurrentChild() {\n          return this.child === this.parent.currentChild;\n        }\n      };\n    }\n    configUpdateRequiresNewPolicyInstance(oldConfig, newConfig) {\n      return oldConfig.getLoadBalancerName() !== newConfig.getLoadBalancerName();\n    }\n    /**\n     * Prerequisites: lbConfig !== null and lbConfig.name is registered\n     * @param addressList\n     * @param lbConfig\n     * @param attributes\n     */\n    updateAddressList(addressList, lbConfig, attributes) {\n      let childToUpdate;\n      if (this.currentChild === null || this.latestConfig === null || this.configUpdateRequiresNewPolicyInstance(this.latestConfig, lbConfig)) {\n        const newHelper = new this.ChildPolicyHelper(this);\n        const newChild = (0, load_balancer_1.createLoadBalancer)(lbConfig, newHelper);\n        newHelper.setChild(newChild);\n        if (this.currentChild === null) {\n          this.currentChild = newChild;\n          childToUpdate = this.currentChild;\n        } else {\n          if (this.pendingChild) {\n            this.pendingChild.destroy();\n          }\n          this.pendingChild = newChild;\n          childToUpdate = this.pendingChild;\n        }\n      } else {\n        if (this.pendingChild === null) {\n          childToUpdate = this.currentChild;\n        } else {\n          childToUpdate = this.pendingChild;\n        }\n      }\n      this.latestConfig = lbConfig;\n      childToUpdate.updateAddressList(addressList, lbConfig, attributes);\n    }\n    exitIdle() {\n      if (this.currentChild) {\n        this.currentChild.exitIdle();\n        if (this.pendingChild) {\n          this.pendingChild.exitIdle();\n        }\n      }\n    }\n    resetBackoff() {\n      if (this.currentChild) {\n        this.currentChild.resetBackoff();\n        if (this.pendingChild) {\n          this.pendingChild.resetBackoff();\n        }\n      }\n    }\n    destroy() {\n      /* Note: state updates are only propagated from the child balancer if that\n       * object is equal to this.currentChild or this.pendingChild. Since this\n       * function sets both of those to null, no further state updates will\n       * occur after this function returns. */\n      if (this.currentChild) {\n        this.currentChild.destroy();\n        this.currentChild = null;\n      }\n      if (this.pendingChild) {\n        this.pendingChild.destroy();\n        this.pendingChild = null;\n      }\n    }\n    getTypeName() {\n      return TYPE_NAME;\n    }\n  }\n  exports.ChildLoadBalancerHandler = ChildLoadBalancerHandler;\n});","lineCount":149,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,2,18,0,"Object"],[20,8,18,6],[20,9,18,7,"defineProperty"],[20,23,18,21],[20,24,18,22,"exports"],[20,31,18,29],[20,33,18,31],[20,45,18,43],[20,47,18,45],[21,4,18,47,"value"],[21,9,18,52],[21,11,18,54],[22,2,18,59],[22,3,18,60],[22,4,18,61],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"ChildLoadBalancerHandler"],[23,34,19,32],[23,37,19,35],[23,42,19,40],[23,43,19,41],[24,2,20,0],[24,8,20,6,"load_balancer_1"],[24,23,20,21],[24,26,20,24,"require"],[24,33,20,31],[24,34,20,31,"_dependencyMap"],[24,48,20,31],[24,70,20,49],[24,71,20,50],[25,2,21,0],[25,8,21,6,"connectivity_state_1"],[25,28,21,26],[25,31,21,29,"require"],[25,38,21,36],[25,39,21,36,"_dependencyMap"],[25,53,21,36],[25,80,21,59],[25,81,21,60],[26,2,22,0],[26,8,22,6,"TYPE_NAME"],[26,17,22,15],[26,20,22,18],[26,48,22,46],[27,2,23,0],[27,8,23,6,"ChildLoadBalancerHandler"],[27,32,23,30],[27,33,23,31],[28,4,24,4,"constructor"],[28,15,24,15,"constructor"],[28,16,24,16,"channelControlHelper"],[28,36,24,36],[28,38,24,38],[29,6,25,8],[29,10,25,12],[29,11,25,13,"channelControlHelper"],[29,31,25,33],[29,34,25,36,"channelControlHelper"],[29,54,25,56],[30,6,26,8],[30,10,26,12],[30,11,26,13,"currentChild"],[30,23,26,25],[30,26,26,28],[30,30,26,32],[31,6,27,8],[31,10,27,12],[31,11,27,13,"pendingChild"],[31,23,27,25],[31,26,27,28],[31,30,27,32],[32,6,28,8],[32,10,28,12],[32,11,28,13,"latestConfig"],[32,23,28,25],[32,26,28,28],[32,30,28,32],[33,6,29,8],[33,10,29,12],[33,11,29,13,"ChildPolicyHelper"],[33,28,29,30],[33,31,29,33],[33,37,29,39],[34,8,30,12,"constructor"],[34,19,30,23,"constructor"],[34,20,30,24,"parent"],[34,26,30,30],[34,28,30,32],[35,10,31,16],[35,14,31,20],[35,15,31,21,"parent"],[35,21,31,27],[35,24,31,30,"parent"],[35,30,31,36],[36,10,32,16],[36,14,32,20],[36,15,32,21,"child"],[36,20,32,26],[36,23,32,29],[36,27,32,33],[37,8,33,12],[38,8,34,12,"createSubchannel"],[38,24,34,28,"createSubchannel"],[38,25,34,29,"subchannelAddress"],[38,42,34,46],[38,44,34,48,"subchannelArgs"],[38,58,34,62],[38,60,34,64],[39,10,35,16],[39,17,35,23],[39,21,35,27],[39,22,35,28,"parent"],[39,28,35,34],[39,29,35,35,"channelControlHelper"],[39,49,35,55],[39,50,35,56,"createSubchannel"],[39,66,35,72],[39,67,35,73,"subchannelAddress"],[39,84,35,90],[39,86,35,92,"subchannelArgs"],[39,100,35,106],[39,101,35,107],[40,8,36,12],[41,8,37,12,"updateState"],[41,19,37,23,"updateState"],[41,20,37,24,"connectivityState"],[41,37,37,41],[41,39,37,43,"picker"],[41,45,37,49],[41,47,37,51],[42,10,38,16],[42,14,38,20,"_a"],[42,16,38,22],[43,10,39,16],[43,14,39,20],[43,18,39,24],[43,19,39,25,"calledByPendingChild"],[43,39,39,45],[43,40,39,46],[43,41,39,47],[43,43,39,49],[44,12,40,20],[44,16,40,24,"connectivityState"],[44,33,40,41],[44,38,40,46,"connectivity_state_1"],[44,58,40,66],[44,59,40,67,"ConnectivityState"],[44,76,40,84],[44,77,40,85,"CONNECTING"],[44,87,40,95],[44,89,40,97],[45,14,41,24],[46,12,42,20],[47,12,43,20],[47,13,43,21,"_a"],[47,15,43,23],[47,18,43,26],[47,22,43,30],[47,23,43,31,"parent"],[47,29,43,37],[47,30,43,38,"currentChild"],[47,42,43,50],[47,48,43,56],[47,52,43,60],[47,56,43,64,"_a"],[47,58,43,66],[47,63,43,71],[47,68,43,76],[47,69,43,77],[47,72,43,80],[47,77,43,85],[47,78,43,86],[47,81,43,89,"_a"],[47,83,43,91],[47,84,43,92,"destroy"],[47,91,43,99],[47,92,43,100],[47,93,43,101],[48,12,44,20],[48,16,44,24],[48,17,44,25,"parent"],[48,23,44,31],[48,24,44,32,"currentChild"],[48,36,44,44],[48,39,44,47],[48,43,44,51],[48,44,44,52,"parent"],[48,50,44,58],[48,51,44,59,"pendingChild"],[48,63,44,71],[49,12,45,20],[49,16,45,24],[49,17,45,25,"parent"],[49,23,45,31],[49,24,45,32,"pendingChild"],[49,36,45,44],[49,39,45,47],[49,43,45,51],[50,10,46,16],[50,11,46,17],[50,17,47,21],[50,21,47,25],[50,22,47,26],[50,26,47,30],[50,27,47,31,"calledByCurrentChild"],[50,47,47,51],[50,48,47,52],[50,49,47,53],[50,51,47,55],[51,12,48,20],[52,10,49,16],[53,10,50,16],[53,14,50,20],[53,15,50,21,"parent"],[53,21,50,27],[53,22,50,28,"channelControlHelper"],[53,42,50,48],[53,43,50,49,"updateState"],[53,54,50,60],[53,55,50,61,"connectivityState"],[53,72,50,78],[53,74,50,80,"picker"],[53,80,50,86],[53,81,50,87],[54,8,51,12],[55,8,52,12,"requestReresolution"],[55,27,52,31,"requestReresolution"],[55,28,52,31],[55,30,52,34],[56,10,53,16],[56,14,53,20,"_a"],[56,16,53,22],[57,10,54,16],[57,16,54,22,"latestChild"],[57,27,54,33],[57,30,54,36],[57,31,54,37,"_a"],[57,33,54,39],[57,36,54,42],[57,40,54,46],[57,41,54,47,"parent"],[57,47,54,53],[57,48,54,54,"pendingChild"],[57,60,54,66],[57,66,54,72],[57,70,54,76],[57,74,54,80,"_a"],[57,76,54,82],[57,81,54,87],[57,86,54,92],[57,87,54,93],[57,90,54,96,"_a"],[57,92,54,98],[57,95,54,101],[57,99,54,105],[57,100,54,106,"parent"],[57,106,54,112],[57,107,54,113,"currentChild"],[57,119,54,125],[58,10,55,16],[58,14,55,20],[58,18,55,24],[58,19,55,25,"child"],[58,24,55,30],[58,29,55,35,"latestChild"],[58,40,55,46],[58,42,55,48],[59,12,56,20],[59,16,56,24],[59,17,56,25,"parent"],[59,23,56,31],[59,24,56,32,"channelControlHelper"],[59,44,56,52],[59,45,56,53,"requestReresolution"],[59,64,56,72],[59,65,56,73],[59,66,56,74],[60,10,57,16],[61,8,58,12],[62,8,59,12,"setChild"],[62,16,59,20,"setChild"],[62,17,59,21,"newChild"],[62,25,59,29],[62,27,59,31],[63,10,60,16],[63,14,60,20],[63,15,60,21,"child"],[63,20,60,26],[63,23,60,29,"newChild"],[63,31,60,37],[64,8,61,12],[65,8,62,12,"addChannelzChild"],[65,24,62,28,"addChannelzChild"],[65,25,62,29,"child"],[65,30,62,34],[65,32,62,36],[66,10,63,16],[66,14,63,20],[66,15,63,21,"parent"],[66,21,63,27],[66,22,63,28,"channelControlHelper"],[66,42,63,48],[66,43,63,49,"addChannelzChild"],[66,59,63,65],[66,60,63,66,"child"],[66,65,63,71],[66,66,63,72],[67,8,64,12],[68,8,65,12,"removeChannelzChild"],[68,27,65,31,"removeChannelzChild"],[68,28,65,32,"child"],[68,33,65,37],[68,35,65,39],[69,10,66,16],[69,14,66,20],[69,15,66,21,"parent"],[69,21,66,27],[69,22,66,28,"channelControlHelper"],[69,42,66,48],[69,43,66,49,"removeChannelzChild"],[69,62,66,68],[69,63,66,69,"child"],[69,68,66,74],[69,69,66,75],[70,8,67,12],[71,8,68,12,"calledByPendingChild"],[71,28,68,32,"calledByPendingChild"],[71,29,68,32],[71,31,68,35],[72,10,69,16],[72,17,69,23],[72,21,69,27],[72,22,69,28,"child"],[72,27,69,33],[72,32,69,38],[72,36,69,42],[72,37,69,43,"parent"],[72,43,69,49],[72,44,69,50,"pendingChild"],[72,56,69,62],[73,8,70,12],[74,8,71,12,"calledByCurrentChild"],[74,28,71,32,"calledByCurrentChild"],[74,29,71,32],[74,31,71,35],[75,10,72,16],[75,17,72,23],[75,21,72,27],[75,22,72,28,"child"],[75,27,72,33],[75,32,72,38],[75,36,72,42],[75,37,72,43,"parent"],[75,43,72,49],[75,44,72,50,"currentChild"],[75,56,72,62],[76,8,73,12],[77,6,74,8],[77,7,74,9],[78,4,75,4],[79,4,76,4,"configUpdateRequiresNewPolicyInstance"],[79,41,76,41,"configUpdateRequiresNewPolicyInstance"],[79,42,76,42,"oldConfig"],[79,51,76,51],[79,53,76,53,"newConfig"],[79,62,76,62],[79,64,76,64],[80,6,77,8],[80,13,77,15,"oldConfig"],[80,22,77,24],[80,23,77,25,"getLoadBalancerName"],[80,42,77,44],[80,43,77,45],[80,44,77,46],[80,49,77,51,"newConfig"],[80,58,77,60],[80,59,77,61,"getLoadBalancerName"],[80,78,77,80],[80,79,77,81],[80,80,77,82],[81,4,78,4],[82,4,79,4],[83,0,80,0],[84,0,81,0],[85,0,82,0],[86,0,83,0],[87,0,84,0],[88,4,85,4,"updateAddressList"],[88,21,85,21,"updateAddressList"],[88,22,85,22,"addressList"],[88,33,85,33],[88,35,85,35,"lbConfig"],[88,43,85,43],[88,45,85,45,"attributes"],[88,55,85,55],[88,57,85,57],[89,6,86,8],[89,10,86,12,"childToUpdate"],[89,23,86,25],[90,6,87,8],[90,10,87,12],[90,14,87,16],[90,15,87,17,"currentChild"],[90,27,87,29],[90,32,87,34],[90,36,87,38],[90,40,88,12],[90,44,88,16],[90,45,88,17,"latestConfig"],[90,57,88,29],[90,62,88,34],[90,66,88,38],[90,70,89,12],[90,74,89,16],[90,75,89,17,"configUpdateRequiresNewPolicyInstance"],[90,112,89,54],[90,113,89,55],[90,117,89,59],[90,118,89,60,"latestConfig"],[90,130,89,72],[90,132,89,74,"lbConfig"],[90,140,89,82],[90,141,89,83],[90,143,89,85],[91,8,90,12],[91,14,90,18,"newHelper"],[91,23,90,27],[91,26,90,30],[91,30,90,34],[91,34,90,38],[91,35,90,39,"ChildPolicyHelper"],[91,52,90,56],[91,53,90,57],[91,57,90,61],[91,58,90,62],[92,8,91,12],[92,14,91,18,"newChild"],[92,22,91,26],[92,25,91,29],[92,26,91,30],[92,27,91,31],[92,29,91,33,"load_balancer_1"],[92,44,91,48],[92,45,91,49,"createLoadBalancer"],[92,63,91,67],[92,65,91,69,"lbConfig"],[92,73,91,77],[92,75,91,79,"newHelper"],[92,84,91,88],[92,85,91,89],[93,8,92,12,"newHelper"],[93,17,92,21],[93,18,92,22,"setChild"],[93,26,92,30],[93,27,92,31,"newChild"],[93,35,92,39],[93,36,92,40],[94,8,93,12],[94,12,93,16],[94,16,93,20],[94,17,93,21,"currentChild"],[94,29,93,33],[94,34,93,38],[94,38,93,42],[94,40,93,44],[95,10,94,16],[95,14,94,20],[95,15,94,21,"currentChild"],[95,27,94,33],[95,30,94,36,"newChild"],[95,38,94,44],[96,10,95,16,"childToUpdate"],[96,23,95,29],[96,26,95,32],[96,30,95,36],[96,31,95,37,"currentChild"],[96,43,95,49],[97,8,96,12],[97,9,96,13],[97,15,97,17],[98,10,98,16],[98,14,98,20],[98,18,98,24],[98,19,98,25,"pendingChild"],[98,31,98,37],[98,33,98,39],[99,12,99,20],[99,16,99,24],[99,17,99,25,"pendingChild"],[99,29,99,37],[99,30,99,38,"destroy"],[99,37,99,45],[99,38,99,46],[99,39,99,47],[100,10,100,16],[101,10,101,16],[101,14,101,20],[101,15,101,21,"pendingChild"],[101,27,101,33],[101,30,101,36,"newChild"],[101,38,101,44],[102,10,102,16,"childToUpdate"],[102,23,102,29],[102,26,102,32],[102,30,102,36],[102,31,102,37,"pendingChild"],[102,43,102,49],[103,8,103,12],[104,6,104,8],[104,7,104,9],[104,13,105,13],[105,8,106,12],[105,12,106,16],[105,16,106,20],[105,17,106,21,"pendingChild"],[105,29,106,33],[105,34,106,38],[105,38,106,42],[105,40,106,44],[106,10,107,16,"childToUpdate"],[106,23,107,29],[106,26,107,32],[106,30,107,36],[106,31,107,37,"currentChild"],[106,43,107,49],[107,8,108,12],[107,9,108,13],[107,15,109,17],[108,10,110,16,"childToUpdate"],[108,23,110,29],[108,26,110,32],[108,30,110,36],[108,31,110,37,"pendingChild"],[108,43,110,49],[109,8,111,12],[110,6,112,8],[111,6,113,8],[111,10,113,12],[111,11,113,13,"latestConfig"],[111,23,113,25],[111,26,113,28,"lbConfig"],[111,34,113,36],[112,6,114,8,"childToUpdate"],[112,19,114,21],[112,20,114,22,"updateAddressList"],[112,37,114,39],[112,38,114,40,"addressList"],[112,49,114,51],[112,51,114,53,"lbConfig"],[112,59,114,61],[112,61,114,63,"attributes"],[112,71,114,73],[112,72,114,74],[113,4,115,4],[114,4,116,4,"exitIdle"],[114,12,116,12,"exitIdle"],[114,13,116,12],[114,15,116,15],[115,6,117,8],[115,10,117,12],[115,14,117,16],[115,15,117,17,"currentChild"],[115,27,117,29],[115,29,117,31],[116,8,118,12],[116,12,118,16],[116,13,118,17,"currentChild"],[116,25,118,29],[116,26,118,30,"exitIdle"],[116,34,118,38],[116,35,118,39],[116,36,118,40],[117,8,119,12],[117,12,119,16],[117,16,119,20],[117,17,119,21,"pendingChild"],[117,29,119,33],[117,31,119,35],[118,10,120,16],[118,14,120,20],[118,15,120,21,"pendingChild"],[118,27,120,33],[118,28,120,34,"exitIdle"],[118,36,120,42],[118,37,120,43],[118,38,120,44],[119,8,121,12],[120,6,122,8],[121,4,123,4],[122,4,124,4,"resetBackoff"],[122,16,124,16,"resetBackoff"],[122,17,124,16],[122,19,124,19],[123,6,125,8],[123,10,125,12],[123,14,125,16],[123,15,125,17,"currentChild"],[123,27,125,29],[123,29,125,31],[124,8,126,12],[124,12,126,16],[124,13,126,17,"currentChild"],[124,25,126,29],[124,26,126,30,"resetBackoff"],[124,38,126,42],[124,39,126,43],[124,40,126,44],[125,8,127,12],[125,12,127,16],[125,16,127,20],[125,17,127,21,"pendingChild"],[125,29,127,33],[125,31,127,35],[126,10,128,16],[126,14,128,20],[126,15,128,21,"pendingChild"],[126,27,128,33],[126,28,128,34,"resetBackoff"],[126,40,128,46],[126,41,128,47],[126,42,128,48],[127,8,129,12],[128,6,130,8],[129,4,131,4],[130,4,132,4,"destroy"],[130,11,132,11,"destroy"],[130,12,132,11],[130,14,132,14],[131,6,133,8],[132,0,134,0],[133,0,135,0],[134,0,136,0],[135,6,137,8],[135,10,137,12],[135,14,137,16],[135,15,137,17,"currentChild"],[135,27,137,29],[135,29,137,31],[136,8,138,12],[136,12,138,16],[136,13,138,17,"currentChild"],[136,25,138,29],[136,26,138,30,"destroy"],[136,33,138,37],[136,34,138,38],[136,35,138,39],[137,8,139,12],[137,12,139,16],[137,13,139,17,"currentChild"],[137,25,139,29],[137,28,139,32],[137,32,139,36],[138,6,140,8],[139,6,141,8],[139,10,141,12],[139,14,141,16],[139,15,141,17,"pendingChild"],[139,27,141,29],[139,29,141,31],[140,8,142,12],[140,12,142,16],[140,13,142,17,"pendingChild"],[140,25,142,29],[140,26,142,30,"destroy"],[140,33,142,37],[140,34,142,38],[140,35,142,39],[141,8,143,12],[141,12,143,16],[141,13,143,17,"pendingChild"],[141,25,143,29],[141,28,143,32],[141,32,143,36],[142,6,144,8],[143,4,145,4],[144,4,146,4,"getTypeName"],[144,15,146,15,"getTypeName"],[144,16,146,15],[144,18,146,18],[145,6,147,8],[145,13,147,15,"TYPE_NAME"],[145,22,147,24],[146,4,148,4],[147,2,149,0],[148,2,150,0,"exports"],[148,9,150,7],[148,10,150,8,"ChildLoadBalancerHandler"],[148,34,150,32],[148,37,150,35,"ChildLoadBalancerHandler"],[148,61,150,59],[149,0,150,60],[149,3]],"functionMap":{"names":["<global>","ChildLoadBalancerHandler","ChildLoadBalancerHandler#constructor","ChildPolicyHelper","ChildPolicyHelper#constructor","ChildPolicyHelper#createSubchannel","ChildPolicyHelper#updateState","ChildPolicyHelper#requestReresolution","ChildPolicyHelper#setChild","ChildPolicyHelper#addChannelzChild","ChildPolicyHelper#removeChannelzChild","ChildPolicyHelper#calledByPendingChild","ChildPolicyHelper#calledByCurrentChild","ChildLoadBalancerHandler#configUpdateRequiresNewPolicyInstance","ChildLoadBalancerHandler#updateAddressList","ChildLoadBalancerHandler#exitIdle","ChildLoadBalancerHandler#resetBackoff","ChildLoadBalancerHandler#destroy","ChildLoadBalancerHandler#getTypeName"],"mappings":"AAA;ACsB;ICC;iCCK;YCC;aDG;YEC;aFE;YGC;aHc;YIC;aJM;YKC;aLE;YMC;aNE;YOC;aPE;YQC;aRE;YSC;aTE;SDC;KDC;IYC;KZE;IaO;Kb8B;IcC;KdO;IeC;KfO;IgBC;KhBa;IiBC;KjBE;CDC"}},"type":"js/module"}]}