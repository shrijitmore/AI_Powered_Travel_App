{"dependencies":[{"name":"./metadata","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":19,"index":779},"end":{"line":20,"column":40,"index":800}}],"key":"6KRjstwF8yWfkztxpqnIypQq1mI=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":20,"index":822},"end":{"line":21,"column":42,"index":844}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2019 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.QueuePicker = exports.UnavailablePicker = exports.PickResultType = void 0;\n  const metadata_1 = require(_dependencyMap[0], \"./metadata\");\n  const constants_1 = require(_dependencyMap[1], \"./constants\");\n  var PickResultType;\n  (function (PickResultType) {\n    PickResultType[PickResultType[\"COMPLETE\"] = 0] = \"COMPLETE\";\n    PickResultType[PickResultType[\"QUEUE\"] = 1] = \"QUEUE\";\n    PickResultType[PickResultType[\"TRANSIENT_FAILURE\"] = 2] = \"TRANSIENT_FAILURE\";\n    PickResultType[PickResultType[\"DROP\"] = 3] = \"DROP\";\n  })(PickResultType || (exports.PickResultType = PickResultType = {}));\n  /**\n   * A standard picker representing a load balancer in the TRANSIENT_FAILURE\n   * state. Always responds to every pick request with an UNAVAILABLE status.\n   */\n  class UnavailablePicker {\n    constructor(status) {\n      this.status = Object.assign({\n        code: constants_1.Status.UNAVAILABLE,\n        details: 'No connection established',\n        metadata: new metadata_1.Metadata()\n      }, status);\n    }\n    pick(pickArgs) {\n      return {\n        pickResultType: PickResultType.TRANSIENT_FAILURE,\n        subchannel: null,\n        status: this.status,\n        onCallStarted: null,\n        onCallEnded: null\n      };\n    }\n  }\n  exports.UnavailablePicker = UnavailablePicker;\n  /**\n   * A standard picker representing a load balancer in the IDLE or CONNECTING\n   * state. Always responds to every pick request with a QUEUE pick result\n   * indicating that the pick should be tried again with the next `Picker`. Also\n   * reports back to the load balancer that a connection should be established\n   * once any pick is attempted.\n   */\n  class QueuePicker {\n    // Constructed with a load balancer. Calls exitIdle on it the first time pick is called\n    constructor(loadBalancer) {\n      this.loadBalancer = loadBalancer;\n      this.calledExitIdle = false;\n    }\n    pick(pickArgs) {\n      if (!this.calledExitIdle) {\n        process.nextTick(() => {\n          this.loadBalancer.exitIdle();\n        });\n        this.calledExitIdle = true;\n      }\n      return {\n        pickResultType: PickResultType.QUEUE,\n        subchannel: null,\n        status: null,\n        onCallStarted: null,\n        onCallEnded: null\n      };\n    }\n  }\n  exports.QueuePicker = QueuePicker;\n});","lineCount":86,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,2,18,0,"Object"],[20,8,18,6],[20,9,18,7,"defineProperty"],[20,23,18,21],[20,24,18,22,"exports"],[20,31,18,29],[20,33,18,31],[20,45,18,43],[20,47,18,45],[21,4,18,47,"value"],[21,9,18,52],[21,11,18,54],[22,2,18,59],[22,3,18,60],[22,4,18,61],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"QueuePicker"],[23,21,19,19],[23,24,19,22,"exports"],[23,31,19,29],[23,32,19,30,"UnavailablePicker"],[23,49,19,47],[23,52,19,50,"exports"],[23,59,19,57],[23,60,19,58,"PickResultType"],[23,74,19,72],[23,77,19,75],[23,82,19,80],[23,83,19,81],[24,2,20,0],[24,8,20,6,"metadata_1"],[24,18,20,16],[24,21,20,19,"require"],[24,28,20,26],[24,29,20,26,"_dependencyMap"],[24,43,20,26],[24,60,20,39],[24,61,20,40],[25,2,21,0],[25,8,21,6,"constants_1"],[25,19,21,17],[25,22,21,20,"require"],[25,29,21,27],[25,30,21,27,"_dependencyMap"],[25,44,21,27],[25,62,21,41],[25,63,21,42],[26,2,22,0],[26,6,22,4,"PickResultType"],[26,20,22,18],[27,2,23,0],[27,3,23,1],[27,13,23,11,"PickResultType"],[27,27,23,25],[27,29,23,27],[28,4,24,4,"PickResultType"],[28,18,24,18],[28,19,24,19,"PickResultType"],[28,33,24,33],[28,34,24,34],[28,44,24,44],[28,45,24,45],[28,48,24,48],[28,49,24,49],[28,50,24,50],[28,53,24,53],[28,63,24,63],[29,4,25,4,"PickResultType"],[29,18,25,18],[29,19,25,19,"PickResultType"],[29,33,25,33],[29,34,25,34],[29,41,25,41],[29,42,25,42],[29,45,25,45],[29,46,25,46],[29,47,25,47],[29,50,25,50],[29,57,25,57],[30,4,26,4,"PickResultType"],[30,18,26,18],[30,19,26,19,"PickResultType"],[30,33,26,33],[30,34,26,34],[30,53,26,53],[30,54,26,54],[30,57,26,57],[30,58,26,58],[30,59,26,59],[30,62,26,62],[30,81,26,81],[31,4,27,4,"PickResultType"],[31,18,27,18],[31,19,27,19,"PickResultType"],[31,33,27,33],[31,34,27,34],[31,40,27,40],[31,41,27,41],[31,44,27,44],[31,45,27,45],[31,46,27,46],[31,49,27,49],[31,55,27,55],[32,2,28,0],[32,3,28,1],[32,5,28,3,"PickResultType"],[32,19,28,17],[32,24,28,22,"exports"],[32,31,28,29],[32,32,28,30,"PickResultType"],[32,46,28,44],[32,49,28,47,"PickResultType"],[32,63,28,61],[32,66,28,64],[32,67,28,65],[32,68,28,66],[32,69,28,67],[32,70,28,68],[33,2,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,2,33,0],[37,8,33,6,"UnavailablePicker"],[37,25,33,23],[37,26,33,24],[38,4,34,4,"constructor"],[38,15,34,15,"constructor"],[38,16,34,16,"status"],[38,22,34,22],[38,24,34,24],[39,6,35,8],[39,10,35,12],[39,11,35,13,"status"],[39,17,35,19],[39,20,35,22,"Object"],[39,26,35,28],[39,27,35,29,"assign"],[39,33,35,35],[39,34,35,36],[40,8,35,38,"code"],[40,12,35,42],[40,14,35,44,"constants_1"],[40,25,35,55],[40,26,35,56,"Status"],[40,32,35,62],[40,33,35,63,"UNAVAILABLE"],[40,44,35,74],[41,8,35,76,"details"],[41,15,35,83],[41,17,35,85],[41,44,35,112],[42,8,35,114,"metadata"],[42,16,35,122],[42,18,35,124],[42,22,35,128,"metadata_1"],[42,32,35,138],[42,33,35,139,"Metadata"],[42,41,35,147],[42,42,35,148],[43,6,35,150],[43,7,35,151],[43,9,35,153,"status"],[43,15,35,159],[43,16,35,160],[44,4,36,4],[45,4,37,4,"pick"],[45,8,37,8,"pick"],[45,9,37,9,"pickArgs"],[45,17,37,17],[45,19,37,19],[46,6,38,8],[46,13,38,15],[47,8,39,12,"pickResultType"],[47,22,39,26],[47,24,39,28,"PickResultType"],[47,38,39,42],[47,39,39,43,"TRANSIENT_FAILURE"],[47,56,39,60],[48,8,40,12,"subchannel"],[48,18,40,22],[48,20,40,24],[48,24,40,28],[49,8,41,12,"status"],[49,14,41,18],[49,16,41,20],[49,20,41,24],[49,21,41,25,"status"],[49,27,41,31],[50,8,42,12,"onCallStarted"],[50,21,42,25],[50,23,42,27],[50,27,42,31],[51,8,43,12,"onCallEnded"],[51,19,43,23],[51,21,43,25],[52,6,44,8],[52,7,44,9],[53,4,45,4],[54,2,46,0],[55,2,47,0,"exports"],[55,9,47,7],[55,10,47,8,"UnavailablePicker"],[55,27,47,25],[55,30,47,28,"UnavailablePicker"],[55,47,47,45],[56,2,48,0],[57,0,49,0],[58,0,50,0],[59,0,51,0],[60,0,52,0],[61,0,53,0],[62,0,54,0],[63,2,55,0],[63,8,55,6,"QueuePicker"],[63,19,55,17],[63,20,55,18],[64,4,56,4],[65,4,57,4,"constructor"],[65,15,57,15,"constructor"],[65,16,57,16,"loadBalancer"],[65,28,57,28],[65,30,57,30],[66,6,58,8],[66,10,58,12],[66,11,58,13,"loadBalancer"],[66,23,58,25],[66,26,58,28,"loadBalancer"],[66,38,58,40],[67,6,59,8],[67,10,59,12],[67,11,59,13,"calledExitIdle"],[67,25,59,27],[67,28,59,30],[67,33,59,35],[68,4,60,4],[69,4,61,4,"pick"],[69,8,61,8,"pick"],[69,9,61,9,"pickArgs"],[69,17,61,17],[69,19,61,19],[70,6,62,8],[70,10,62,12],[70,11,62,13],[70,15,62,17],[70,16,62,18,"calledExitIdle"],[70,30,62,32],[70,32,62,34],[71,8,63,12,"process"],[71,15,63,19],[71,16,63,20,"nextTick"],[71,24,63,28],[71,25,63,29],[71,31,63,35],[72,10,64,16],[72,14,64,20],[72,15,64,21,"loadBalancer"],[72,27,64,33],[72,28,64,34,"exitIdle"],[72,36,64,42],[72,37,64,43],[72,38,64,44],[73,8,65,12],[73,9,65,13],[73,10,65,14],[74,8,66,12],[74,12,66,16],[74,13,66,17,"calledExitIdle"],[74,27,66,31],[74,30,66,34],[74,34,66,38],[75,6,67,8],[76,6,68,8],[76,13,68,15],[77,8,69,12,"pickResultType"],[77,22,69,26],[77,24,69,28,"PickResultType"],[77,38,69,42],[77,39,69,43,"QUEUE"],[77,44,69,48],[78,8,70,12,"subchannel"],[78,18,70,22],[78,20,70,24],[78,24,70,28],[79,8,71,12,"status"],[79,14,71,18],[79,16,71,20],[79,20,71,24],[80,8,72,12,"onCallStarted"],[80,21,72,25],[80,23,72,27],[80,27,72,31],[81,8,73,12,"onCallEnded"],[81,19,73,23],[81,21,73,25],[82,6,74,8],[82,7,74,9],[83,4,75,4],[84,2,76,0],[85,2,77,0,"exports"],[85,9,77,7],[85,10,77,8,"QueuePicker"],[85,21,77,19],[85,24,77,22,"QueuePicker"],[85,35,77,33],[86,0,77,34],[86,3]],"functionMap":{"names":["<global>","<anonymous>","UnavailablePicker","UnavailablePicker#constructor","UnavailablePicker#pick","QueuePicker","QueuePicker#constructor","QueuePicker#pick","process.nextTick$argument_0"],"mappings":"AAA;CCsB;CDK;AEK;ICC;KDE;IEC;KFQ;CFC;AKS;ICE;KDG;IEC;6BCE;aDE;KFU;CLC"}},"type":"js/module"}]}