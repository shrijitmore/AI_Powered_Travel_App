{"dependencies":[{"name":"./client","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":17,"index":766},"end":{"line":20,"column":36,"index":785}}],"key":"1m+q1Gchq/LYEss8DU4BOgu+wco=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2019 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.loadPackageDefinition = exports.makeClientConstructor = void 0;\n  const client_1 = require(_dependencyMap[0], \"./client\");\n  /**\n   * Map with short names for each of the requester maker functions. Used in\n   * makeClientConstructor\n   * @private\n   */\n  const requesterFuncs = {\n    unary: client_1.Client.prototype.makeUnaryRequest,\n    server_stream: client_1.Client.prototype.makeServerStreamRequest,\n    client_stream: client_1.Client.prototype.makeClientStreamRequest,\n    bidi: client_1.Client.prototype.makeBidiStreamRequest\n  };\n  /**\n   * Returns true, if given key is included in the blacklisted\n   * keys.\n   * @param key key for check, string.\n   */\n  function isPrototypePolluted(key) {\n    return ['__proto__', 'prototype', 'constructor'].includes(key);\n  }\n  /**\n   * Creates a constructor for a client with the given methods, as specified in\n   * the methods argument. The resulting class will have an instance method for\n   * each method in the service, which is a partial application of one of the\n   * [Client]{@link grpc.Client} request methods, depending on `requestSerialize`\n   * and `responseSerialize`, with the `method`, `serialize`, and `deserialize`\n   * arguments predefined.\n   * @param methods An object mapping method names to\n   *     method attributes\n   * @param serviceName The fully qualified name of the service\n   * @param classOptions An options object.\n   * @return New client constructor, which is a subclass of\n   *     {@link grpc.Client}, and has the same arguments as that constructor.\n   */\n  function makeClientConstructor(methods, serviceName, classOptions) {\n    if (!classOptions) {\n      classOptions = {};\n    }\n    class ServiceClientImpl extends client_1.Client {}\n    Object.keys(methods).forEach(name => {\n      if (isPrototypePolluted(name)) {\n        return;\n      }\n      const attrs = methods[name];\n      let methodType;\n      // TODO(murgatroid99): Verify that we don't need this anymore\n      if (typeof name === 'string' && name.charAt(0) === '$') {\n        throw new Error('Method names cannot start with $');\n      }\n      if (attrs.requestStream) {\n        if (attrs.responseStream) {\n          methodType = 'bidi';\n        } else {\n          methodType = 'client_stream';\n        }\n      } else {\n        if (attrs.responseStream) {\n          methodType = 'server_stream';\n        } else {\n          methodType = 'unary';\n        }\n      }\n      const serialize = attrs.requestSerialize;\n      const deserialize = attrs.responseDeserialize;\n      const methodFunc = partial(requesterFuncs[methodType], attrs.path, serialize, deserialize);\n      ServiceClientImpl.prototype[name] = methodFunc;\n      // Associate all provided attributes with the method\n      Object.assign(ServiceClientImpl.prototype[name], attrs);\n      if (attrs.originalName && !isPrototypePolluted(attrs.originalName)) {\n        ServiceClientImpl.prototype[attrs.originalName] = ServiceClientImpl.prototype[name];\n      }\n    });\n    ServiceClientImpl.service = methods;\n    ServiceClientImpl.serviceName = serviceName;\n    return ServiceClientImpl;\n  }\n  exports.makeClientConstructor = makeClientConstructor;\n  function partial(fn, path, serialize, deserialize) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (...args) {\n      return fn.call(this, path, serialize, deserialize, ...args);\n    };\n  }\n  function isProtobufTypeDefinition(obj) {\n    return 'format' in obj;\n  }\n  /**\n   * Load a gRPC package definition as a gRPC object hierarchy.\n   * @param packageDef The package definition object.\n   * @return The resulting gRPC object.\n   */\n  function loadPackageDefinition(packageDef) {\n    const result = {};\n    for (const serviceFqn in packageDef) {\n      if (Object.prototype.hasOwnProperty.call(packageDef, serviceFqn)) {\n        const service = packageDef[serviceFqn];\n        const nameComponents = serviceFqn.split('.');\n        if (nameComponents.some(comp => isPrototypePolluted(comp))) {\n          continue;\n        }\n        const serviceName = nameComponents[nameComponents.length - 1];\n        let current = result;\n        for (const packageName of nameComponents.slice(0, -1)) {\n          if (!current[packageName]) {\n            current[packageName] = {};\n          }\n          current = current[packageName];\n        }\n        if (isProtobufTypeDefinition(service)) {\n          current[serviceName] = service;\n        } else {\n          current[serviceName] = makeClientConstructor(service, serviceName, {});\n        }\n      }\n    }\n    return result;\n  }\n  exports.loadPackageDefinition = loadPackageDefinition;\n});","lineCount":142,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,2,18,0,"Object"],[20,8,18,6],[20,9,18,7,"defineProperty"],[20,23,18,21],[20,24,18,22,"exports"],[20,31,18,29],[20,33,18,31],[20,45,18,43],[20,47,18,45],[21,4,18,47,"value"],[21,9,18,52],[21,11,18,54],[22,2,18,59],[22,3,18,60],[22,4,18,61],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"loadPackageDefinition"],[23,31,19,29],[23,34,19,32,"exports"],[23,41,19,39],[23,42,19,40,"makeClientConstructor"],[23,63,19,61],[23,66,19,64],[23,71,19,69],[23,72,19,70],[24,2,20,0],[24,8,20,6,"client_1"],[24,16,20,14],[24,19,20,17,"require"],[24,26,20,24],[24,27,20,24,"_dependencyMap"],[24,41,20,24],[24,56,20,35],[24,57,20,36],[25,2,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,2,26,0],[30,8,26,6,"requesterFuncs"],[30,22,26,20],[30,25,26,23],[31,4,27,4,"unary"],[31,9,27,9],[31,11,27,11,"client_1"],[31,19,27,19],[31,20,27,20,"Client"],[31,26,27,26],[31,27,27,27,"prototype"],[31,36,27,36],[31,37,27,37,"makeUnaryRequest"],[31,53,27,53],[32,4,28,4,"server_stream"],[32,17,28,17],[32,19,28,19,"client_1"],[32,27,28,27],[32,28,28,28,"Client"],[32,34,28,34],[32,35,28,35,"prototype"],[32,44,28,44],[32,45,28,45,"makeServerStreamRequest"],[32,68,28,68],[33,4,29,4,"client_stream"],[33,17,29,17],[33,19,29,19,"client_1"],[33,27,29,27],[33,28,29,28,"Client"],[33,34,29,34],[33,35,29,35,"prototype"],[33,44,29,44],[33,45,29,45,"makeClientStreamRequest"],[33,68,29,68],[34,4,30,4,"bidi"],[34,8,30,8],[34,10,30,10,"client_1"],[34,18,30,18],[34,19,30,19,"Client"],[34,25,30,25],[34,26,30,26,"prototype"],[34,35,30,35],[34,36,30,36,"makeBidiStreamRequest"],[35,2,31,0],[35,3,31,1],[36,2,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,2,37,0],[41,11,37,9,"isPrototypePolluted"],[41,30,37,28,"isPrototypePolluted"],[41,31,37,29,"key"],[41,34,37,32],[41,36,37,34],[42,4,38,4],[42,11,38,11],[42,12,38,12],[42,23,38,23],[42,25,38,25],[42,36,38,36],[42,38,38,38],[42,51,38,51],[42,52,38,52],[42,53,38,53,"includes"],[42,61,38,61],[42,62,38,62,"key"],[42,65,38,65],[42,66,38,66],[43,2,39,0],[44,2,40,0],[45,0,41,0],[46,0,42,0],[47,0,43,0],[48,0,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,0,53,0],[58,2,54,0],[58,11,54,9,"makeClientConstructor"],[58,32,54,30,"makeClientConstructor"],[58,33,54,31,"methods"],[58,40,54,38],[58,42,54,40,"serviceName"],[58,53,54,51],[58,55,54,53,"classOptions"],[58,67,54,65],[58,69,54,67],[59,4,55,4],[59,8,55,8],[59,9,55,9,"classOptions"],[59,21,55,21],[59,23,55,23],[60,6,56,8,"classOptions"],[60,18,56,20],[60,21,56,23],[60,22,56,24],[60,23,56,25],[61,4,57,4],[62,4,58,4],[62,10,58,10,"ServiceClientImpl"],[62,27,58,27],[62,36,58,36,"client_1"],[62,44,58,44],[62,45,58,45,"Client"],[62,51,58,51],[62,52,58,52],[63,4,60,4,"Object"],[63,10,60,10],[63,11,60,11,"keys"],[63,15,60,15],[63,16,60,16,"methods"],[63,23,60,23],[63,24,60,24],[63,25,60,25,"forEach"],[63,32,60,32],[63,33,60,33,"name"],[63,37,60,37],[63,41,60,41],[64,6,61,8],[64,10,61,12,"isPrototypePolluted"],[64,29,61,31],[64,30,61,32,"name"],[64,34,61,36],[64,35,61,37],[64,37,61,39],[65,8,62,12],[66,6,63,8],[67,6,64,8],[67,12,64,14,"attrs"],[67,17,64,19],[67,20,64,22,"methods"],[67,27,64,29],[67,28,64,30,"name"],[67,32,64,34],[67,33,64,35],[68,6,65,8],[68,10,65,12,"methodType"],[68,20,65,22],[69,6,66,8],[70,6,67,8],[70,10,67,12],[70,17,67,19,"name"],[70,21,67,23],[70,26,67,28],[70,34,67,36],[70,38,67,40,"name"],[70,42,67,44],[70,43,67,45,"charAt"],[70,49,67,51],[70,50,67,52],[70,51,67,53],[70,52,67,54],[70,57,67,59],[70,60,67,62],[70,62,67,64],[71,8,68,12],[71,14,68,18],[71,18,68,22,"Error"],[71,23,68,27],[71,24,68,28],[71,58,68,62],[71,59,68,63],[72,6,69,8],[73,6,70,8],[73,10,70,12,"attrs"],[73,15,70,17],[73,16,70,18,"requestStream"],[73,29,70,31],[73,31,70,33],[74,8,71,12],[74,12,71,16,"attrs"],[74,17,71,21],[74,18,71,22,"responseStream"],[74,32,71,36],[74,34,71,38],[75,10,72,16,"methodType"],[75,20,72,26],[75,23,72,29],[75,29,72,35],[76,8,73,12],[76,9,73,13],[76,15,74,17],[77,10,75,16,"methodType"],[77,20,75,26],[77,23,75,29],[77,38,75,44],[78,8,76,12],[79,6,77,8],[79,7,77,9],[79,13,78,13],[80,8,79,12],[80,12,79,16,"attrs"],[80,17,79,21],[80,18,79,22,"responseStream"],[80,32,79,36],[80,34,79,38],[81,10,80,16,"methodType"],[81,20,80,26],[81,23,80,29],[81,38,80,44],[82,8,81,12],[82,9,81,13],[82,15,82,17],[83,10,83,16,"methodType"],[83,20,83,26],[83,23,83,29],[83,30,83,36],[84,8,84,12],[85,6,85,8],[86,6,86,8],[86,12,86,14,"serialize"],[86,21,86,23],[86,24,86,26,"attrs"],[86,29,86,31],[86,30,86,32,"requestSerialize"],[86,46,86,48],[87,6,87,8],[87,12,87,14,"deserialize"],[87,23,87,25],[87,26,87,28,"attrs"],[87,31,87,33],[87,32,87,34,"responseDeserialize"],[87,51,87,53],[88,6,88,8],[88,12,88,14,"methodFunc"],[88,22,88,24],[88,25,88,27,"partial"],[88,32,88,34],[88,33,88,35,"requesterFuncs"],[88,47,88,49],[88,48,88,50,"methodType"],[88,58,88,60],[88,59,88,61],[88,61,88,63,"attrs"],[88,66,88,68],[88,67,88,69,"path"],[88,71,88,73],[88,73,88,75,"serialize"],[88,82,88,84],[88,84,88,86,"deserialize"],[88,95,88,97],[88,96,88,98],[89,6,89,8,"ServiceClientImpl"],[89,23,89,25],[89,24,89,26,"prototype"],[89,33,89,35],[89,34,89,36,"name"],[89,38,89,40],[89,39,89,41],[89,42,89,44,"methodFunc"],[89,52,89,54],[90,6,90,8],[91,6,91,8,"Object"],[91,12,91,14],[91,13,91,15,"assign"],[91,19,91,21],[91,20,91,22,"ServiceClientImpl"],[91,37,91,39],[91,38,91,40,"prototype"],[91,47,91,49],[91,48,91,50,"name"],[91,52,91,54],[91,53,91,55],[91,55,91,57,"attrs"],[91,60,91,62],[91,61,91,63],[92,6,92,8],[92,10,92,12,"attrs"],[92,15,92,17],[92,16,92,18,"originalName"],[92,28,92,30],[92,32,92,34],[92,33,92,35,"isPrototypePolluted"],[92,52,92,54],[92,53,92,55,"attrs"],[92,58,92,60],[92,59,92,61,"originalName"],[92,71,92,73],[92,72,92,74],[92,74,92,76],[93,8,93,12,"ServiceClientImpl"],[93,25,93,29],[93,26,93,30,"prototype"],[93,35,93,39],[93,36,93,40,"attrs"],[93,41,93,45],[93,42,93,46,"originalName"],[93,54,93,58],[93,55,93,59],[93,58,94,16,"ServiceClientImpl"],[93,75,94,33],[93,76,94,34,"prototype"],[93,85,94,43],[93,86,94,44,"name"],[93,90,94,48],[93,91,94,49],[94,6,95,8],[95,4,96,4],[95,5,96,5],[95,6,96,6],[96,4,97,4,"ServiceClientImpl"],[96,21,97,21],[96,22,97,22,"service"],[96,29,97,29],[96,32,97,32,"methods"],[96,39,97,39],[97,4,98,4,"ServiceClientImpl"],[97,21,98,21],[97,22,98,22,"serviceName"],[97,33,98,33],[97,36,98,36,"serviceName"],[97,47,98,47],[98,4,99,4],[98,11,99,11,"ServiceClientImpl"],[98,28,99,28],[99,2,100,0],[100,2,101,0,"exports"],[100,9,101,7],[100,10,101,8,"makeClientConstructor"],[100,31,101,29],[100,34,101,32,"makeClientConstructor"],[100,55,101,53],[101,2,102,0],[101,11,102,9,"partial"],[101,18,102,16,"partial"],[101,19,102,17,"fn"],[101,21,102,19],[101,23,102,21,"path"],[101,27,102,25],[101,29,102,27,"serialize"],[101,38,102,36],[101,40,102,38,"deserialize"],[101,51,102,49],[101,53,102,51],[102,4,103,4],[103,4,104,4],[103,11,104,11],[103,21,104,21],[103,24,104,24,"args"],[103,28,104,28],[103,30,104,30],[104,6,105,8],[104,13,105,15,"fn"],[104,15,105,17],[104,16,105,18,"call"],[104,20,105,22],[104,21,105,23],[104,25,105,27],[104,27,105,29,"path"],[104,31,105,33],[104,33,105,35,"serialize"],[104,42,105,44],[104,44,105,46,"deserialize"],[104,55,105,57],[104,57,105,59],[104,60,105,62,"args"],[104,64,105,66],[104,65,105,67],[105,4,106,4],[105,5,106,5],[106,2,107,0],[107,2,108,0],[107,11,108,9,"isProtobufTypeDefinition"],[107,35,108,33,"isProtobufTypeDefinition"],[107,36,108,34,"obj"],[107,39,108,37],[107,41,108,39],[108,4,109,4],[108,11,109,11],[108,19,109,19],[108,23,109,23,"obj"],[108,26,109,26],[109,2,110,0],[110,2,111,0],[111,0,112,0],[112,0,113,0],[113,0,114,0],[114,0,115,0],[115,2,116,0],[115,11,116,9,"loadPackageDefinition"],[115,32,116,30,"loadPackageDefinition"],[115,33,116,31,"packageDef"],[115,43,116,41],[115,45,116,43],[116,4,117,4],[116,10,117,10,"result"],[116,16,117,16],[116,19,117,19],[116,20,117,20],[116,21,117,21],[117,4,118,4],[117,9,118,9],[117,15,118,15,"serviceFqn"],[117,25,118,25],[117,29,118,29,"packageDef"],[117,39,118,39],[117,41,118,41],[118,6,119,8],[118,10,119,12,"Object"],[118,16,119,18],[118,17,119,19,"prototype"],[118,26,119,28],[118,27,119,29,"hasOwnProperty"],[118,41,119,43],[118,42,119,44,"call"],[118,46,119,48],[118,47,119,49,"packageDef"],[118,57,119,59],[118,59,119,61,"serviceFqn"],[118,69,119,71],[118,70,119,72],[118,72,119,74],[119,8,120,12],[119,14,120,18,"service"],[119,21,120,25],[119,24,120,28,"packageDef"],[119,34,120,38],[119,35,120,39,"serviceFqn"],[119,45,120,49],[119,46,120,50],[120,8,121,12],[120,14,121,18,"nameComponents"],[120,28,121,32],[120,31,121,35,"serviceFqn"],[120,41,121,45],[120,42,121,46,"split"],[120,47,121,51],[120,48,121,52],[120,51,121,55],[120,52,121,56],[121,8,122,12],[121,12,122,16,"nameComponents"],[121,26,122,30],[121,27,122,31,"some"],[121,31,122,35],[121,32,122,37,"comp"],[121,36,122,41],[121,40,122,46,"isPrototypePolluted"],[121,59,122,65],[121,60,122,66,"comp"],[121,64,122,70],[121,65,122,71],[121,66,122,72],[121,68,122,74],[122,10,123,16],[123,8,124,12],[124,8,125,12],[124,14,125,18,"serviceName"],[124,25,125,29],[124,28,125,32,"nameComponents"],[124,42,125,46],[124,43,125,47,"nameComponents"],[124,57,125,61],[124,58,125,62,"length"],[124,64,125,68],[124,67,125,71],[124,68,125,72],[124,69,125,73],[125,8,126,12],[125,12,126,16,"current"],[125,19,126,23],[125,22,126,26,"result"],[125,28,126,32],[126,8,127,12],[126,13,127,17],[126,19,127,23,"packageName"],[126,30,127,34],[126,34,127,38,"nameComponents"],[126,48,127,52],[126,49,127,53,"slice"],[126,54,127,58],[126,55,127,59],[126,56,127,60],[126,58,127,62],[126,59,127,63],[126,60,127,64],[126,61,127,65],[126,63,127,67],[127,10,128,16],[127,14,128,20],[127,15,128,21,"current"],[127,22,128,28],[127,23,128,29,"packageName"],[127,34,128,40],[127,35,128,41],[127,37,128,43],[128,12,129,20,"current"],[128,19,129,27],[128,20,129,28,"packageName"],[128,31,129,39],[128,32,129,40],[128,35,129,43],[128,36,129,44],[128,37,129,45],[129,10,130,16],[130,10,131,16,"current"],[130,17,131,23],[130,20,131,26,"current"],[130,27,131,33],[130,28,131,34,"packageName"],[130,39,131,45],[130,40,131,46],[131,8,132,12],[132,8,133,12],[132,12,133,16,"isProtobufTypeDefinition"],[132,36,133,40],[132,37,133,41,"service"],[132,44,133,48],[132,45,133,49],[132,47,133,51],[133,10,134,16,"current"],[133,17,134,23],[133,18,134,24,"serviceName"],[133,29,134,35],[133,30,134,36],[133,33,134,39,"service"],[133,40,134,46],[134,8,135,12],[134,9,135,13],[134,15,136,17],[135,10,137,16,"current"],[135,17,137,23],[135,18,137,24,"serviceName"],[135,29,137,35],[135,30,137,36],[135,33,137,39,"makeClientConstructor"],[135,54,137,60],[135,55,137,61,"service"],[135,62,137,68],[135,64,137,70,"serviceName"],[135,75,137,81],[135,77,137,83],[135,78,137,84],[135,79,137,85],[135,80,137,86],[136,8,138,12],[137,6,139,8],[138,4,140,4],[139,4,141,4],[139,11,141,11,"result"],[139,17,141,17],[140,2,142,0],[141,2,143,0,"exports"],[141,9,143,7],[141,10,143,8,"loadPackageDefinition"],[141,31,143,29],[141,34,143,32,"loadPackageDefinition"],[141,55,143,53],[142,0,143,54],[142,3]],"functionMap":{"names":["<global>","isPrototypePolluted","makeClientConstructor","ServiceClientImpl","Object.keys.forEach$argument_0","partial","<anonymous>","isProtobufTypeDefinition","loadPackageDefinition","nameComponents.some$argument_0"],"mappings":"AAA;ACoC;CDE;AEe;ICI;KDC;iCEC;KFoC;CFI;AKE;WCE;KDE;CLC;AOC;CPE;AQM;oCCM,mCD;CRoB"}},"type":"js/module"}]}