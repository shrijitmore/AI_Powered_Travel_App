{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Logger = exports.LogLevel = void 0;\n  exports.setLogLevel = setLogLevel;\n  exports.setUserLogHandler = setUserLogHandler;\n  /**\n   * @license\n   * Copyright 2017 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * A container for all of the Logger instances\n   */\n  const instances = [];\n  /**\n   * The JS SDK supports 5 log levels and also allows a user the ability to\n   * silence the logs altogether.\n   *\n   * The order is a follows:\n   * DEBUG < VERBOSE < INFO < WARN < ERROR\n   *\n   * All of the log types above the current log level will be captured (i.e. if\n   * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n   * `VERBOSE` logs will not)\n   */\n  var LogLevel;\n  (function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n  })(LogLevel || (exports.LogLevel = LogLevel = {}));\n  const levelStringToEnum = {\n    'debug': LogLevel.DEBUG,\n    'verbose': LogLevel.VERBOSE,\n    'info': LogLevel.INFO,\n    'warn': LogLevel.WARN,\n    'error': LogLevel.ERROR,\n    'silent': LogLevel.SILENT\n  };\n  /**\n   * The default log level\n   */\n  const defaultLogLevel = LogLevel.INFO;\n  /**\n   * By default, `console.debug` is not displayed in the developer console (in\n   * chrome). To avoid forcing users to have to opt-in to these logs twice\n   * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n   * logs to the `console.log` function.\n   */\n  const ConsoleMethod = {\n    [LogLevel.DEBUG]: 'log',\n    [LogLevel.VERBOSE]: 'log',\n    [LogLevel.INFO]: 'info',\n    [LogLevel.WARN]: 'warn',\n    [LogLevel.ERROR]: 'error'\n  };\n  /**\n   * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n   * messages on to their corresponding console counterparts (if the log method\n   * is supported by the current log level)\n   */\n  const defaultLogHandler = (instance, logType, ...args) => {\n    if (logType < instance.logLevel) {\n      return;\n    }\n    const now = new Date().toISOString();\n    const method = ConsoleMethod[logType];\n    if (method) {\n      console[method](`[${now}]  ${instance.name}:`, ...args);\n    } else {\n      throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\n    }\n  };\n  class Logger {\n    /**\n     * Gives you an instance of a Logger to capture messages according to\n     * Firebase's logging scheme.\n     *\n     * @param name The name that the logs will be associated with\n     */\n    constructor(name) {\n      this.name = name;\n      /**\n       * The log level of the given Logger instance.\n       */\n      this._logLevel = defaultLogLevel;\n      /**\n       * The main (internal) log handler for the Logger instance.\n       * Can be set to a new function in internal package code but not by user.\n       */\n      this._logHandler = defaultLogHandler;\n      /**\n       * The optional, additional, user-defined log handler for the Logger instance.\n       */\n      this._userLogHandler = null;\n      /**\n       * Capture the current instance for later use\n       */\n      instances.push(this);\n    }\n    get logLevel() {\n      return this._logLevel;\n    }\n    set logLevel(val) {\n      if (!(val in LogLevel)) {\n        throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n      }\n      this._logLevel = val;\n    }\n    // Workaround for setter/getter having to be the same type.\n    setLogLevel(val) {\n      this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n    }\n    get logHandler() {\n      return this._logHandler;\n    }\n    set logHandler(val) {\n      if (typeof val !== 'function') {\n        throw new TypeError('Value assigned to `logHandler` must be a function');\n      }\n      this._logHandler = val;\n    }\n    get userLogHandler() {\n      return this._userLogHandler;\n    }\n    set userLogHandler(val) {\n      this._userLogHandler = val;\n    }\n    /**\n     * The functions below are all based on the `console` interface\n     */\n    debug(...args) {\n      this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n      this._logHandler(this, LogLevel.DEBUG, ...args);\n    }\n    log(...args) {\n      this._userLogHandler && this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n      this._logHandler(this, LogLevel.VERBOSE, ...args);\n    }\n    info(...args) {\n      this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n      this._logHandler(this, LogLevel.INFO, ...args);\n    }\n    warn(...args) {\n      this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n      this._logHandler(this, LogLevel.WARN, ...args);\n    }\n    error(...args) {\n      this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n      this._logHandler(this, LogLevel.ERROR, ...args);\n    }\n  }\n  exports.Logger = Logger;\n  function setLogLevel(level) {\n    instances.forEach(inst => {\n      inst.setLogLevel(level);\n    });\n  }\n  function setUserLogHandler(logCallback, options) {\n    for (const instance of instances) {\n      let customLogLevel = null;\n      if (options && options.level) {\n        customLogLevel = levelStringToEnum[options.level];\n      }\n      if (logCallback === null) {\n        instance.userLogHandler = null;\n      } else {\n        instance.userLogHandler = (instance, level, ...args) => {\n          const message = args.map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          }).filter(arg => arg).join(' ');\n          if (level >= (customLogLevel ?? instance.logLevel)) {\n            logCallback({\n              level: LogLevel[level].toLowerCase(),\n              message,\n              args,\n              type: instance.name\n            });\n          }\n        };\n      }\n    }\n  }\n});","lineCount":214,"map":[[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,2,17,0],[25,0,18,0],[26,0,19,0],[27,2,20,0],[27,8,20,6,"instances"],[27,17,20,15],[27,20,20,18],[27,22,20,20],[28,2,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,2,32,0],[39,6,32,4,"LogLevel"],[39,14,32,12],[40,2,33,0],[40,3,33,1],[40,13,33,11,"LogLevel"],[40,21,33,19],[40,23,33,21],[41,4,34,4,"LogLevel"],[41,12,34,12],[41,13,34,13,"LogLevel"],[41,21,34,21],[41,22,34,22],[41,29,34,29],[41,30,34,30],[41,33,34,33],[41,34,34,34],[41,35,34,35],[41,38,34,38],[41,45,34,45],[42,4,35,4,"LogLevel"],[42,12,35,12],[42,13,35,13,"LogLevel"],[42,21,35,21],[42,22,35,22],[42,31,35,31],[42,32,35,32],[42,35,35,35],[42,36,35,36],[42,37,35,37],[42,40,35,40],[42,49,35,49],[43,4,36,4,"LogLevel"],[43,12,36,12],[43,13,36,13,"LogLevel"],[43,21,36,21],[43,22,36,22],[43,28,36,28],[43,29,36,29],[43,32,36,32],[43,33,36,33],[43,34,36,34],[43,37,36,37],[43,43,36,43],[44,4,37,4,"LogLevel"],[44,12,37,12],[44,13,37,13,"LogLevel"],[44,21,37,21],[44,22,37,22],[44,28,37,28],[44,29,37,29],[44,32,37,32],[44,33,37,33],[44,34,37,34],[44,37,37,37],[44,43,37,43],[45,4,38,4,"LogLevel"],[45,12,38,12],[45,13,38,13,"LogLevel"],[45,21,38,21],[45,22,38,22],[45,29,38,29],[45,30,38,30],[45,33,38,33],[45,34,38,34],[45,35,38,35],[45,38,38,38],[45,45,38,45],[46,4,39,4,"LogLevel"],[46,12,39,12],[46,13,39,13,"LogLevel"],[46,21,39,21],[46,22,39,22],[46,30,39,30],[46,31,39,31],[46,34,39,34],[46,35,39,35],[46,36,39,36],[46,39,39,39],[46,47,39,47],[47,2,40,0],[47,3,40,1],[47,5,40,3,"LogLevel"],[47,13,40,11],[47,18,40,11,"exports"],[47,25,40,11],[47,26,40,11,"LogLevel"],[47,34,40,11],[47,37,40,16,"LogLevel"],[47,45,40,24],[47,48,40,27],[47,49,40,28],[47,50,40,29],[47,51,40,30],[47,52,40,31],[48,2,41,0],[48,8,41,6,"levelStringToEnum"],[48,25,41,23],[48,28,41,26],[49,4,42,4],[49,11,42,11],[49,13,42,13,"LogLevel"],[49,21,42,21],[49,22,42,22,"DEBUG"],[49,27,42,27],[50,4,43,4],[50,13,43,13],[50,15,43,15,"LogLevel"],[50,23,43,23],[50,24,43,24,"VERBOSE"],[50,31,43,31],[51,4,44,4],[51,10,44,10],[51,12,44,12,"LogLevel"],[51,20,44,20],[51,21,44,21,"INFO"],[51,25,44,25],[52,4,45,4],[52,10,45,10],[52,12,45,12,"LogLevel"],[52,20,45,20],[52,21,45,21,"WARN"],[52,25,45,25],[53,4,46,4],[53,11,46,11],[53,13,46,13,"LogLevel"],[53,21,46,21],[53,22,46,22,"ERROR"],[53,27,46,27],[54,4,47,4],[54,12,47,12],[54,14,47,14,"LogLevel"],[54,22,47,22],[54,23,47,23,"SILENT"],[55,2,48,0],[55,3,48,1],[56,2,49,0],[57,0,50,0],[58,0,51,0],[59,2,52,0],[59,8,52,6,"defaultLogLevel"],[59,23,52,21],[59,26,52,24,"LogLevel"],[59,34,52,32],[59,35,52,33,"INFO"],[59,39,52,37],[60,2,53,0],[61,0,54,0],[62,0,55,0],[63,0,56,0],[64,0,57,0],[65,0,58,0],[66,2,59,0],[66,8,59,6,"ConsoleMethod"],[66,21,59,19],[66,24,59,22],[67,4,60,4],[67,5,60,5,"LogLevel"],[67,13,60,13],[67,14,60,14,"DEBUG"],[67,19,60,19],[67,22,60,22],[67,27,60,27],[68,4,61,4],[68,5,61,5,"LogLevel"],[68,13,61,13],[68,14,61,14,"VERBOSE"],[68,21,61,21],[68,24,61,24],[68,29,61,29],[69,4,62,4],[69,5,62,5,"LogLevel"],[69,13,62,13],[69,14,62,14,"INFO"],[69,18,62,18],[69,21,62,21],[69,27,62,27],[70,4,63,4],[70,5,63,5,"LogLevel"],[70,13,63,13],[70,14,63,14,"WARN"],[70,18,63,18],[70,21,63,21],[70,27,63,27],[71,4,64,4],[71,5,64,5,"LogLevel"],[71,13,64,13],[71,14,64,14,"ERROR"],[71,19,64,19],[71,22,64,22],[72,2,65,0],[72,3,65,1],[73,2,66,0],[74,0,67,0],[75,0,68,0],[76,0,69,0],[77,0,70,0],[78,2,71,0],[78,8,71,6,"defaultLogHandler"],[78,25,71,23],[78,28,71,26,"defaultLogHandler"],[78,29,71,27,"instance"],[78,37,71,35],[78,39,71,37,"logType"],[78,46,71,44],[78,48,71,46],[78,51,71,49,"args"],[78,55,71,53],[78,60,71,58],[79,4,72,4],[79,8,72,8,"logType"],[79,15,72,15],[79,18,72,18,"instance"],[79,26,72,26],[79,27,72,27,"logLevel"],[79,35,72,35],[79,37,72,37],[80,6,73,8],[81,4,74,4],[82,4,75,4],[82,10,75,10,"now"],[82,13,75,13],[82,16,75,16],[82,20,75,20,"Date"],[82,24,75,24],[82,25,75,25],[82,26,75,26],[82,27,75,27,"toISOString"],[82,38,75,38],[82,39,75,39],[82,40,75,40],[83,4,76,4],[83,10,76,10,"method"],[83,16,76,16],[83,19,76,19,"ConsoleMethod"],[83,32,76,32],[83,33,76,33,"logType"],[83,40,76,40],[83,41,76,41],[84,4,77,4],[84,8,77,8,"method"],[84,14,77,14],[84,16,77,16],[85,6,78,8,"console"],[85,13,78,15],[85,14,78,16,"method"],[85,20,78,22],[85,21,78,23],[85,22,78,24],[85,26,78,28,"now"],[85,29,78,31],[85,35,78,37,"instance"],[85,43,78,45],[85,44,78,46,"name"],[85,48,78,50],[85,51,78,53],[85,53,78,55],[85,56,78,58,"args"],[85,60,78,62],[85,61,78,63],[86,4,79,4],[86,5,79,5],[86,11,80,9],[87,6,81,8],[87,12,81,14],[87,16,81,18,"Error"],[87,21,81,23],[87,22,81,24],[87,84,81,86,"logType"],[87,91,81,93],[87,94,81,96],[87,95,81,97],[88,4,82,4],[89,2,83,0],[89,3,83,1],[90,2,84,0],[90,8,84,6,"Logger"],[90,14,84,12],[90,15,84,13],[91,4,85,4],[92,0,86,0],[93,0,87,0],[94,0,88,0],[95,0,89,0],[96,0,90,0],[97,4,91,4,"constructor"],[97,15,91,15,"constructor"],[97,16,91,16,"name"],[97,20,91,20],[97,22,91,22],[98,6,92,8],[98,10,92,12],[98,11,92,13,"name"],[98,15,92,17],[98,18,92,20,"name"],[98,22,92,24],[99,6,93,8],[100,0,94,0],[101,0,95,0],[102,6,96,8],[102,10,96,12],[102,11,96,13,"_logLevel"],[102,20,96,22],[102,23,96,25,"defaultLogLevel"],[102,38,96,40],[103,6,97,8],[104,0,98,0],[105,0,99,0],[106,0,100,0],[107,6,101,8],[107,10,101,12],[107,11,101,13,"_logHandler"],[107,22,101,24],[107,25,101,27,"defaultLogHandler"],[107,42,101,44],[108,6,102,8],[109,0,103,0],[110,0,104,0],[111,6,105,8],[111,10,105,12],[111,11,105,13,"_userLogHandler"],[111,26,105,28],[111,29,105,31],[111,33,105,35],[112,6,106,8],[113,0,107,0],[114,0,108,0],[115,6,109,8,"instances"],[115,15,109,17],[115,16,109,18,"push"],[115,20,109,22],[115,21,109,23],[115,25,109,27],[115,26,109,28],[116,4,110,4],[117,4,111,4],[117,8,111,8,"logLevel"],[117,16,111,16,"logLevel"],[117,17,111,16],[117,19,111,19],[118,6,112,8],[118,13,112,15],[118,17,112,19],[118,18,112,20,"_logLevel"],[118,27,112,29],[119,4,113,4],[120,4,114,4],[120,8,114,8,"logLevel"],[120,16,114,16,"logLevel"],[120,17,114,17,"val"],[120,20,114,20],[120,22,114,22],[121,6,115,8],[121,10,115,12],[121,12,115,14,"val"],[121,15,115,17],[121,19,115,21,"LogLevel"],[121,27,115,29],[121,28,115,30],[121,30,115,32],[122,8,116,12],[122,14,116,18],[122,18,116,22,"TypeError"],[122,27,116,31],[122,28,116,32],[122,46,116,50,"val"],[122,49,116,53],[122,77,116,81],[122,78,116,82],[123,6,117,8],[124,6,118,8],[124,10,118,12],[124,11,118,13,"_logLevel"],[124,20,118,22],[124,23,118,25,"val"],[124,26,118,28],[125,4,119,4],[126,4,120,4],[127,4,121,4,"setLogLevel"],[127,15,121,15,"setLogLevel"],[127,16,121,16,"val"],[127,19,121,19],[127,21,121,21],[128,6,122,8],[128,10,122,12],[128,11,122,13,"_logLevel"],[128,20,122,22],[128,23,122,25],[128,30,122,32,"val"],[128,33,122,35],[128,38,122,40],[128,46,122,48],[128,49,122,51,"levelStringToEnum"],[128,66,122,68],[128,67,122,69,"val"],[128,70,122,72],[128,71,122,73],[128,74,122,76,"val"],[128,77,122,79],[129,4,123,4],[130,4,124,4],[130,8,124,8,"logHandler"],[130,18,124,18,"logHandler"],[130,19,124,18],[130,21,124,21],[131,6,125,8],[131,13,125,15],[131,17,125,19],[131,18,125,20,"_logHandler"],[131,29,125,31],[132,4,126,4],[133,4,127,4],[133,8,127,8,"logHandler"],[133,18,127,18,"logHandler"],[133,19,127,19,"val"],[133,22,127,22],[133,24,127,24],[134,6,128,8],[134,10,128,12],[134,17,128,19,"val"],[134,20,128,22],[134,25,128,27],[134,35,128,37],[134,37,128,39],[135,8,129,12],[135,14,129,18],[135,18,129,22,"TypeError"],[135,27,129,31],[135,28,129,32],[135,79,129,83],[135,80,129,84],[136,6,130,8],[137,6,131,8],[137,10,131,12],[137,11,131,13,"_logHandler"],[137,22,131,24],[137,25,131,27,"val"],[137,28,131,30],[138,4,132,4],[139,4,133,4],[139,8,133,8,"userLogHandler"],[139,22,133,22,"userLogHandler"],[139,23,133,22],[139,25,133,25],[140,6,134,8],[140,13,134,15],[140,17,134,19],[140,18,134,20,"_userLogHandler"],[140,33,134,35],[141,4,135,4],[142,4,136,4],[142,8,136,8,"userLogHandler"],[142,22,136,22,"userLogHandler"],[142,23,136,23,"val"],[142,26,136,26],[142,28,136,28],[143,6,137,8],[143,10,137,12],[143,11,137,13,"_userLogHandler"],[143,26,137,28],[143,29,137,31,"val"],[143,32,137,34],[144,4,138,4],[145,4,139,4],[146,0,140,0],[147,0,141,0],[148,4,142,4,"debug"],[148,9,142,9,"debug"],[148,10,142,10],[148,13,142,13,"args"],[148,17,142,17],[148,19,142,19],[149,6,143,8],[149,10,143,12],[149,11,143,13,"_userLogHandler"],[149,26,143,28],[149,30,143,32],[149,34,143,36],[149,35,143,37,"_userLogHandler"],[149,50,143,52],[149,51,143,53],[149,55,143,57],[149,57,143,59,"LogLevel"],[149,65,143,67],[149,66,143,68,"DEBUG"],[149,71,143,73],[149,73,143,75],[149,76,143,78,"args"],[149,80,143,82],[149,81,143,83],[150,6,144,8],[150,10,144,12],[150,11,144,13,"_logHandler"],[150,22,144,24],[150,23,144,25],[150,27,144,29],[150,29,144,31,"LogLevel"],[150,37,144,39],[150,38,144,40,"DEBUG"],[150,43,144,45],[150,45,144,47],[150,48,144,50,"args"],[150,52,144,54],[150,53,144,55],[151,4,145,4],[152,4,146,4,"log"],[152,7,146,7,"log"],[152,8,146,8],[152,11,146,11,"args"],[152,15,146,15],[152,17,146,17],[153,6,147,8],[153,10,147,12],[153,11,147,13,"_userLogHandler"],[153,26,147,28],[153,30,148,12],[153,34,148,16],[153,35,148,17,"_userLogHandler"],[153,50,148,32],[153,51,148,33],[153,55,148,37],[153,57,148,39,"LogLevel"],[153,65,148,47],[153,66,148,48,"VERBOSE"],[153,73,148,55],[153,75,148,57],[153,78,148,60,"args"],[153,82,148,64],[153,83,148,65],[154,6,149,8],[154,10,149,12],[154,11,149,13,"_logHandler"],[154,22,149,24],[154,23,149,25],[154,27,149,29],[154,29,149,31,"LogLevel"],[154,37,149,39],[154,38,149,40,"VERBOSE"],[154,45,149,47],[154,47,149,49],[154,50,149,52,"args"],[154,54,149,56],[154,55,149,57],[155,4,150,4],[156,4,151,4,"info"],[156,8,151,8,"info"],[156,9,151,9],[156,12,151,12,"args"],[156,16,151,16],[156,18,151,18],[157,6,152,8],[157,10,152,12],[157,11,152,13,"_userLogHandler"],[157,26,152,28],[157,30,152,32],[157,34,152,36],[157,35,152,37,"_userLogHandler"],[157,50,152,52],[157,51,152,53],[157,55,152,57],[157,57,152,59,"LogLevel"],[157,65,152,67],[157,66,152,68,"INFO"],[157,70,152,72],[157,72,152,74],[157,75,152,77,"args"],[157,79,152,81],[157,80,152,82],[158,6,153,8],[158,10,153,12],[158,11,153,13,"_logHandler"],[158,22,153,24],[158,23,153,25],[158,27,153,29],[158,29,153,31,"LogLevel"],[158,37,153,39],[158,38,153,40,"INFO"],[158,42,153,44],[158,44,153,46],[158,47,153,49,"args"],[158,51,153,53],[158,52,153,54],[159,4,154,4],[160,4,155,4,"warn"],[160,8,155,8,"warn"],[160,9,155,9],[160,12,155,12,"args"],[160,16,155,16],[160,18,155,18],[161,6,156,8],[161,10,156,12],[161,11,156,13,"_userLogHandler"],[161,26,156,28],[161,30,156,32],[161,34,156,36],[161,35,156,37,"_userLogHandler"],[161,50,156,52],[161,51,156,53],[161,55,156,57],[161,57,156,59,"LogLevel"],[161,65,156,67],[161,66,156,68,"WARN"],[161,70,156,72],[161,72,156,74],[161,75,156,77,"args"],[161,79,156,81],[161,80,156,82],[162,6,157,8],[162,10,157,12],[162,11,157,13,"_logHandler"],[162,22,157,24],[162,23,157,25],[162,27,157,29],[162,29,157,31,"LogLevel"],[162,37,157,39],[162,38,157,40,"WARN"],[162,42,157,44],[162,44,157,46],[162,47,157,49,"args"],[162,51,157,53],[162,52,157,54],[163,4,158,4],[164,4,159,4,"error"],[164,9,159,9,"error"],[164,10,159,10],[164,13,159,13,"args"],[164,17,159,17],[164,19,159,19],[165,6,160,8],[165,10,160,12],[165,11,160,13,"_userLogHandler"],[165,26,160,28],[165,30,160,32],[165,34,160,36],[165,35,160,37,"_userLogHandler"],[165,50,160,52],[165,51,160,53],[165,55,160,57],[165,57,160,59,"LogLevel"],[165,65,160,67],[165,66,160,68,"ERROR"],[165,71,160,73],[165,73,160,75],[165,76,160,78,"args"],[165,80,160,82],[165,81,160,83],[166,6,161,8],[166,10,161,12],[166,11,161,13,"_logHandler"],[166,22,161,24],[166,23,161,25],[166,27,161,29],[166,29,161,31,"LogLevel"],[166,37,161,39],[166,38,161,40,"ERROR"],[166,43,161,45],[166,45,161,47],[166,48,161,50,"args"],[166,52,161,54],[166,53,161,55],[167,4,162,4],[168,2,163,0],[169,2,163,1,"exports"],[169,9,163,1],[169,10,163,1,"Logger"],[169,16,163,1],[169,19,163,1,"Logger"],[169,25,163,1],[170,2,164,0],[170,11,164,9,"setLogLevel"],[170,22,164,20,"setLogLevel"],[170,23,164,21,"level"],[170,28,164,26],[170,30,164,28],[171,4,165,4,"instances"],[171,13,165,13],[171,14,165,14,"forEach"],[171,21,165,21],[171,22,165,22,"inst"],[171,26,165,26],[171,30,165,30],[172,6,166,8,"inst"],[172,10,166,12],[172,11,166,13,"setLogLevel"],[172,22,166,24],[172,23,166,25,"level"],[172,28,166,30],[172,29,166,31],[173,4,167,4],[173,5,167,5],[173,6,167,6],[174,2,168,0],[175,2,169,0],[175,11,169,9,"setUserLogHandler"],[175,28,169,26,"setUserLogHandler"],[175,29,169,27,"logCallback"],[175,40,169,38],[175,42,169,40,"options"],[175,49,169,47],[175,51,169,49],[176,4,170,4],[176,9,170,9],[176,15,170,15,"instance"],[176,23,170,23],[176,27,170,27,"instances"],[176,36,170,36],[176,38,170,38],[177,6,171,8],[177,10,171,12,"customLogLevel"],[177,24,171,26],[177,27,171,29],[177,31,171,33],[178,6,172,8],[178,10,172,12,"options"],[178,17,172,19],[178,21,172,23,"options"],[178,28,172,30],[178,29,172,31,"level"],[178,34,172,36],[178,36,172,38],[179,8,173,12,"customLogLevel"],[179,22,173,26],[179,25,173,29,"levelStringToEnum"],[179,42,173,46],[179,43,173,47,"options"],[179,50,173,54],[179,51,173,55,"level"],[179,56,173,60],[179,57,173,61],[180,6,174,8],[181,6,175,8],[181,10,175,12,"logCallback"],[181,21,175,23],[181,26,175,28],[181,30,175,32],[181,32,175,34],[182,8,176,12,"instance"],[182,16,176,20],[182,17,176,21,"userLogHandler"],[182,31,176,35],[182,34,176,38],[182,38,176,42],[183,6,177,8],[183,7,177,9],[183,13,178,13],[184,8,179,12,"instance"],[184,16,179,20],[184,17,179,21,"userLogHandler"],[184,31,179,35],[184,34,179,38],[184,35,179,39,"instance"],[184,43,179,47],[184,45,179,49,"level"],[184,50,179,54],[184,52,179,56],[184,55,179,59,"args"],[184,59,179,63],[184,64,179,68],[185,10,180,16],[185,16,180,22,"message"],[185,23,180,29],[185,26,180,32,"args"],[185,30,180,36],[185,31,181,21,"map"],[185,34,181,24],[185,35,181,25,"arg"],[185,38,181,28],[185,42,181,32],[186,12,182,20],[186,16,182,24,"arg"],[186,19,182,27],[186,23,182,31],[186,27,182,35],[186,29,182,37],[187,14,183,24],[187,21,183,31],[187,25,183,35],[188,12,184,20],[188,13,184,21],[188,19,185,25],[188,23,185,29],[188,30,185,36,"arg"],[188,33,185,39],[188,38,185,44],[188,46,185,52],[188,48,185,54],[189,14,186,24],[189,21,186,31,"arg"],[189,24,186,34],[190,12,187,20],[190,13,187,21],[190,19,188,25],[190,23,188,29],[190,30,188,36,"arg"],[190,33,188,39],[190,38,188,44],[190,46,188,52],[190,50,188,56],[190,57,188,63,"arg"],[190,60,188,66],[190,65,188,71],[190,74,188,80],[190,76,188,82],[191,14,189,24],[191,21,189,31,"arg"],[191,24,189,34],[191,25,189,35,"toString"],[191,33,189,43],[191,34,189,44],[191,35,189,45],[192,12,190,20],[192,13,190,21],[192,19,191,25],[192,23,191,29,"arg"],[192,26,191,32],[192,38,191,44,"Error"],[192,43,191,49],[192,45,191,51],[193,14,192,24],[193,21,192,31,"arg"],[193,24,192,34],[193,25,192,35,"message"],[193,32,192,42],[194,12,193,20],[194,13,193,21],[194,19,194,25],[195,14,195,24],[195,18,195,28],[196,16,196,28],[196,23,196,35,"JSON"],[196,27,196,39],[196,28,196,40,"stringify"],[196,37,196,49],[196,38,196,50,"arg"],[196,41,196,53],[196,42,196,54],[197,14,197,24],[197,15,197,25],[197,16,198,24],[197,23,198,31,"ignored"],[197,30,198,38],[197,32,198,40],[198,16,199,28],[198,23,199,35],[198,27,199,39],[199,14,200,24],[200,12,201,20],[201,10,202,16],[201,11,202,17],[201,12,202,18],[201,13,203,21,"filter"],[201,19,203,27],[201,20,203,28,"arg"],[201,23,203,31],[201,27,203,35,"arg"],[201,30,203,38],[201,31,203,39],[201,32,204,21,"join"],[201,36,204,25],[201,37,204,26],[201,40,204,29],[201,41,204,30],[202,10,205,16],[202,14,205,20,"level"],[202,19,205,25],[202,24,205,30,"customLogLevel"],[202,38,205,44],[202,42,205,48,"instance"],[202,50,205,56],[202,51,205,57,"logLevel"],[202,59,205,65],[202,60,205,66],[202,62,205,68],[203,12,206,20,"logCallback"],[203,23,206,31],[203,24,206,32],[204,14,207,24,"level"],[204,19,207,29],[204,21,207,31,"LogLevel"],[204,29,207,39],[204,30,207,40,"level"],[204,35,207,45],[204,36,207,46],[204,37,207,47,"toLowerCase"],[204,48,207,58],[204,49,207,59],[204,50,207,60],[205,14,208,24,"message"],[205,21,208,31],[206,14,209,24,"args"],[206,18,209,28],[207,14,210,24,"type"],[207,18,210,28],[207,20,210,30,"instance"],[207,28,210,38],[207,29,210,39,"name"],[208,12,211,20],[208,13,211,21],[208,14,211,22],[209,10,212,16],[210,8,213,12],[210,9,213,13],[211,6,214,8],[212,4,215,4],[213,2,216,0],[214,0,216,1],[214,3]],"functionMap":{"names":["<global>","<anonymous>","defaultLogHandler","Logger","Logger#constructor","Logger#get__logLevel","Logger#set__logLevel","Logger#setLogLevel","Logger#get__logHandler","Logger#set__logHandler","Logger#get__userLogHandler","Logger#set__userLogHandler","Logger#debug","Logger#log","Logger#info","Logger#warn","Logger#error","setLogLevel","instances.forEach$argument_0","setUserLogHandler","instance.userLogHandler","args.map$argument_0","args.map.filter$argument_0"],"mappings":"AAA;CCgC;CDO;0BE+B;CFY;AGC;ICO;KDmB;IEC;KFE;IGC;KHK;IIE;KJE;IKC;KLE;IMC;KNK;IOC;KPE;IQC;KRE;ISI;KTG;IUC;KVI;IWC;KXG;IYC;KZG;IaC;KbG;CHC;AiBC;sBCC;KDE;CjBC;AmBC;sCCU;yBCE;iBDqB;4BEC,UF;aDU;CnBG"}},"type":"js/module"}]}