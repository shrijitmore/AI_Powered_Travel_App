{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2022 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BaseSubchannelWrapper = void 0;\n  class BaseSubchannelWrapper {\n    constructor(child) {\n      this.child = child;\n    }\n    getConnectivityState() {\n      return this.child.getConnectivityState();\n    }\n    addConnectivityStateListener(listener) {\n      this.child.addConnectivityStateListener(listener);\n    }\n    removeConnectivityStateListener(listener) {\n      this.child.removeConnectivityStateListener(listener);\n    }\n    startConnecting() {\n      this.child.startConnecting();\n    }\n    getAddress() {\n      return this.child.getAddress();\n    }\n    throttleKeepalive(newKeepaliveTime) {\n      this.child.throttleKeepalive(newKeepaliveTime);\n    }\n    ref() {\n      this.child.ref();\n    }\n    unref() {\n      this.child.unref();\n    }\n    getChannelzRef() {\n      return this.child.getChannelzRef();\n    }\n    getRealSubchannel() {\n      return this.child.getRealSubchannel();\n    }\n    realSubchannelEquals(other) {\n      return this.getRealSubchannel() === other.getRealSubchannel();\n    }\n  }\n  exports.BaseSubchannelWrapper = BaseSubchannelWrapper;\n});","lineCount":63,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,2,18,0,"Object"],[20,8,18,6],[20,9,18,7,"defineProperty"],[20,23,18,21],[20,24,18,22,"exports"],[20,31,18,29],[20,33,18,31],[20,45,18,43],[20,47,18,45],[21,4,18,47,"value"],[21,9,18,52],[21,11,18,54],[22,2,18,59],[22,3,18,60],[22,4,18,61],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"BaseSubchannelWrapper"],[23,31,19,29],[23,34,19,32],[23,39,19,37],[23,40,19,38],[24,2,20,0],[24,8,20,6,"BaseSubchannelWrapper"],[24,29,20,27],[24,30,20,28],[25,4,21,4,"constructor"],[25,15,21,15,"constructor"],[25,16,21,16,"child"],[25,21,21,21],[25,23,21,23],[26,6,22,8],[26,10,22,12],[26,11,22,13,"child"],[26,16,22,18],[26,19,22,21,"child"],[26,24,22,26],[27,4,23,4],[28,4,24,4,"getConnectivityState"],[28,24,24,24,"getConnectivityState"],[28,25,24,24],[28,27,24,27],[29,6,25,8],[29,13,25,15],[29,17,25,19],[29,18,25,20,"child"],[29,23,25,25],[29,24,25,26,"getConnectivityState"],[29,44,25,46],[29,45,25,47],[29,46,25,48],[30,4,26,4],[31,4,27,4,"addConnectivityStateListener"],[31,32,27,32,"addConnectivityStateListener"],[31,33,27,33,"listener"],[31,41,27,41],[31,43,27,43],[32,6,28,8],[32,10,28,12],[32,11,28,13,"child"],[32,16,28,18],[32,17,28,19,"addConnectivityStateListener"],[32,45,28,47],[32,46,28,48,"listener"],[32,54,28,56],[32,55,28,57],[33,4,29,4],[34,4,30,4,"removeConnectivityStateListener"],[34,35,30,35,"removeConnectivityStateListener"],[34,36,30,36,"listener"],[34,44,30,44],[34,46,30,46],[35,6,31,8],[35,10,31,12],[35,11,31,13,"child"],[35,16,31,18],[35,17,31,19,"removeConnectivityStateListener"],[35,48,31,50],[35,49,31,51,"listener"],[35,57,31,59],[35,58,31,60],[36,4,32,4],[37,4,33,4,"startConnecting"],[37,19,33,19,"startConnecting"],[37,20,33,19],[37,22,33,22],[38,6,34,8],[38,10,34,12],[38,11,34,13,"child"],[38,16,34,18],[38,17,34,19,"startConnecting"],[38,32,34,34],[38,33,34,35],[38,34,34,36],[39,4,35,4],[40,4,36,4,"getAddress"],[40,14,36,14,"getAddress"],[40,15,36,14],[40,17,36,17],[41,6,37,8],[41,13,37,15],[41,17,37,19],[41,18,37,20,"child"],[41,23,37,25],[41,24,37,26,"getAddress"],[41,34,37,36],[41,35,37,37],[41,36,37,38],[42,4,38,4],[43,4,39,4,"throttleKeepalive"],[43,21,39,21,"throttleKeepalive"],[43,22,39,22,"newKeepaliveTime"],[43,38,39,38],[43,40,39,40],[44,6,40,8],[44,10,40,12],[44,11,40,13,"child"],[44,16,40,18],[44,17,40,19,"throttleKeepalive"],[44,34,40,36],[44,35,40,37,"newKeepaliveTime"],[44,51,40,53],[44,52,40,54],[45,4,41,4],[46,4,42,4,"ref"],[46,7,42,7,"ref"],[46,8,42,7],[46,10,42,10],[47,6,43,8],[47,10,43,12],[47,11,43,13,"child"],[47,16,43,18],[47,17,43,19,"ref"],[47,20,43,22],[47,21,43,23],[47,22,43,24],[48,4,44,4],[49,4,45,4,"unref"],[49,9,45,9,"unref"],[49,10,45,9],[49,12,45,12],[50,6,46,8],[50,10,46,12],[50,11,46,13,"child"],[50,16,46,18],[50,17,46,19,"unref"],[50,22,46,24],[50,23,46,25],[50,24,46,26],[51,4,47,4],[52,4,48,4,"getChannelzRef"],[52,18,48,18,"getChannelzRef"],[52,19,48,18],[52,21,48,21],[53,6,49,8],[53,13,49,15],[53,17,49,19],[53,18,49,20,"child"],[53,23,49,25],[53,24,49,26,"getChannelzRef"],[53,38,49,40],[53,39,49,41],[53,40,49,42],[54,4,50,4],[55,4,51,4,"getRealSubchannel"],[55,21,51,21,"getRealSubchannel"],[55,22,51,21],[55,24,51,24],[56,6,52,8],[56,13,52,15],[56,17,52,19],[56,18,52,20,"child"],[56,23,52,25],[56,24,52,26,"getRealSubchannel"],[56,41,52,43],[56,42,52,44],[56,43,52,45],[57,4,53,4],[58,4,54,4,"realSubchannelEquals"],[58,24,54,24,"realSubchannelEquals"],[58,25,54,25,"other"],[58,30,54,30],[58,32,54,32],[59,6,55,8],[59,13,55,15],[59,17,55,19],[59,18,55,20,"getRealSubchannel"],[59,35,55,37],[59,36,55,38],[59,37,55,39],[59,42,55,44,"other"],[59,47,55,49],[59,48,55,50,"getRealSubchannel"],[59,65,55,67],[59,66,55,68],[59,67,55,69],[60,4,56,4],[61,2,57,0],[62,2,58,0,"exports"],[62,9,58,7],[62,10,58,8,"BaseSubchannelWrapper"],[62,31,58,29],[62,34,58,32,"BaseSubchannelWrapper"],[62,55,58,53],[63,0,58,54],[63,3]],"functionMap":{"names":["<global>","BaseSubchannelWrapper","BaseSubchannelWrapper#constructor","BaseSubchannelWrapper#getConnectivityState","BaseSubchannelWrapper#addConnectivityStateListener","BaseSubchannelWrapper#removeConnectivityStateListener","BaseSubchannelWrapper#startConnecting","BaseSubchannelWrapper#getAddress","BaseSubchannelWrapper#throttleKeepalive","BaseSubchannelWrapper#ref","BaseSubchannelWrapper#unref","BaseSubchannelWrapper#getChannelzRef","BaseSubchannelWrapper#getRealSubchannel","BaseSubchannelWrapper#realSubchannelEquals"],"mappings":"AAA;ACmB;ICC;KDE;IEC;KFE;IGC;KHE;IIC;KJE;IKC;KLE;IMC;KNE;IOC;KPE;IQC;KRE;ISC;KTE;IUC;KVE;IWC;KXE;IYC;KZE;CDC"}},"type":"js/module"}]}