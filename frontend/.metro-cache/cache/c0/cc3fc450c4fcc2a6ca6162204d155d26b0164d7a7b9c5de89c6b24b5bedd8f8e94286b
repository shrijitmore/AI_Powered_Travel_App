{"dependencies":[{"name":"events","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":17,"index":865},"end":{"line":20,"column":34,"index":882}}],"key":"JsYPPZbiyTKGtgYi4nFi37XasmQ=","exportNames":["*"]}},{"name":"stream","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":17,"index":901},"end":{"line":21,"column":34,"index":918}}],"key":"ywjhWBPQUrHXIfwGsbgNg7Szt/A=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":20,"index":940},"end":{"line":22,"column":42,"index":962}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * Copyright 2019 gRPC authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ClientDuplexStreamImpl = exports.ClientWritableStreamImpl = exports.ClientReadableStreamImpl = exports.ClientUnaryCallImpl = exports.callErrorFromStatus = void 0;\n  const events_1 = require(_dependencyMap[0], \"events\");\n  const stream_1 = require(_dependencyMap[1], \"stream\");\n  const constants_1 = require(_dependencyMap[2], \"./constants\");\n  /**\n   * Construct a ServiceError from a StatusObject. This function exists primarily\n   * as an attempt to make the error stack trace clearly communicate that the\n   * error is not necessarily a problem in gRPC itself.\n   * @param status\n   */\n  function callErrorFromStatus(status, callerStack) {\n    const message = `${status.code} ${constants_1.Status[status.code]}: ${status.details}`;\n    const error = new Error(message);\n    const stack = `${error.stack}\\nfor call at\\n${callerStack}`;\n    return Object.assign(new Error(message), status, {\n      stack\n    });\n  }\n  exports.callErrorFromStatus = callErrorFromStatus;\n  class ClientUnaryCallImpl extends events_1.EventEmitter {\n    constructor() {\n      super();\n    }\n    cancel() {\n      var _a;\n      (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n      var _a, _b;\n      return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n  }\n  exports.ClientUnaryCallImpl = ClientUnaryCallImpl;\n  class ClientReadableStreamImpl extends stream_1.Readable {\n    constructor(deserialize) {\n      super({\n        objectMode: true\n      });\n      this.deserialize = deserialize;\n    }\n    cancel() {\n      var _a;\n      (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n      var _a, _b;\n      return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n      var _a;\n      (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n  }\n  exports.ClientReadableStreamImpl = ClientReadableStreamImpl;\n  class ClientWritableStreamImpl extends stream_1.Writable {\n    constructor(serialize) {\n      super({\n        objectMode: true\n      });\n      this.serialize = serialize;\n    }\n    cancel() {\n      var _a;\n      (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n      var _a, _b;\n      return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _write(chunk, encoding, cb) {\n      var _a;\n      const context = {\n        callback: cb\n      };\n      const flags = Number(encoding);\n      if (!Number.isNaN(flags)) {\n        context.flags = flags;\n      }\n      (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n      var _a;\n      (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n      cb();\n    }\n  }\n  exports.ClientWritableStreamImpl = ClientWritableStreamImpl;\n  class ClientDuplexStreamImpl extends stream_1.Duplex {\n    constructor(serialize, deserialize) {\n      super({\n        objectMode: true\n      });\n      this.serialize = serialize;\n      this.deserialize = deserialize;\n    }\n    cancel() {\n      var _a;\n      (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n      var _a, _b;\n      return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n      var _a;\n      (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n    _write(chunk, encoding, cb) {\n      var _a;\n      const context = {\n        callback: cb\n      };\n      const flags = Number(encoding);\n      if (!Number.isNaN(flags)) {\n        context.flags = flags;\n      }\n      (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n      var _a;\n      (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n      cb();\n    }\n  }\n  exports.ClientDuplexStreamImpl = ClientDuplexStreamImpl;\n});","lineCount":148,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,2,18,0,"Object"],[20,8,18,6],[20,9,18,7,"defineProperty"],[20,23,18,21],[20,24,18,22,"exports"],[20,31,18,29],[20,33,18,31],[20,45,18,43],[20,47,18,45],[21,4,18,47,"value"],[21,9,18,52],[21,11,18,54],[22,2,18,59],[22,3,18,60],[22,4,18,61],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"ClientDuplexStreamImpl"],[23,32,19,30],[23,35,19,33,"exports"],[23,42,19,40],[23,43,19,41,"ClientWritableStreamImpl"],[23,67,19,65],[23,70,19,68,"exports"],[23,77,19,75],[23,78,19,76,"ClientReadableStreamImpl"],[23,102,19,100],[23,105,19,103,"exports"],[23,112,19,110],[23,113,19,111,"ClientUnaryCallImpl"],[23,132,19,130],[23,135,19,133,"exports"],[23,142,19,140],[23,143,19,141,"callErrorFromStatus"],[23,162,19,160],[23,165,19,163],[23,170,19,168],[23,171,19,169],[24,2,20,0],[24,8,20,6,"events_1"],[24,16,20,14],[24,19,20,17,"require"],[24,26,20,24],[24,27,20,24,"_dependencyMap"],[24,41,20,24],[24,54,20,33],[24,55,20,34],[25,2,21,0],[25,8,21,6,"stream_1"],[25,16,21,14],[25,19,21,17,"require"],[25,26,21,24],[25,27,21,24,"_dependencyMap"],[25,41,21,24],[25,54,21,33],[25,55,21,34],[26,2,22,0],[26,8,22,6,"constants_1"],[26,19,22,17],[26,22,22,20,"require"],[26,29,22,27],[26,30,22,27,"_dependencyMap"],[26,44,22,27],[26,62,22,41],[26,63,22,42],[27,2,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,2,29,0],[33,11,29,9,"callErrorFromStatus"],[33,30,29,28,"callErrorFromStatus"],[33,31,29,29,"status"],[33,37,29,35],[33,39,29,37,"callerStack"],[33,50,29,48],[33,52,29,50],[34,4,30,4],[34,10,30,10,"message"],[34,17,30,17],[34,20,30,20],[34,23,30,23,"status"],[34,29,30,29],[34,30,30,30,"code"],[34,34,30,34],[34,38,30,38,"constants_1"],[34,49,30,49],[34,50,30,50,"Status"],[34,56,30,56],[34,57,30,57,"status"],[34,63,30,63],[34,64,30,64,"code"],[34,68,30,68],[34,69,30,69],[34,74,30,74,"status"],[34,80,30,80],[34,81,30,81,"details"],[34,88,30,88],[34,90,30,90],[35,4,31,4],[35,10,31,10,"error"],[35,15,31,15],[35,18,31,18],[35,22,31,22,"Error"],[35,27,31,27],[35,28,31,28,"message"],[35,35,31,35],[35,36,31,36],[36,4,32,4],[36,10,32,10,"stack"],[36,15,32,15],[36,18,32,18],[36,21,32,21,"error"],[36,26,32,26],[36,27,32,27,"stack"],[36,32,32,32],[36,50,32,50,"callerStack"],[36,61,32,61],[36,63,32,63],[37,4,33,4],[37,11,33,11,"Object"],[37,17,33,17],[37,18,33,18,"assign"],[37,24,33,24],[37,25,33,25],[37,29,33,29,"Error"],[37,34,33,34],[37,35,33,35,"message"],[37,42,33,42],[37,43,33,43],[37,45,33,45,"status"],[37,51,33,51],[37,53,33,53],[38,6,33,55,"stack"],[39,4,33,61],[39,5,33,62],[39,6,33,63],[40,2,34,0],[41,2,35,0,"exports"],[41,9,35,7],[41,10,35,8,"callErrorFromStatus"],[41,29,35,27],[41,32,35,30,"callErrorFromStatus"],[41,51,35,49],[42,2,36,0],[42,8,36,6,"ClientUnaryCallImpl"],[42,27,36,25],[42,36,36,34,"events_1"],[42,44,36,42],[42,45,36,43,"EventEmitter"],[42,57,36,55],[42,58,36,56],[43,4,37,4,"constructor"],[43,15,37,15,"constructor"],[43,16,37,15],[43,18,37,18],[44,6,38,8],[44,11,38,13],[44,12,38,14],[44,13,38,15],[45,4,39,4],[46,4,40,4,"cancel"],[46,10,40,10,"cancel"],[46,11,40,10],[46,13,40,13],[47,6,41,8],[47,10,41,12,"_a"],[47,12,41,14],[48,6,42,8],[48,7,42,9,"_a"],[48,9,42,11],[48,12,42,14],[48,16,42,18],[48,17,42,19,"call"],[48,21,42,23],[48,27,42,29],[48,31,42,33],[48,35,42,37,"_a"],[48,37,42,39],[48,42,42,44],[48,47,42,49],[48,48,42,50],[48,51,42,53],[48,56,42,58],[48,57,42,59],[48,60,42,62,"_a"],[48,62,42,64],[48,63,42,65,"cancelWithStatus"],[48,79,42,81],[48,80,42,82,"constants_1"],[48,91,42,93],[48,92,42,94,"Status"],[48,98,42,100],[48,99,42,101,"CANCELLED"],[48,108,42,110],[48,110,42,112],[48,131,42,133],[48,132,42,134],[49,4,43,4],[50,4,44,4,"getPeer"],[50,11,44,11,"getPeer"],[50,12,44,11],[50,14,44,14],[51,6,45,8],[51,10,45,12,"_a"],[51,12,45,14],[51,14,45,16,"_b"],[51,16,45,18],[52,6,46,8],[52,13,46,15],[52,14,46,16,"_b"],[52,16,46,18],[52,19,46,21],[52,20,46,22,"_a"],[52,22,46,24],[52,25,46,27],[52,29,46,31],[52,30,46,32,"call"],[52,34,46,36],[52,40,46,42],[52,44,46,46],[52,48,46,50,"_a"],[52,50,46,52],[52,55,46,57],[52,60,46,62],[52,61,46,63],[52,64,46,66],[52,69,46,71],[52,70,46,72],[52,73,46,75,"_a"],[52,75,46,77],[52,76,46,78,"getPeer"],[52,83,46,85],[52,84,46,86],[52,85,46,87],[52,91,46,93],[52,95,46,97],[52,99,46,101,"_b"],[52,101,46,103],[52,106,46,108],[52,111,46,113],[52,112,46,114],[52,115,46,117,"_b"],[52,117,46,119],[52,120,46,122],[52,129,46,131],[53,4,47,4],[54,2,48,0],[55,2,49,0,"exports"],[55,9,49,7],[55,10,49,8,"ClientUnaryCallImpl"],[55,29,49,27],[55,32,49,30,"ClientUnaryCallImpl"],[55,51,49,49],[56,2,50,0],[56,8,50,6,"ClientReadableStreamImpl"],[56,32,50,30],[56,41,50,39,"stream_1"],[56,49,50,47],[56,50,50,48,"Readable"],[56,58,50,56],[56,59,50,57],[57,4,51,4,"constructor"],[57,15,51,15,"constructor"],[57,16,51,16,"deserialize"],[57,27,51,27],[57,29,51,29],[58,6,52,8],[58,11,52,13],[58,12,52,14],[59,8,52,16,"objectMode"],[59,18,52,26],[59,20,52,28],[60,6,52,33],[60,7,52,34],[60,8,52,35],[61,6,53,8],[61,10,53,12],[61,11,53,13,"deserialize"],[61,22,53,24],[61,25,53,27,"deserialize"],[61,36,53,38],[62,4,54,4],[63,4,55,4,"cancel"],[63,10,55,10,"cancel"],[63,11,55,10],[63,13,55,13],[64,6,56,8],[64,10,56,12,"_a"],[64,12,56,14],[65,6,57,8],[65,7,57,9,"_a"],[65,9,57,11],[65,12,57,14],[65,16,57,18],[65,17,57,19,"call"],[65,21,57,23],[65,27,57,29],[65,31,57,33],[65,35,57,37,"_a"],[65,37,57,39],[65,42,57,44],[65,47,57,49],[65,48,57,50],[65,51,57,53],[65,56,57,58],[65,57,57,59],[65,60,57,62,"_a"],[65,62,57,64],[65,63,57,65,"cancelWithStatus"],[65,79,57,81],[65,80,57,82,"constants_1"],[65,91,57,93],[65,92,57,94,"Status"],[65,98,57,100],[65,99,57,101,"CANCELLED"],[65,108,57,110],[65,110,57,112],[65,131,57,133],[65,132,57,134],[66,4,58,4],[67,4,59,4,"getPeer"],[67,11,59,11,"getPeer"],[67,12,59,11],[67,14,59,14],[68,6,60,8],[68,10,60,12,"_a"],[68,12,60,14],[68,14,60,16,"_b"],[68,16,60,18],[69,6,61,8],[69,13,61,15],[69,14,61,16,"_b"],[69,16,61,18],[69,19,61,21],[69,20,61,22,"_a"],[69,22,61,24],[69,25,61,27],[69,29,61,31],[69,30,61,32,"call"],[69,34,61,36],[69,40,61,42],[69,44,61,46],[69,48,61,50,"_a"],[69,50,61,52],[69,55,61,57],[69,60,61,62],[69,61,61,63],[69,64,61,66],[69,69,61,71],[69,70,61,72],[69,73,61,75,"_a"],[69,75,61,77],[69,76,61,78,"getPeer"],[69,83,61,85],[69,84,61,86],[69,85,61,87],[69,91,61,93],[69,95,61,97],[69,99,61,101,"_b"],[69,101,61,103],[69,106,61,108],[69,111,61,113],[69,112,61,114],[69,115,61,117,"_b"],[69,117,61,119],[69,120,61,122],[69,129,61,131],[70,4,62,4],[71,4,63,4,"_read"],[71,9,63,9,"_read"],[71,10,63,10,"_size"],[71,15,63,15],[71,17,63,17],[72,6,64,8],[72,10,64,12,"_a"],[72,12,64,14],[73,6,65,8],[73,7,65,9,"_a"],[73,9,65,11],[73,12,65,14],[73,16,65,18],[73,17,65,19,"call"],[73,21,65,23],[73,27,65,29],[73,31,65,33],[73,35,65,37,"_a"],[73,37,65,39],[73,42,65,44],[73,47,65,49],[73,48,65,50],[73,51,65,53],[73,56,65,58],[73,57,65,59],[73,60,65,62,"_a"],[73,62,65,64],[73,63,65,65,"startRead"],[73,72,65,74],[73,73,65,75],[73,74,65,76],[74,4,66,4],[75,2,67,0],[76,2,68,0,"exports"],[76,9,68,7],[76,10,68,8,"ClientReadableStreamImpl"],[76,34,68,32],[76,37,68,35,"ClientReadableStreamImpl"],[76,61,68,59],[77,2,69,0],[77,8,69,6,"ClientWritableStreamImpl"],[77,32,69,30],[77,41,69,39,"stream_1"],[77,49,69,47],[77,50,69,48,"Writable"],[77,58,69,56],[77,59,69,57],[78,4,70,4,"constructor"],[78,15,70,15,"constructor"],[78,16,70,16,"serialize"],[78,25,70,25],[78,27,70,27],[79,6,71,8],[79,11,71,13],[79,12,71,14],[80,8,71,16,"objectMode"],[80,18,71,26],[80,20,71,28],[81,6,71,33],[81,7,71,34],[81,8,71,35],[82,6,72,8],[82,10,72,12],[82,11,72,13,"serialize"],[82,20,72,22],[82,23,72,25,"serialize"],[82,32,72,34],[83,4,73,4],[84,4,74,4,"cancel"],[84,10,74,10,"cancel"],[84,11,74,10],[84,13,74,13],[85,6,75,8],[85,10,75,12,"_a"],[85,12,75,14],[86,6,76,8],[86,7,76,9,"_a"],[86,9,76,11],[86,12,76,14],[86,16,76,18],[86,17,76,19,"call"],[86,21,76,23],[86,27,76,29],[86,31,76,33],[86,35,76,37,"_a"],[86,37,76,39],[86,42,76,44],[86,47,76,49],[86,48,76,50],[86,51,76,53],[86,56,76,58],[86,57,76,59],[86,60,76,62,"_a"],[86,62,76,64],[86,63,76,65,"cancelWithStatus"],[86,79,76,81],[86,80,76,82,"constants_1"],[86,91,76,93],[86,92,76,94,"Status"],[86,98,76,100],[86,99,76,101,"CANCELLED"],[86,108,76,110],[86,110,76,112],[86,131,76,133],[86,132,76,134],[87,4,77,4],[88,4,78,4,"getPeer"],[88,11,78,11,"getPeer"],[88,12,78,11],[88,14,78,14],[89,6,79,8],[89,10,79,12,"_a"],[89,12,79,14],[89,14,79,16,"_b"],[89,16,79,18],[90,6,80,8],[90,13,80,15],[90,14,80,16,"_b"],[90,16,80,18],[90,19,80,21],[90,20,80,22,"_a"],[90,22,80,24],[90,25,80,27],[90,29,80,31],[90,30,80,32,"call"],[90,34,80,36],[90,40,80,42],[90,44,80,46],[90,48,80,50,"_a"],[90,50,80,52],[90,55,80,57],[90,60,80,62],[90,61,80,63],[90,64,80,66],[90,69,80,71],[90,70,80,72],[90,73,80,75,"_a"],[90,75,80,77],[90,76,80,78,"getPeer"],[90,83,80,85],[90,84,80,86],[90,85,80,87],[90,91,80,93],[90,95,80,97],[90,99,80,101,"_b"],[90,101,80,103],[90,106,80,108],[90,111,80,113],[90,112,80,114],[90,115,80,117,"_b"],[90,117,80,119],[90,120,80,122],[90,129,80,131],[91,4,81,4],[92,4,82,4,"_write"],[92,10,82,10,"_write"],[92,11,82,11,"chunk"],[92,16,82,16],[92,18,82,18,"encoding"],[92,26,82,26],[92,28,82,28,"cb"],[92,30,82,30],[92,32,82,32],[93,6,83,8],[93,10,83,12,"_a"],[93,12,83,14],[94,6,84,8],[94,12,84,14,"context"],[94,19,84,21],[94,22,84,24],[95,8,85,12,"callback"],[95,16,85,20],[95,18,85,22,"cb"],[96,6,86,8],[96,7,86,9],[97,6,87,8],[97,12,87,14,"flags"],[97,17,87,19],[97,20,87,22,"Number"],[97,26,87,28],[97,27,87,29,"encoding"],[97,35,87,37],[97,36,87,38],[98,6,88,8],[98,10,88,12],[98,11,88,13,"Number"],[98,17,88,19],[98,18,88,20,"isNaN"],[98,23,88,25],[98,24,88,26,"flags"],[98,29,88,31],[98,30,88,32],[98,32,88,34],[99,8,89,12,"context"],[99,15,89,19],[99,16,89,20,"flags"],[99,21,89,25],[99,24,89,28,"flags"],[99,29,89,33],[100,6,90,8],[101,6,91,8],[101,7,91,9,"_a"],[101,9,91,11],[101,12,91,14],[101,16,91,18],[101,17,91,19,"call"],[101,21,91,23],[101,27,91,29],[101,31,91,33],[101,35,91,37,"_a"],[101,37,91,39],[101,42,91,44],[101,47,91,49],[101,48,91,50],[101,51,91,53],[101,56,91,58],[101,57,91,59],[101,60,91,62,"_a"],[101,62,91,64],[101,63,91,65,"sendMessageWithContext"],[101,85,91,87],[101,86,91,88,"context"],[101,93,91,95],[101,95,91,97,"chunk"],[101,100,91,102],[101,101,91,103],[102,4,92,4],[103,4,93,4,"_final"],[103,10,93,10,"_final"],[103,11,93,11,"cb"],[103,13,93,13],[103,15,93,15],[104,6,94,8],[104,10,94,12,"_a"],[104,12,94,14],[105,6,95,8],[105,7,95,9,"_a"],[105,9,95,11],[105,12,95,14],[105,16,95,18],[105,17,95,19,"call"],[105,21,95,23],[105,27,95,29],[105,31,95,33],[105,35,95,37,"_a"],[105,37,95,39],[105,42,95,44],[105,47,95,49],[105,48,95,50],[105,51,95,53],[105,56,95,58],[105,57,95,59],[105,60,95,62,"_a"],[105,62,95,64],[105,63,95,65,"halfClose"],[105,72,95,74],[105,73,95,75],[105,74,95,76],[106,6,96,8,"cb"],[106,8,96,10],[106,9,96,11],[106,10,96,12],[107,4,97,4],[108,2,98,0],[109,2,99,0,"exports"],[109,9,99,7],[109,10,99,8,"ClientWritableStreamImpl"],[109,34,99,32],[109,37,99,35,"ClientWritableStreamImpl"],[109,61,99,59],[110,2,100,0],[110,8,100,6,"ClientDuplexStreamImpl"],[110,30,100,28],[110,39,100,37,"stream_1"],[110,47,100,45],[110,48,100,46,"Duplex"],[110,54,100,52],[110,55,100,53],[111,4,101,4,"constructor"],[111,15,101,15,"constructor"],[111,16,101,16,"serialize"],[111,25,101,25],[111,27,101,27,"deserialize"],[111,38,101,38],[111,40,101,40],[112,6,102,8],[112,11,102,13],[112,12,102,14],[113,8,102,16,"objectMode"],[113,18,102,26],[113,20,102,28],[114,6,102,33],[114,7,102,34],[114,8,102,35],[115,6,103,8],[115,10,103,12],[115,11,103,13,"serialize"],[115,20,103,22],[115,23,103,25,"serialize"],[115,32,103,34],[116,6,104,8],[116,10,104,12],[116,11,104,13,"deserialize"],[116,22,104,24],[116,25,104,27,"deserialize"],[116,36,104,38],[117,4,105,4],[118,4,106,4,"cancel"],[118,10,106,10,"cancel"],[118,11,106,10],[118,13,106,13],[119,6,107,8],[119,10,107,12,"_a"],[119,12,107,14],[120,6,108,8],[120,7,108,9,"_a"],[120,9,108,11],[120,12,108,14],[120,16,108,18],[120,17,108,19,"call"],[120,21,108,23],[120,27,108,29],[120,31,108,33],[120,35,108,37,"_a"],[120,37,108,39],[120,42,108,44],[120,47,108,49],[120,48,108,50],[120,51,108,53],[120,56,108,58],[120,57,108,59],[120,60,108,62,"_a"],[120,62,108,64],[120,63,108,65,"cancelWithStatus"],[120,79,108,81],[120,80,108,82,"constants_1"],[120,91,108,93],[120,92,108,94,"Status"],[120,98,108,100],[120,99,108,101,"CANCELLED"],[120,108,108,110],[120,110,108,112],[120,131,108,133],[120,132,108,134],[121,4,109,4],[122,4,110,4,"getPeer"],[122,11,110,11,"getPeer"],[122,12,110,11],[122,14,110,14],[123,6,111,8],[123,10,111,12,"_a"],[123,12,111,14],[123,14,111,16,"_b"],[123,16,111,18],[124,6,112,8],[124,13,112,15],[124,14,112,16,"_b"],[124,16,112,18],[124,19,112,21],[124,20,112,22,"_a"],[124,22,112,24],[124,25,112,27],[124,29,112,31],[124,30,112,32,"call"],[124,34,112,36],[124,40,112,42],[124,44,112,46],[124,48,112,50,"_a"],[124,50,112,52],[124,55,112,57],[124,60,112,62],[124,61,112,63],[124,64,112,66],[124,69,112,71],[124,70,112,72],[124,73,112,75,"_a"],[124,75,112,77],[124,76,112,78,"getPeer"],[124,83,112,85],[124,84,112,86],[124,85,112,87],[124,91,112,93],[124,95,112,97],[124,99,112,101,"_b"],[124,101,112,103],[124,106,112,108],[124,111,112,113],[124,112,112,114],[124,115,112,117,"_b"],[124,117,112,119],[124,120,112,122],[124,129,112,131],[125,4,113,4],[126,4,114,4,"_read"],[126,9,114,9,"_read"],[126,10,114,10,"_size"],[126,15,114,15],[126,17,114,17],[127,6,115,8],[127,10,115,12,"_a"],[127,12,115,14],[128,6,116,8],[128,7,116,9,"_a"],[128,9,116,11],[128,12,116,14],[128,16,116,18],[128,17,116,19,"call"],[128,21,116,23],[128,27,116,29],[128,31,116,33],[128,35,116,37,"_a"],[128,37,116,39],[128,42,116,44],[128,47,116,49],[128,48,116,50],[128,51,116,53],[128,56,116,58],[128,57,116,59],[128,60,116,62,"_a"],[128,62,116,64],[128,63,116,65,"startRead"],[128,72,116,74],[128,73,116,75],[128,74,116,76],[129,4,117,4],[130,4,118,4,"_write"],[130,10,118,10,"_write"],[130,11,118,11,"chunk"],[130,16,118,16],[130,18,118,18,"encoding"],[130,26,118,26],[130,28,118,28,"cb"],[130,30,118,30],[130,32,118,32],[131,6,119,8],[131,10,119,12,"_a"],[131,12,119,14],[132,6,120,8],[132,12,120,14,"context"],[132,19,120,21],[132,22,120,24],[133,8,121,12,"callback"],[133,16,121,20],[133,18,121,22,"cb"],[134,6,122,8],[134,7,122,9],[135,6,123,8],[135,12,123,14,"flags"],[135,17,123,19],[135,20,123,22,"Number"],[135,26,123,28],[135,27,123,29,"encoding"],[135,35,123,37],[135,36,123,38],[136,6,124,8],[136,10,124,12],[136,11,124,13,"Number"],[136,17,124,19],[136,18,124,20,"isNaN"],[136,23,124,25],[136,24,124,26,"flags"],[136,29,124,31],[136,30,124,32],[136,32,124,34],[137,8,125,12,"context"],[137,15,125,19],[137,16,125,20,"flags"],[137,21,125,25],[137,24,125,28,"flags"],[137,29,125,33],[138,6,126,8],[139,6,127,8],[139,7,127,9,"_a"],[139,9,127,11],[139,12,127,14],[139,16,127,18],[139,17,127,19,"call"],[139,21,127,23],[139,27,127,29],[139,31,127,33],[139,35,127,37,"_a"],[139,37,127,39],[139,42,127,44],[139,47,127,49],[139,48,127,50],[139,51,127,53],[139,56,127,58],[139,57,127,59],[139,60,127,62,"_a"],[139,62,127,64],[139,63,127,65,"sendMessageWithContext"],[139,85,127,87],[139,86,127,88,"context"],[139,93,127,95],[139,95,127,97,"chunk"],[139,100,127,102],[139,101,127,103],[140,4,128,4],[141,4,129,4,"_final"],[141,10,129,10,"_final"],[141,11,129,11,"cb"],[141,13,129,13],[141,15,129,15],[142,6,130,8],[142,10,130,12,"_a"],[142,12,130,14],[143,6,131,8],[143,7,131,9,"_a"],[143,9,131,11],[143,12,131,14],[143,16,131,18],[143,17,131,19,"call"],[143,21,131,23],[143,27,131,29],[143,31,131,33],[143,35,131,37,"_a"],[143,37,131,39],[143,42,131,44],[143,47,131,49],[143,48,131,50],[143,51,131,53],[143,56,131,58],[143,57,131,59],[143,60,131,62,"_a"],[143,62,131,64],[143,63,131,65,"halfClose"],[143,72,131,74],[143,73,131,75],[143,74,131,76],[144,6,132,8,"cb"],[144,8,132,10],[144,9,132,11],[144,10,132,12],[145,4,133,4],[146,2,134,0],[147,2,135,0,"exports"],[147,9,135,7],[147,10,135,8,"ClientDuplexStreamImpl"],[147,32,135,30],[147,35,135,33,"ClientDuplexStreamImpl"],[147,57,135,55],[148,0,135,56],[148,3]],"functionMap":{"names":["<global>","callErrorFromStatus","ClientUnaryCallImpl","ClientUnaryCallImpl#constructor","ClientUnaryCallImpl#cancel","ClientUnaryCallImpl#getPeer","ClientReadableStreamImpl","ClientReadableStreamImpl#constructor","ClientReadableStreamImpl#cancel","ClientReadableStreamImpl#getPeer","ClientReadableStreamImpl#_read","ClientWritableStreamImpl","ClientWritableStreamImpl#constructor","ClientWritableStreamImpl#cancel","ClientWritableStreamImpl#getPeer","ClientWritableStreamImpl#_write","ClientWritableStreamImpl#_final","ClientDuplexStreamImpl","ClientDuplexStreamImpl#constructor","ClientDuplexStreamImpl#cancel","ClientDuplexStreamImpl#getPeer","ClientDuplexStreamImpl#_read","ClientDuplexStreamImpl#_write","ClientDuplexStreamImpl#_final"],"mappings":"AAA;AC4B;CDK;AEE;ICC;KDE;IEC;KFG;IGC;KHG;CFC;AME;ICC;KDG;IEC;KFG;IGC;KHG;IIC;KJG;CNC;AWE;ICC;KDG;IEC;KFG;IGC;KHG;IIC;KJU;IKC;KLI;CXC;AiBE;ICC;KDI;IEC;KFG;IGC;KHG;IIC;KJG;IKC;KLU;IMC;KNI;CjBC"}},"type":"js/module"}]}