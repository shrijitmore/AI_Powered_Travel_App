{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"]}},{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"]}},{"name":"./TabRouter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":59},"end":{"line":4,"column":55,"index":114}}],"key":"jC/Bg2g+cpTuZwE6Bq9LoiYVdNc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.DrawerActions = void 0;\n  exports.DrawerRouter = DrawerRouter;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _nonSecure = require(_dependencyMap[2], \"nanoid/non-secure\");\n  var _TabRouter = require(_dependencyMap[3], \"./TabRouter.js\");\n  const _excluded = [\"defaultStatus\"];\n  const DrawerActions = exports.DrawerActions = Object.assign({}, _TabRouter.TabActions, {\n    openDrawer() {\n      return {\n        type: 'OPEN_DRAWER'\n      };\n    },\n    closeDrawer() {\n      return {\n        type: 'CLOSE_DRAWER'\n      };\n    },\n    toggleDrawer() {\n      return {\n        type: 'TOGGLE_DRAWER'\n      };\n    }\n  });\n  function DrawerRouter(_ref) {\n    let {\n        defaultStatus = 'closed'\n      } = _ref,\n      rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n    const router = (0, _TabRouter.TabRouter)(rest);\n    const isDrawerInHistory = state => Boolean(state.history?.some(it => it.type === 'drawer'));\n    const addDrawerToHistory = state => {\n      if (isDrawerInHistory(state)) {\n        return state;\n      }\n      return Object.assign({}, state, {\n        history: [...state.history, {\n          type: 'drawer',\n          status: defaultStatus === 'open' ? 'closed' : 'open'\n        }]\n      });\n    };\n    const removeDrawerFromHistory = state => {\n      if (!isDrawerInHistory(state)) {\n        return state;\n      }\n      return Object.assign({}, state, {\n        history: state.history.filter(it => it.type !== 'drawer')\n      });\n    };\n    const openDrawer = state => {\n      if (defaultStatus === 'open') {\n        return removeDrawerFromHistory(state);\n      }\n      return addDrawerToHistory(state);\n    };\n    const closeDrawer = state => {\n      if (defaultStatus === 'open') {\n        return addDrawerToHistory(state);\n      }\n      return removeDrawerFromHistory(state);\n    };\n    return Object.assign({}, router, {\n      type: 'drawer',\n      getInitialState({\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) {\n        const state = router.getInitialState({\n          routeNames,\n          routeParamList,\n          routeGetIdList\n        });\n        return Object.assign({}, state, {\n          default: defaultStatus,\n          stale: false,\n          type: 'drawer',\n          key: `drawer-${(0, _nonSecure.nanoid)()}`\n        });\n      },\n      getRehydratedState(partialState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) {\n        if (partialState.stale === false) {\n          return partialState;\n        }\n        let state = router.getRehydratedState(partialState, {\n          routeNames,\n          routeParamList,\n          routeGetIdList\n        });\n        if (isDrawerInHistory(partialState)) {\n          // Re-sync the drawer entry in history to correct it if it was wrong\n          state = removeDrawerFromHistory(state);\n          state = addDrawerToHistory(state);\n        }\n        return Object.assign({}, state, {\n          default: defaultStatus,\n          type: 'drawer',\n          key: `drawer-${(0, _nonSecure.nanoid)()}`\n        });\n      },\n      getStateForRouteFocus(state, key) {\n        const result = router.getStateForRouteFocus(state, key);\n        return closeDrawer(result);\n      },\n      getStateForAction(state, action, options) {\n        switch (action.type) {\n          case 'OPEN_DRAWER':\n            return openDrawer(state);\n          case 'CLOSE_DRAWER':\n            return closeDrawer(state);\n          case 'TOGGLE_DRAWER':\n            if (isDrawerInHistory(state)) {\n              return removeDrawerFromHistory(state);\n            }\n            return addDrawerToHistory(state);\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n          case 'NAVIGATE_DEPRECATED':\n            {\n              const result = router.getStateForAction(state, action, options);\n              if (result != null && result.index !== state.index) {\n                return closeDrawer(result);\n              }\n              return result;\n            }\n          case 'GO_BACK':\n            if (isDrawerInHistory(state)) {\n              return removeDrawerFromHistory(state);\n            }\n            return router.getStateForAction(state, action, options);\n          default:\n            return router.getStateForAction(state, action, options);\n        }\n      },\n      actionCreators: DrawerActions\n    });\n  }\n});","lineCount":149,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"DrawerActions"],[8,23,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"DrawerRouter"],[9,22,1,13],[9,25,1,13,"DrawerRouter"],[9,37,1,13],[10,2,1,13],[10,6,1,13,"_objectWithoutPropertiesLoose2"],[10,36,1,13],[10,39,1,13,"_interopRequireDefault"],[10,61,1,13],[10,62,1,13,"require"],[10,69,1,13],[10,70,1,13,"_dependencyMap"],[10,84,1,13],[11,2,3,0],[11,6,3,0,"_nonSecure"],[11,16,3,0],[11,19,3,0,"require"],[11,26,3,0],[11,27,3,0,"_dependencyMap"],[11,41,3,0],[12,2,4,0],[12,6,4,0,"_TabRouter"],[12,16,4,0],[12,19,4,0,"require"],[12,26,4,0],[12,27,4,0,"_dependencyMap"],[12,41,4,0],[13,2,4,55],[13,8,4,55,"_excluded"],[13,17,4,55],[14,2,5,7],[14,8,5,13,"DrawerActions"],[14,21,5,26],[14,24,5,26,"exports"],[14,31,5,26],[14,32,5,26,"DrawerActions"],[14,45,5,26],[14,48,5,26,"Object"],[14,54,5,26],[14,55,5,26,"assign"],[14,61,5,26],[14,66,6,5,"TabActions"],[14,87,6,15],[15,4,7,2,"openDrawer"],[15,14,7,12,"openDrawer"],[15,15,7,12],[15,17,7,15],[16,6,8,4],[16,13,8,11],[17,8,9,6,"type"],[17,12,9,10],[17,14,9,12],[18,6,10,4],[18,7,10,5],[19,4,11,2],[19,5,11,3],[20,4,12,2,"closeDrawer"],[20,15,12,13,"closeDrawer"],[20,16,12,13],[20,18,12,16],[21,6,13,4],[21,13,13,11],[22,8,14,6,"type"],[22,12,14,10],[22,14,14,12],[23,6,15,4],[23,7,15,5],[24,4,16,2],[24,5,16,3],[25,4,17,2,"toggleDrawer"],[25,16,17,14,"toggleDrawer"],[25,17,17,14],[25,19,17,17],[26,6,18,4],[26,13,18,11],[27,8,19,6,"type"],[27,12,19,10],[27,14,19,12],[28,6,20,4],[28,7,20,5],[29,4,21,2],[30,2,21,3],[30,4,22,1],[31,2,23,7],[31,11,23,16,"DrawerRouter"],[31,23,23,28,"DrawerRouter"],[31,24,23,28,"_ref"],[31,28,23,28],[31,30,26,3],[32,4,26,3],[32,8,23,29],[33,8,24,2,"defaultStatus"],[33,21,24,15],[33,24,24,18],[34,6,26,0],[34,7,26,1],[34,10,26,1,"_ref"],[34,14,26,1],[35,6,25,5,"rest"],[35,10,25,9],[35,17,25,9,"_objectWithoutPropertiesLoose2"],[35,47,25,9],[35,48,25,9,"default"],[35,55,25,9],[35,57,25,9,"_ref"],[35,61,25,9],[35,63,25,9,"_excluded"],[35,72,25,9],[36,4,27,2],[36,10,27,8,"router"],[36,16,27,14],[36,19,27,17],[36,23,27,17,"TabRouter"],[36,43,27,26],[36,45,27,27,"rest"],[36,49,27,31],[36,50,27,32],[37,4,28,2],[37,10,28,8,"isDrawerInHistory"],[37,27,28,25],[37,30,28,28,"state"],[37,35,28,33],[37,39,28,37,"Boolean"],[37,46,28,44],[37,47,28,45,"state"],[37,52,28,50],[37,53,28,51,"history"],[37,60,28,58],[37,62,28,60,"some"],[37,66,28,64],[37,67,28,65,"it"],[37,69,28,67],[37,73,28,71,"it"],[37,75,28,73],[37,76,28,74,"type"],[37,80,28,78],[37,85,28,83],[37,93,28,91],[37,94,28,92],[37,95,28,93],[38,4,29,2],[38,10,29,8,"addDrawerToHistory"],[38,28,29,26],[38,31,29,29,"state"],[38,36,29,34],[38,40,29,38],[39,6,30,4],[39,10,30,8,"isDrawerInHistory"],[39,27,30,25],[39,28,30,26,"state"],[39,33,30,31],[39,34,30,32],[39,36,30,34],[40,8,31,6],[40,15,31,13,"state"],[40,20,31,18],[41,6,32,4],[42,6,33,4],[42,13,33,4,"Object"],[42,19,33,4],[42,20,33,4,"assign"],[42,26,33,4],[42,31,34,9,"state"],[42,36,34,14],[43,8,35,6,"history"],[43,15,35,13],[43,17,35,15],[43,18,35,16],[43,21,35,19,"state"],[43,26,35,24],[43,27,35,25,"history"],[43,34,35,32],[43,36,35,34],[44,10,36,8,"type"],[44,14,36,12],[44,16,36,14],[44,24,36,22],[45,10,37,8,"status"],[45,16,37,14],[45,18,37,16,"defaultStatus"],[45,31,37,29],[45,36,37,34],[45,42,37,40],[45,45,37,43],[45,53,37,51],[45,56,37,54],[46,8,38,6],[46,9,38,7],[47,6,38,8],[48,4,40,2],[48,5,40,3],[49,4,41,2],[49,10,41,8,"removeDrawerFromHistory"],[49,33,41,31],[49,36,41,34,"state"],[49,41,41,39],[49,45,41,43],[50,6,42,4],[50,10,42,8],[50,11,42,9,"isDrawerInHistory"],[50,28,42,26],[50,29,42,27,"state"],[50,34,42,32],[50,35,42,33],[50,37,42,35],[51,8,43,6],[51,15,43,13,"state"],[51,20,43,18],[52,6,44,4],[53,6,45,4],[53,13,45,4,"Object"],[53,19,45,4],[53,20,45,4,"assign"],[53,26,45,4],[53,31,46,9,"state"],[53,36,46,14],[54,8,47,6,"history"],[54,15,47,13],[54,17,47,15,"state"],[54,22,47,20],[54,23,47,21,"history"],[54,30,47,28],[54,31,47,29,"filter"],[54,37,47,35],[54,38,47,36,"it"],[54,40,47,38],[54,44,47,42,"it"],[54,46,47,44],[54,47,47,45,"type"],[54,51,47,49],[54,56,47,54],[54,64,47,62],[55,6,47,63],[56,4,49,2],[56,5,49,3],[57,4,50,2],[57,10,50,8,"openDrawer"],[57,20,50,18],[57,23,50,21,"state"],[57,28,50,26],[57,32,50,30],[58,6,51,4],[58,10,51,8,"defaultStatus"],[58,23,51,21],[58,28,51,26],[58,34,51,32],[58,36,51,34],[59,8,52,6],[59,15,52,13,"removeDrawerFromHistory"],[59,38,52,36],[59,39,52,37,"state"],[59,44,52,42],[59,45,52,43],[60,6,53,4],[61,6,54,4],[61,13,54,11,"addDrawerToHistory"],[61,31,54,29],[61,32,54,30,"state"],[61,37,54,35],[61,38,54,36],[62,4,55,2],[62,5,55,3],[63,4,56,2],[63,10,56,8,"closeDrawer"],[63,21,56,19],[63,24,56,22,"state"],[63,29,56,27],[63,33,56,31],[64,6,57,4],[64,10,57,8,"defaultStatus"],[64,23,57,21],[64,28,57,26],[64,34,57,32],[64,36,57,34],[65,8,58,6],[65,15,58,13,"addDrawerToHistory"],[65,33,58,31],[65,34,58,32,"state"],[65,39,58,37],[65,40,58,38],[66,6,59,4],[67,6,60,4],[67,13,60,11,"removeDrawerFromHistory"],[67,36,60,34],[67,37,60,35,"state"],[67,42,60,40],[67,43,60,41],[68,4,61,2],[68,5,61,3],[69,4,62,2],[69,11,62,2,"Object"],[69,17,62,2],[69,18,62,2,"assign"],[69,24,62,2],[69,29,63,7,"router"],[69,35,63,13],[70,6,64,4,"type"],[70,10,64,8],[70,12,64,10],[70,20,64,18],[71,6,65,4,"getInitialState"],[71,21,65,19,"getInitialState"],[71,22,65,20],[72,8,66,6,"routeNames"],[72,18,66,16],[73,8,67,6,"routeParamList"],[73,22,67,20],[74,8,68,6,"routeGetIdList"],[75,6,69,4],[75,7,69,5],[75,9,69,7],[76,8,70,6],[76,14,70,12,"state"],[76,19,70,17],[76,22,70,20,"router"],[76,28,70,26],[76,29,70,27,"getInitialState"],[76,44,70,42],[76,45,70,43],[77,10,71,8,"routeNames"],[77,20,71,18],[78,10,72,8,"routeParamList"],[78,24,72,22],[79,10,73,8,"routeGetIdList"],[80,8,74,6],[80,9,74,7],[80,10,74,8],[81,8,75,6],[81,15,75,6,"Object"],[81,21,75,6],[81,22,75,6,"assign"],[81,28,75,6],[81,33,76,11,"state"],[81,38,76,16],[82,10,77,8,"default"],[82,17,77,15],[82,19,77,17,"defaultStatus"],[82,32,77,30],[83,10,78,8,"stale"],[83,15,78,13],[83,17,78,15],[83,22,78,20],[84,10,79,8,"type"],[84,14,79,12],[84,16,79,14],[84,24,79,22],[85,10,80,8,"key"],[85,13,80,11],[85,15,80,13],[85,25,80,23],[85,29,80,23,"nanoid"],[85,46,80,29],[85,48,80,30],[85,49,80,31],[86,8,80,33],[87,6,82,4],[87,7,82,5],[88,6,83,4,"getRehydratedState"],[88,24,83,22,"getRehydratedState"],[88,25,83,23,"partialState"],[88,37,83,35],[88,39,83,37],[89,8,84,6,"routeNames"],[89,18,84,16],[90,8,85,6,"routeParamList"],[90,22,85,20],[91,8,86,6,"routeGetIdList"],[92,6,87,4],[92,7,87,5],[92,9,87,7],[93,8,88,6],[93,12,88,10,"partialState"],[93,24,88,22],[93,25,88,23,"stale"],[93,30,88,28],[93,35,88,33],[93,40,88,38],[93,42,88,40],[94,10,89,8],[94,17,89,15,"partialState"],[94,29,89,27],[95,8,90,6],[96,8,91,6],[96,12,91,10,"state"],[96,17,91,15],[96,20,91,18,"router"],[96,26,91,24],[96,27,91,25,"getRehydratedState"],[96,45,91,43],[96,46,91,44,"partialState"],[96,58,91,56],[96,60,91,58],[97,10,92,8,"routeNames"],[97,20,92,18],[98,10,93,8,"routeParamList"],[98,24,93,22],[99,10,94,8,"routeGetIdList"],[100,8,95,6],[100,9,95,7],[100,10,95,8],[101,8,96,6],[101,12,96,10,"isDrawerInHistory"],[101,29,96,27],[101,30,96,28,"partialState"],[101,42,96,40],[101,43,96,41],[101,45,96,43],[102,10,97,8],[103,10,98,8,"state"],[103,15,98,13],[103,18,98,16,"removeDrawerFromHistory"],[103,41,98,39],[103,42,98,40,"state"],[103,47,98,45],[103,48,98,46],[104,10,99,8,"state"],[104,15,99,13],[104,18,99,16,"addDrawerToHistory"],[104,36,99,34],[104,37,99,35,"state"],[104,42,99,40],[104,43,99,41],[105,8,100,6],[106,8,101,6],[106,15,101,6,"Object"],[106,21,101,6],[106,22,101,6,"assign"],[106,28,101,6],[106,33,102,11,"state"],[106,38,102,16],[107,10,103,8,"default"],[107,17,103,15],[107,19,103,17,"defaultStatus"],[107,32,103,30],[108,10,104,8,"type"],[108,14,104,12],[108,16,104,14],[108,24,104,22],[109,10,105,8,"key"],[109,13,105,11],[109,15,105,13],[109,25,105,23],[109,29,105,23,"nanoid"],[109,46,105,29],[109,48,105,30],[109,49,105,31],[110,8,105,33],[111,6,107,4],[111,7,107,5],[112,6,108,4,"getStateForRouteFocus"],[112,27,108,25,"getStateForRouteFocus"],[112,28,108,26,"state"],[112,33,108,31],[112,35,108,33,"key"],[112,38,108,36],[112,40,108,38],[113,8,109,6],[113,14,109,12,"result"],[113,20,109,18],[113,23,109,21,"router"],[113,29,109,27],[113,30,109,28,"getStateForRouteFocus"],[113,51,109,49],[113,52,109,50,"state"],[113,57,109,55],[113,59,109,57,"key"],[113,62,109,60],[113,63,109,61],[114,8,110,6],[114,15,110,13,"closeDrawer"],[114,26,110,24],[114,27,110,25,"result"],[114,33,110,31],[114,34,110,32],[115,6,111,4],[115,7,111,5],[116,6,112,4,"getStateForAction"],[116,23,112,21,"getStateForAction"],[116,24,112,22,"state"],[116,29,112,27],[116,31,112,29,"action"],[116,37,112,35],[116,39,112,37,"options"],[116,46,112,44],[116,48,112,46],[117,8,113,6],[117,16,113,14,"action"],[117,22,113,20],[117,23,113,21,"type"],[117,27,113,25],[118,10,114,8],[118,15,114,13],[118,28,114,26],[119,12,115,10],[119,19,115,17,"openDrawer"],[119,29,115,27],[119,30,115,28,"state"],[119,35,115,33],[119,36,115,34],[120,10,116,8],[120,15,116,13],[120,29,116,27],[121,12,117,10],[121,19,117,17,"closeDrawer"],[121,30,117,28],[121,31,117,29,"state"],[121,36,117,34],[121,37,117,35],[122,10,118,8],[122,15,118,13],[122,30,118,28],[123,12,119,10],[123,16,119,14,"isDrawerInHistory"],[123,33,119,31],[123,34,119,32,"state"],[123,39,119,37],[123,40,119,38],[123,42,119,40],[124,14,120,12],[124,21,120,19,"removeDrawerFromHistory"],[124,44,120,42],[124,45,120,43,"state"],[124,50,120,48],[124,51,120,49],[125,12,121,10],[126,12,122,10],[126,19,122,17,"addDrawerToHistory"],[126,37,122,35],[126,38,122,36,"state"],[126,43,122,41],[126,44,122,42],[127,10,123,8],[127,15,123,13],[127,24,123,22],[128,10,124,8],[128,15,124,13],[128,25,124,23],[129,10,125,8],[129,15,125,13],[129,36,125,34],[130,12,126,10],[131,14,127,12],[131,20,127,18,"result"],[131,26,127,24],[131,29,127,27,"router"],[131,35,127,33],[131,36,127,34,"getStateForAction"],[131,53,127,51],[131,54,127,52,"state"],[131,59,127,57],[131,61,127,59,"action"],[131,67,127,65],[131,69,127,67,"options"],[131,76,127,74],[131,77,127,75],[132,14,128,12],[132,18,128,16,"result"],[132,24,128,22],[132,28,128,26],[132,32,128,30],[132,36,128,34,"result"],[132,42,128,40],[132,43,128,41,"index"],[132,48,128,46],[132,53,128,51,"state"],[132,58,128,56],[132,59,128,57,"index"],[132,64,128,62],[132,66,128,64],[133,16,129,14],[133,23,129,21,"closeDrawer"],[133,34,129,32],[133,35,129,33,"result"],[133,41,129,39],[133,42,129,40],[134,14,130,12],[135,14,131,12],[135,21,131,19,"result"],[135,27,131,25],[136,12,132,10],[137,10,133,8],[137,15,133,13],[137,24,133,22],[138,12,134,10],[138,16,134,14,"isDrawerInHistory"],[138,33,134,31],[138,34,134,32,"state"],[138,39,134,37],[138,40,134,38],[138,42,134,40],[139,14,135,12],[139,21,135,19,"removeDrawerFromHistory"],[139,44,135,42],[139,45,135,43,"state"],[139,50,135,48],[139,51,135,49],[140,12,136,10],[141,12,137,10],[141,19,137,17,"router"],[141,25,137,23],[141,26,137,24,"getStateForAction"],[141,43,137,41],[141,44,137,42,"state"],[141,49,137,47],[141,51,137,49,"action"],[141,57,137,55],[141,59,137,57,"options"],[141,66,137,64],[141,67,137,65],[142,10,138,8],[143,12,139,10],[143,19,139,17,"router"],[143,25,139,23],[143,26,139,24,"getStateForAction"],[143,43,139,41],[143,44,139,42,"state"],[143,49,139,47],[143,51,139,49,"action"],[143,57,139,55],[143,59,139,57,"options"],[143,66,139,64],[143,67,139,65],[144,8,140,6],[145,6,141,4],[145,7,141,5],[146,6,142,4,"actionCreators"],[146,20,142,18],[146,22,142,20,"DrawerActions"],[147,4,142,33],[148,2,144,0],[149,0,144,1],[149,3]],"functionMap":{"names":["<global>","DrawerActions.openDrawer","DrawerActions.closeDrawer","DrawerActions.toggleDrawer","DrawerRouter","isDrawerInHistory","state.history.some$argument_0","addDrawerToHistory","removeDrawerFromHistory","state.history.filter$argument_0","openDrawer","closeDrawer","getInitialState","getRehydratedState","getStateForRouteFocus","getStateForAction"],"mappings":"AAA;ECM;GDI;EEC;GFI;EGC;GHI;OIE;4BCK,qCC,0BD,ED;6BGC;GHW;kCIC;oCCM,0BD;GJE;qBMC;GNK;sBOC;GPK;IQI;KRiB;ISC;KTwB;IUC;KVG;IWC;KX6B;CJG"}},"type":"js/module"}]}