{"dependencies":[{"name":"@firebase/component","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"Us9erpYucP7UHYJWKKSJ2tNZDvI=","exportNames":["*"]}},{"name":"@firebase/logger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":69},"end":{"line":2,"column":91,"index":160}}],"key":"ORGtDHPxrSEUSLP9WZfOMGsHx5g=","exportNames":["*"]}},{"name":"@firebase/util","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":161},"end":{"line":3,"column":211,"index":372}}],"key":"BkBYK9w6fHruAfQL7S4qWsYds2s=","exportNames":["*"]}},{"name":"idb","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":421},"end":{"line":5,"column":29,"index":450}}],"key":"ZdmQBrZzT62w6Zx/DDxYP061LXc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"FirebaseError\", {\n    enumerable: true,\n    get: function () {\n      return _util.FirebaseError;\n    }\n  });\n  exports._DEFAULT_ENTRY_NAME = exports.SDK_VERSION = void 0;\n  exports._addComponent = _addComponent;\n  exports._addOrOverwriteComponent = _addOrOverwriteComponent;\n  exports._apps = void 0;\n  exports._clearComponents = _clearComponents;\n  exports._components = void 0;\n  exports._getProvider = _getProvider;\n  exports._isFirebaseApp = _isFirebaseApp;\n  exports._isFirebaseServerApp = _isFirebaseServerApp;\n  exports._isFirebaseServerAppSettings = _isFirebaseServerAppSettings;\n  exports._registerComponent = _registerComponent;\n  exports._removeServiceInstance = _removeServiceInstance;\n  exports._serverApps = void 0;\n  exports.deleteApp = deleteApp;\n  exports.getApp = getApp;\n  exports.getApps = getApps;\n  exports.initializeApp = initializeApp;\n  exports.initializeServerApp = initializeServerApp;\n  exports.onLog = onLog;\n  exports.registerVersion = registerVersion;\n  exports.setLogLevel = setLogLevel;\n  var _component = require(_dependencyMap[0], \"@firebase/component\");\n  var _logger = require(_dependencyMap[1], \"@firebase/logger\");\n  var _util = require(_dependencyMap[2], \"@firebase/util\");\n  var _idb = require(_dependencyMap[3], \"idb\");\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  class PlatformLoggerServiceImpl {\n    constructor(container) {\n      this.container = container;\n    }\n    // In initial implementation, this will be called by installations on\n    // auth token refresh, and installations will send this string.\n    getPlatformInfoString() {\n      const providers = this.container.getProviders();\n      // Loop through providers and get library/version pairs from any that are\n      // version components.\n      return providers.map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate();\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      }).filter(logString => logString).join(' ');\n    }\n  }\n  /**\n   *\n   * @param provider check if this provider provides a VersionService\n   *\n   * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n   * provides VersionService. The provider is not necessarily a 'app-version'\n   * provider.\n   */\n  function isVersionServiceProvider(provider) {\n    const component = provider.getComponent();\n    return component?.type === \"VERSION\" /* ComponentType.VERSION */;\n  }\n  const name$q = \"@firebase/app\";\n  const version$1 = \"0.14.3\";\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const logger = new _logger.Logger('@firebase/app');\n  const name$p = \"@firebase/app-compat\";\n  const name$o = \"@firebase/analytics-compat\";\n  const name$n = \"@firebase/analytics\";\n  const name$m = \"@firebase/app-check-compat\";\n  const name$l = \"@firebase/app-check\";\n  const name$k = \"@firebase/auth\";\n  const name$j = \"@firebase/auth-compat\";\n  const name$i = \"@firebase/database\";\n  const name$h = \"@firebase/data-connect\";\n  const name$g = \"@firebase/database-compat\";\n  const name$f = \"@firebase/functions\";\n  const name$e = \"@firebase/functions-compat\";\n  const name$d = \"@firebase/installations\";\n  const name$c = \"@firebase/installations-compat\";\n  const name$b = \"@firebase/messaging\";\n  const name$a = \"@firebase/messaging-compat\";\n  const name$9 = \"@firebase/performance\";\n  const name$8 = \"@firebase/performance-compat\";\n  const name$7 = \"@firebase/remote-config\";\n  const name$6 = \"@firebase/remote-config-compat\";\n  const name$5 = \"@firebase/storage\";\n  const name$4 = \"@firebase/storage-compat\";\n  const name$3 = \"@firebase/firestore\";\n  const name$2 = \"@firebase/ai\";\n  const name$1 = \"@firebase/firestore-compat\";\n  const name = \"firebase\";\n  const version = \"12.3.0\";\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * The default app name\n   *\n   * @internal\n   */\n  const DEFAULT_ENTRY_NAME = exports._DEFAULT_ENTRY_NAME = '[DEFAULT]';\n  const PLATFORM_LOG_STRING = {\n    [name$q]: 'fire-core',\n    [name$p]: 'fire-core-compat',\n    [name$n]: 'fire-analytics',\n    [name$o]: 'fire-analytics-compat',\n    [name$l]: 'fire-app-check',\n    [name$m]: 'fire-app-check-compat',\n    [name$k]: 'fire-auth',\n    [name$j]: 'fire-auth-compat',\n    [name$i]: 'fire-rtdb',\n    [name$h]: 'fire-data-connect',\n    [name$g]: 'fire-rtdb-compat',\n    [name$f]: 'fire-fn',\n    [name$e]: 'fire-fn-compat',\n    [name$d]: 'fire-iid',\n    [name$c]: 'fire-iid-compat',\n    [name$b]: 'fire-fcm',\n    [name$a]: 'fire-fcm-compat',\n    [name$9]: 'fire-perf',\n    [name$8]: 'fire-perf-compat',\n    [name$7]: 'fire-rc',\n    [name$6]: 'fire-rc-compat',\n    [name$5]: 'fire-gcs',\n    [name$4]: 'fire-gcs-compat',\n    [name$3]: 'fire-fst',\n    [name$1]: 'fire-fst-compat',\n    [name$2]: 'fire-vertex',\n    'fire-js': 'fire-js',\n    // Platform identifier for JS SDK.\n    [name]: 'fire-js-all'\n  };\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * @internal\n   */\n  const _apps = exports._apps = new Map();\n  /**\n   * @internal\n   */\n  const _serverApps = exports._serverApps = new Map();\n  /**\n   * Registered components.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const _components = exports._components = new Map();\n  /**\n   * @param component - the component being added to this app's container\n   *\n   * @internal\n   */\n  function _addComponent(app, component) {\n    try {\n      app.container.addComponent(component);\n    } catch (e) {\n      logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n    }\n  }\n  /**\n   *\n   * @internal\n   */\n  function _addOrOverwriteComponent(app, component) {\n    app.container.addOrOverwriteComponent(component);\n  }\n  /**\n   *\n   * @param component - the component to register\n   * @returns whether or not the component is registered successfully\n   *\n   * @internal\n   */\n  function _registerComponent(component) {\n    const componentName = component.name;\n    if (_components.has(componentName)) {\n      logger.debug(`There were multiple attempts to register component ${componentName}.`);\n      return false;\n    }\n    _components.set(componentName, component);\n    // add the component to existing app instances\n    for (const app of _apps.values()) {\n      _addComponent(app, component);\n    }\n    for (const serverApp of _serverApps.values()) {\n      _addComponent(serverApp, component);\n    }\n    return true;\n  }\n  /**\n   *\n   * @param app - FirebaseApp instance\n   * @param name - service name\n   *\n   * @returns the provider for the service with the matching name\n   *\n   * @internal\n   */\n  function _getProvider(app, name) {\n    const heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n      optional: true\n    });\n    if (heartbeatController) {\n      void heartbeatController.triggerHeartbeat();\n    }\n    return app.container.getProvider(name);\n  }\n  /**\n   *\n   * @param app - FirebaseApp instance\n   * @param name - service name\n   * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n   *\n   * @internal\n   */\n  function _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\n    _getProvider(app, name).clearInstance(instanceIdentifier);\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp, FirebaseOptions or FirebaseAppSettings.\n   *\n   * @returns true if the provide object is of type FirebaseApp.\n   *\n   * @internal\n   */\n  function _isFirebaseApp(obj) {\n    return obj.options !== undefined;\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp, FirebaseOptions or FirebaseAppSettings.\n   *\n   * @returns true if the provided object is of type FirebaseServerAppImpl.\n   *\n   * @internal\n   */\n  function _isFirebaseServerAppSettings(obj) {\n    if (_isFirebaseApp(obj)) {\n      return false;\n    }\n    return 'authIdToken' in obj || 'appCheckToken' in obj || 'releaseOnDeref' in obj || 'automaticDataCollectionEnabled' in obj;\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp.\n   *\n   * @returns true if the provided object is of type FirebaseServerAppImpl.\n   *\n   * @internal\n   */\n  function _isFirebaseServerApp(obj) {\n    if (obj === null || obj === undefined) {\n      return false;\n    }\n    return obj.settings !== undefined;\n  }\n  /**\n   * Test only\n   *\n   * @internal\n   */\n  function _clearComponents() {\n    _components.clear();\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const ERRORS = {\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" + 'call initializeApp() first',\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}'\",\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */]: 'Firebase Server App has been deleted',\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.',\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]: 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */]: 'FirebaseServerApp is not for use in browser environments.'\n  };\n  const ERROR_FACTORY = new _util.ErrorFactory('app', 'Firebase', ERRORS);\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  class FirebaseAppImpl {\n    constructor(options, config, container) {\n      this._isDeleted = false;\n      this._options = {\n        ...options\n      };\n      this._config = {\n        ...config\n      };\n      this._name = config.name;\n      this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n      this._container = container;\n      this.container.addComponent(new _component.Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    }\n    get automaticDataCollectionEnabled() {\n      this.checkDestroyed();\n      return this._automaticDataCollectionEnabled;\n    }\n    set automaticDataCollectionEnabled(val) {\n      this.checkDestroyed();\n      this._automaticDataCollectionEnabled = val;\n    }\n    get name() {\n      this.checkDestroyed();\n      return this._name;\n    }\n    get options() {\n      this.checkDestroyed();\n      return this._options;\n    }\n    get config() {\n      this.checkDestroyed();\n      return this._config;\n    }\n    get container() {\n      return this._container;\n    }\n    get isDeleted() {\n      return this._isDeleted;\n    }\n    set isDeleted(val) {\n      this._isDeleted = val;\n    }\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, {\n          appName: this._name\n        });\n      }\n    }\n  }\n\n  /**\n   * @license\n   * Copyright 2023 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  // Parse the token and check to see if the `exp` claim is in the future.\n  // Reports an error to the console if the token or claim could not be parsed, or if `exp` is in\n  // the past.\n  function validateTokenTTL(base64Token, tokenName) {\n    const secondPart = (0, _util.base64Decode)(base64Token.split('.')[1]);\n    if (secondPart === null) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: second part could not be parsed.`);\n      return;\n    }\n    const expClaim = JSON.parse(secondPart).exp;\n    if (expClaim === undefined) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: expiration claim could not be parsed`);\n      return;\n    }\n    const exp = JSON.parse(secondPart).exp * 1000;\n    const now = new Date().getTime();\n    const diff = exp - now;\n    if (diff <= 0) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: the token has expired.`);\n    }\n  }\n  class FirebaseServerAppImpl extends FirebaseAppImpl {\n    constructor(options, serverConfig, name, container) {\n      // Build configuration parameters for the FirebaseAppImpl base class.\n      const automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined ? serverConfig.automaticDataCollectionEnabled : true;\n      // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n      const config = {\n        name,\n        automaticDataCollectionEnabled\n      };\n      if (options.apiKey !== undefined) {\n        // Construct the parent FirebaseAppImp object.\n        super(options, config, container);\n      } else {\n        const appImpl = options;\n        super(appImpl.options, config, container);\n      }\n      // Now construct the data for the FirebaseServerAppImpl.\n      this._serverConfig = {\n        automaticDataCollectionEnabled,\n        ...serverConfig\n      };\n      // Ensure that the current time is within the `authIdtoken` window of validity.\n      if (this._serverConfig.authIdToken) {\n        validateTokenTTL(this._serverConfig.authIdToken, 'authIdToken');\n      }\n      // Ensure that the current time is within the `appCheckToken` window of validity.\n      if (this._serverConfig.appCheckToken) {\n        validateTokenTTL(this._serverConfig.appCheckToken, 'appCheckToken');\n      }\n      this._finalizationRegistry = null;\n      if (typeof FinalizationRegistry !== 'undefined') {\n        this._finalizationRegistry = new FinalizationRegistry(() => {\n          this.automaticCleanup();\n        });\n      }\n      this._refCount = 0;\n      this.incRefCount(this._serverConfig.releaseOnDeref);\n      // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n      // will never trigger.\n      this._serverConfig.releaseOnDeref = undefined;\n      serverConfig.releaseOnDeref = undefined;\n      registerVersion(name$q, version$1, 'serverapp');\n    }\n    toJSON() {\n      return undefined;\n    }\n    get refCount() {\n      return this._refCount;\n    }\n    // Increment the reference count of this server app. If an object is provided, register it\n    // with the finalization registry.\n    incRefCount(obj) {\n      if (this.isDeleted) {\n        return;\n      }\n      this._refCount++;\n      if (obj !== undefined && this._finalizationRegistry !== null) {\n        this._finalizationRegistry.register(obj, this);\n      }\n    }\n    // Decrement the reference count.\n    decRefCount() {\n      if (this.isDeleted) {\n        return 0;\n      }\n      return --this._refCount;\n    }\n    // Invoked by the FinalizationRegistry callback to note that this app should go through its\n    // reference counts and delete itself if no reference count remain. The coordinating logic that\n    // handles this is in deleteApp(...).\n    automaticCleanup() {\n      void deleteApp(this);\n    }\n    get settings() {\n      this.checkDestroyed();\n      return this._serverConfig;\n    }\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\n      }\n    }\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * The current SDK version.\n   *\n   * @public\n   */\n  const SDK_VERSION = exports.SDK_VERSION = version;\n  function initializeApp(_options, rawConfig = {}) {\n    let options = _options;\n    if (typeof rawConfig !== 'object') {\n      const name = rawConfig;\n      rawConfig = {\n        name\n      };\n    }\n    const config = {\n      name: DEFAULT_ENTRY_NAME,\n      automaticDataCollectionEnabled: true,\n      ...rawConfig\n    };\n    const name = config.name;\n    if (typeof name !== 'string' || !name) {\n      throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\n        appName: String(name)\n      });\n    }\n    options || (options = (0, _util.getDefaultAppConfig)());\n    if (!options) {\n      throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    const existingApp = _apps.get(name);\n    if (existingApp) {\n      // return the existing app if options and config deep equal the ones in the existing app.\n      if ((0, _util.deepEqual)(options, existingApp.options) && (0, _util.deepEqual)(config, existingApp.config)) {\n        return existingApp;\n      } else {\n        throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, {\n          appName: name\n        });\n      }\n    }\n    const container = new _component.ComponentContainer(name);\n    for (const component of _components.values()) {\n      container.addComponent(component);\n    }\n    const newApp = new FirebaseAppImpl(options, config, container);\n    _apps.set(name, newApp);\n    return newApp;\n  }\n  function initializeServerApp(_options, _serverAppConfig = {}) {\n    if ((0, _util.isBrowser)() && !(0, _util.isWebWorker)()) {\n      // FirebaseServerApp isn't designed to be run in browsers.\n      throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\n    }\n    let firebaseOptions;\n    let serverAppSettings = _serverAppConfig || {};\n    if (_options) {\n      if (_isFirebaseApp(_options)) {\n        firebaseOptions = _options.options;\n      } else if (_isFirebaseServerAppSettings(_options)) {\n        serverAppSettings = _options;\n      } else {\n        firebaseOptions = _options;\n      }\n    }\n    if (serverAppSettings.automaticDataCollectionEnabled === undefined) {\n      serverAppSettings.automaticDataCollectionEnabled = true;\n    }\n    firebaseOptions || (firebaseOptions = (0, _util.getDefaultAppConfig)());\n    if (!firebaseOptions) {\n      throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    // Build an app name based on a hash of the configuration options.\n    const nameObj = {\n      ...serverAppSettings,\n      ...firebaseOptions\n    };\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n    if (nameObj.releaseOnDeref !== undefined) {\n      delete nameObj.releaseOnDeref;\n    }\n    const hashCode = s => {\n      return [...s].reduce((hash, c) => Math.imul(31, hash) + c.charCodeAt(0) | 0, 0);\n    };\n    if (serverAppSettings.releaseOnDeref !== undefined) {\n      if (typeof FinalizationRegistry === 'undefined') {\n        throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\n      }\n    }\n    const nameString = '' + hashCode(JSON.stringify(nameObj));\n    const existingApp = _serverApps.get(nameString);\n    if (existingApp) {\n      existingApp.incRefCount(serverAppSettings.releaseOnDeref);\n      return existingApp;\n    }\n    const container = new _component.ComponentContainer(nameString);\n    for (const component of _components.values()) {\n      container.addComponent(component);\n    }\n    const newApp = new FirebaseServerAppImpl(firebaseOptions, serverAppSettings, nameString, container);\n    _serverApps.set(nameString, newApp);\n    return newApp;\n  }\n  /**\n   * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n   *\n   * When called with no arguments, the default app is returned. When an app name\n   * is provided, the app corresponding to that name is returned.\n   *\n   * An exception is thrown if the app being retrieved has not yet been\n   * initialized.\n   *\n   * @example\n   * ```javascript\n   * // Return the default app\n   * const app = getApp();\n   * ```\n   *\n   * @example\n   * ```javascript\n   * // Return a named app\n   * const otherApp = getApp(\"otherApp\");\n   * ```\n   *\n   * @param name - Optional name of the app to return. If no name is\n   *   provided, the default is `\"[DEFAULT]\"`.\n   *\n   * @returns The app corresponding to the provided app name.\n   *   If no app name is provided, the default app is returned.\n   *\n   * @public\n   */\n  function getApp(name = DEFAULT_ENTRY_NAME) {\n    const app = _apps.get(name);\n    if (!app && name === DEFAULT_ENTRY_NAME && (0, _util.getDefaultAppConfig)()) {\n      return initializeApp();\n    }\n    if (!app) {\n      throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, {\n        appName: name\n      });\n    }\n    return app;\n  }\n  /**\n   * A (read-only) array of all initialized apps.\n   * @public\n   */\n  function getApps() {\n    return Array.from(_apps.values());\n  }\n  /**\n   * Renders this app unusable and frees the resources of all associated\n   * services.\n   *\n   * @example\n   * ```javascript\n   * deleteApp(app)\n   *   .then(function() {\n   *     console.log(\"App deleted successfully\");\n   *   })\n   *   .catch(function(error) {\n   *     console.log(\"Error deleting app:\", error);\n   *   });\n   * ```\n   *\n   * @public\n   */\n  async function deleteApp(app) {\n    let cleanupProviders = false;\n    const name = app.name;\n    if (_apps.has(name)) {\n      cleanupProviders = true;\n      _apps.delete(name);\n    } else if (_serverApps.has(name)) {\n      const firebaseServerApp = app;\n      if (firebaseServerApp.decRefCount() <= 0) {\n        _serverApps.delete(name);\n        cleanupProviders = true;\n      }\n    }\n    if (cleanupProviders) {\n      await Promise.all(app.container.getProviders().map(provider => provider.delete()));\n      app.isDeleted = true;\n    }\n  }\n  /**\n   * Registers a library's name and version for platform logging purposes.\n   * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n   * @param version - Current version of that library.\n   * @param variant - Bundle variant, e.g., node, rn, etc.\n   *\n   * @public\n   */\n  function registerVersion(libraryKeyOrName, version, variant) {\n    // TODO: We can use this check to whitelist strings when/if we set up\n    // a good whitelist system.\n    let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n    if (variant) {\n      library += `-${variant}`;\n    }\n    const libraryMismatch = library.match(/\\s|\\//);\n    const versionMismatch = version.match(/\\s|\\//);\n    if (libraryMismatch || versionMismatch) {\n      const warning = [`Unable to register library \"${library}\" with version \"${version}\":`];\n      if (libraryMismatch) {\n        warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      if (libraryMismatch && versionMismatch) {\n        warning.push('and');\n      }\n      if (versionMismatch) {\n        warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      logger.warn(warning.join(' '));\n      return;\n    }\n    _registerComponent(new _component.Component(`${library}-version`, () => ({\n      library,\n      version\n    }), \"VERSION\" /* ComponentType.VERSION */));\n  }\n  /**\n   * Sets log handler for all Firebase SDKs.\n   * @param logCallback - An optional custom log handler that executes user code whenever\n   * the Firebase SDK makes a logging call.\n   *\n   * @public\n   */\n  function onLog(logCallback, options) {\n    if (logCallback !== null && typeof logCallback !== 'function') {\n      throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\n    }\n    (0, _logger.setUserLogHandler)(logCallback, options);\n  }\n  /**\n   * Sets log level for all Firebase SDKs.\n   *\n   * All of the log types above the current log level are captured (i.e. if\n   * you set the log level to `info`, errors are logged, but `debug` and\n   * `verbose` logs are not).\n   *\n   * @public\n   */\n  function setLogLevel(logLevel) {\n    (0, _logger.setLogLevel)(logLevel);\n  }\n\n  /**\n   * @license\n   * Copyright 2021 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const DB_NAME = 'firebase-heartbeat-database';\n  const DB_VERSION = 1;\n  const STORE_NAME = 'firebase-heartbeat-store';\n  let dbPromise = null;\n  function getDbPromise() {\n    if (!dbPromise) {\n      dbPromise = (0, _idb.openDB)(DB_NAME, DB_VERSION, {\n        upgrade: (db, oldVersion) => {\n          // We don't use 'break' in this switch statement, the fall-through\n          // behavior is what we want, because if there are multiple versions between\n          // the old version and the current version, we want ALL the migrations\n          // that correspond to those versions to run, not only the last one.\n          // eslint-disable-next-line default-case\n          switch (oldVersion) {\n            case 0:\n              try {\n                db.createObjectStore(STORE_NAME);\n              } catch (e) {\n                // Safari/iOS browsers throw occasional exceptions on\n                // db.createObjectStore() that may be a bug. Avoid blocking\n                // the rest of the app functionality.\n                console.warn(e);\n              }\n          }\n        }\n      }).catch(e => {\n        throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\n          originalErrorMessage: e.message\n        });\n      });\n    }\n    return dbPromise;\n  }\n  async function readHeartbeatsFromIndexedDB(app) {\n    try {\n      const db = await getDbPromise();\n      const tx = db.transaction(STORE_NAME);\n      const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n      // We already have the value but tx.done can throw,\n      // so we need to await it here to catch errors\n      await tx.done;\n      return result;\n    } catch (e) {\n      if (e instanceof _util.FirebaseError) {\n        logger.warn(e.message);\n      } else {\n        const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\n          originalErrorMessage: e?.message\n        });\n        logger.warn(idbGetError.message);\n      }\n    }\n  }\n  async function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\n    try {\n      const db = await getDbPromise();\n      const tx = db.transaction(STORE_NAME, 'readwrite');\n      const objectStore = tx.objectStore(STORE_NAME);\n      await objectStore.put(heartbeatObject, computeKey(app));\n      await tx.done;\n    } catch (e) {\n      if (e instanceof _util.FirebaseError) {\n        logger.warn(e.message);\n      } else {\n        const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\n          originalErrorMessage: e?.message\n        });\n        logger.warn(idbGetError.message);\n      }\n    }\n  }\n  function computeKey(app) {\n    return `${app.name}!${app.options.appId}`;\n  }\n\n  /**\n   * @license\n   * Copyright 2021 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const MAX_HEADER_BYTES = 1024;\n  const MAX_NUM_STORED_HEARTBEATS = 30;\n  class HeartbeatServiceImpl {\n    constructor(container) {\n      this.container = container;\n      /**\n       * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n       * the header string.\n       * Stores one record per date. This will be consolidated into the standard\n       * format of one record per user agent string before being sent as a header.\n       * Populated from indexedDB when the controller is instantiated and should\n       * be kept in sync with indexedDB.\n       * Leave public for easier testing.\n       */\n      this._heartbeatsCache = null;\n      const app = this.container.getProvider('app').getImmediate();\n      this._storage = new HeartbeatStorageImpl(app);\n      this._heartbeatsCachePromise = this._storage.read().then(result => {\n        this._heartbeatsCache = result;\n        return result;\n      });\n    }\n    /**\n     * Called to report a heartbeat. The function will generate\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n     * to IndexedDB.\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\n     * already logged, subsequent calls to this function in the same day will be ignored.\n     */\n    async triggerHeartbeat() {\n      try {\n        const platformLogger = this.container.getProvider('platform-logger').getImmediate();\n        // This is the \"Firebase user agent\" string from the platform logger\n        // service, not the browser user agent.\n        const agent = platformLogger.getPlatformInfoString();\n        const date = getUTCDateString();\n        if (this._heartbeatsCache?.heartbeats == null) {\n          this._heartbeatsCache = await this._heartbeatsCachePromise;\n          // If we failed to construct a heartbeats cache, then return immediately.\n          if (this._heartbeatsCache?.heartbeats == null) {\n            return;\n          }\n        }\n        // Do not store a heartbeat if one is already stored for this day\n        // or if a header has already been sent today.\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\n          return;\n        } else {\n          // There is no entry for this date. Create one.\n          this._heartbeatsCache.heartbeats.push({\n            date,\n            agent\n          });\n          // If the number of stored heartbeats exceeds the maximum number of stored heartbeats, remove the heartbeat with the earliest date.\n          // Since this is executed each time a heartbeat is pushed, the limit can only be exceeded by one, so only one needs to be removed.\n          if (this._heartbeatsCache.heartbeats.length > MAX_NUM_STORED_HEARTBEATS) {\n            const earliestHeartbeatIdx = getEarliestHeartbeatIdx(this._heartbeatsCache.heartbeats);\n            this._heartbeatsCache.heartbeats.splice(earliestHeartbeatIdx, 1);\n          }\n        }\n        return this._storage.overwrite(this._heartbeatsCache);\n      } catch (e) {\n        logger.warn(e);\n      }\n    }\n    /**\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n     * It also clears all heartbeats from memory as well as in IndexedDB.\n     *\n     * NOTE: Consuming product SDKs should not send the header if this method\n     * returns an empty string.\n     */\n    async getHeartbeatsHeader() {\n      try {\n        if (this._heartbeatsCache === null) {\n          await this._heartbeatsCachePromise;\n        }\n        // If it's still null or the array is empty, there is no data to send.\n        if (this._heartbeatsCache?.heartbeats == null || this._heartbeatsCache.heartbeats.length === 0) {\n          return '';\n        }\n        const date = getUTCDateString();\n        // Extract as many heartbeats from the cache as will fit under the size limit.\n        const {\n          heartbeatsToSend,\n          unsentEntries\n        } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\n        const headerString = (0, _util.base64urlEncodeWithoutPadding)(JSON.stringify({\n          version: 2,\n          heartbeats: heartbeatsToSend\n        }));\n        // Store last sent date to prevent another being logged/sent for the same day.\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\n        if (unsentEntries.length > 0) {\n          // Store any unsent entries if they exist.\n          this._heartbeatsCache.heartbeats = unsentEntries;\n          // This seems more likely than emptying the array (below) to lead to some odd state\n          // since the cache isn't empty and this will be called again on the next request,\n          // and is probably safest if we await it.\n          await this._storage.overwrite(this._heartbeatsCache);\n        } else {\n          this._heartbeatsCache.heartbeats = [];\n          // Do not wait for this, to reduce latency.\n          void this._storage.overwrite(this._heartbeatsCache);\n        }\n        return headerString;\n      } catch (e) {\n        logger.warn(e);\n        return '';\n      }\n    }\n  }\n  function getUTCDateString() {\n    const today = new Date();\n    // Returns date format 'YYYY-MM-DD'\n    return today.toISOString().substring(0, 10);\n  }\n  function extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\n    // Heartbeats grouped by user agent in the standard format to be sent in\n    // the header.\n    const heartbeatsToSend = [];\n    // Single date format heartbeats that are not sent.\n    let unsentEntries = heartbeatsCache.slice();\n    for (const singleDateHeartbeat of heartbeatsCache) {\n      // Look for an existing entry with the same user agent.\n      const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\n      if (!heartbeatEntry) {\n        // If no entry for this user agent exists, create one.\n        heartbeatsToSend.push({\n          agent: singleDateHeartbeat.agent,\n          dates: [singleDateHeartbeat.date]\n        });\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          // If the header would exceed max size, remove the added heartbeat\n          // entry and stop adding to the header.\n          heartbeatsToSend.pop();\n          break;\n        }\n      } else {\n        heartbeatEntry.dates.push(singleDateHeartbeat.date);\n        // If the header would exceed max size, remove the added date\n        // and stop adding to the header.\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          heartbeatEntry.dates.pop();\n          break;\n        }\n      }\n      // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n      // quota and the loop breaks early.)\n      unsentEntries = unsentEntries.slice(1);\n    }\n    return {\n      heartbeatsToSend,\n      unsentEntries\n    };\n  }\n  class HeartbeatStorageImpl {\n    constructor(app) {\n      this.app = app;\n      this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n    }\n    async runIndexedDBEnvironmentCheck() {\n      if (!(0, _util.isIndexedDBAvailable)()) {\n        return false;\n      } else {\n        return (0, _util.validateIndexedDBOpenable)().then(() => true).catch(() => false);\n      }\n    }\n    /**\n     * Read all heartbeats.\n     */\n    async read() {\n      const canUseIndexedDB = await this._canUseIndexedDBPromise;\n      if (!canUseIndexedDB) {\n        return {\n          heartbeats: []\n        };\n      } else {\n        const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n        if (idbHeartbeatObject?.heartbeats) {\n          return idbHeartbeatObject;\n        } else {\n          return {\n            heartbeats: []\n          };\n        }\n      }\n    }\n    // overwrite the storage with the provided heartbeats\n    async overwrite(heartbeatsObject) {\n      const canUseIndexedDB = await this._canUseIndexedDBPromise;\n      if (!canUseIndexedDB) {\n        return;\n      } else {\n        const existingHeartbeatsObject = await this.read();\n        return writeHeartbeatsToIndexedDB(this.app, {\n          lastSentHeartbeatDate: heartbeatsObject.lastSentHeartbeatDate ?? existingHeartbeatsObject.lastSentHeartbeatDate,\n          heartbeats: heartbeatsObject.heartbeats\n        });\n      }\n    }\n    // add heartbeats\n    async add(heartbeatsObject) {\n      const canUseIndexedDB = await this._canUseIndexedDBPromise;\n      if (!canUseIndexedDB) {\n        return;\n      } else {\n        const existingHeartbeatsObject = await this.read();\n        return writeHeartbeatsToIndexedDB(this.app, {\n          lastSentHeartbeatDate: heartbeatsObject.lastSentHeartbeatDate ?? existingHeartbeatsObject.lastSentHeartbeatDate,\n          heartbeats: [...existingHeartbeatsObject.heartbeats, ...heartbeatsObject.heartbeats]\n        });\n      }\n    }\n  }\n  /**\n   * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n   * in a platform logging header JSON object, stringified, and converted\n   * to base 64.\n   */\n  function countBytes(heartbeatsCache) {\n    // base64 has a restricted set of characters, all of which should be 1 byte.\n    return (0, _util.base64urlEncodeWithoutPadding)(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({\n      version: 2,\n      heartbeats: heartbeatsCache\n    })).length;\n  }\n  /**\n   * Returns the index of the heartbeat with the earliest date.\n   * If the heartbeats array is empty, -1 is returned.\n   */\n  function getEarliestHeartbeatIdx(heartbeats) {\n    if (heartbeats.length === 0) {\n      return -1;\n    }\n    let earliestHeartbeatIdx = 0;\n    let earliestHeartbeatDate = heartbeats[0].date;\n    for (let i = 1; i < heartbeats.length; i++) {\n      if (heartbeats[i].date < earliestHeartbeatDate) {\n        earliestHeartbeatDate = heartbeats[i].date;\n        earliestHeartbeatIdx = i;\n      }\n    }\n    return earliestHeartbeatIdx;\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  function registerCoreComponents(variant) {\n    _registerComponent(new _component.Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    _registerComponent(new _component.Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    // Register `app` package.\n    registerVersion(name$q, version$1, variant);\n    // BUILD_TARGET will be replaced by values like esm, cjs, etc during the compilation\n    registerVersion(name$q, version$1, 'esm2020');\n    // Register platform SDK identifier (no version).\n    registerVersion('fire-js', '');\n  }\n\n  /**\n   * Firebase App\n   *\n   * @remarks This package coordinates the communication between the different Firebase components\n   * @packageDocumentation\n   */\n  registerCoreComponents('');\n});","lineCount":1220,"map":[[32,2,1,0],[32,6,1,0,"_component"],[32,16,1,0],[32,19,1,0,"require"],[32,26,1,0],[32,27,1,0,"_dependencyMap"],[32,41,1,0],[33,2,2,0],[33,6,2,0,"_logger"],[33,13,2,0],[33,16,2,0,"require"],[33,23,2,0],[33,24,2,0,"_dependencyMap"],[33,38,2,0],[34,2,3,0],[34,6,3,0,"_util"],[34,11,3,0],[34,14,3,0,"require"],[34,21,3,0],[34,22,3,0,"_dependencyMap"],[34,36,3,0],[35,2,5,0],[35,6,5,0,"_idb"],[35,10,5,0],[35,13,5,0,"require"],[35,20,5,0],[35,21,5,0,"_dependencyMap"],[35,35,5,0],[36,2,7,0],[37,0,8,0],[38,0,9,0],[39,0,10,0],[40,0,11,0],[41,0,12,0],[42,0,13,0],[43,0,14,0],[44,0,15,0],[45,0,16,0],[46,0,17,0],[47,0,18,0],[48,0,19,0],[49,0,20,0],[50,0,21,0],[51,0,22,0],[52,2,23,0],[52,8,23,6,"PlatformLoggerServiceImpl"],[52,33,23,31],[52,34,23,32],[53,4,24,4,"constructor"],[53,15,24,15,"constructor"],[53,16,24,16,"container"],[53,25,24,25],[53,27,24,27],[54,6,25,8],[54,10,25,12],[54,11,25,13,"container"],[54,20,25,22],[54,23,25,25,"container"],[54,32,25,34],[55,4,26,4],[56,4,27,4],[57,4,28,4],[58,4,29,4,"getPlatformInfoString"],[58,25,29,25,"getPlatformInfoString"],[58,26,29,25],[58,28,29,28],[59,6,30,8],[59,12,30,14,"providers"],[59,21,30,23],[59,24,30,26],[59,28,30,30],[59,29,30,31,"container"],[59,38,30,40],[59,39,30,41,"getProviders"],[59,51,30,53],[59,52,30,54],[59,53,30,55],[60,6,31,8],[61,6,32,8],[62,6,33,8],[62,13,33,15,"providers"],[62,22,33,24],[62,23,34,13,"map"],[62,26,34,16],[62,27,34,17,"provider"],[62,35,34,25],[62,39,34,29],[63,8,35,12],[63,12,35,16,"isVersionServiceProvider"],[63,36,35,40],[63,37,35,41,"provider"],[63,45,35,49],[63,46,35,50],[63,48,35,52],[64,10,36,16],[64,16,36,22,"service"],[64,23,36,29],[64,26,36,32,"provider"],[64,34,36,40],[64,35,36,41,"getImmediate"],[64,47,36,53],[64,48,36,54],[64,49,36,55],[65,10,37,16],[65,17,37,23],[65,20,37,26,"service"],[65,27,37,33],[65,28,37,34,"library"],[65,35,37,41],[65,39,37,45,"service"],[65,46,37,52],[65,47,37,53,"version"],[65,54,37,60],[65,56,37,62],[66,8,38,12],[66,9,38,13],[66,15,39,17],[67,10,40,16],[67,17,40,23],[67,21,40,27],[68,8,41,12],[69,6,42,8],[69,7,42,9],[69,8,42,10],[69,9,43,13,"filter"],[69,15,43,19],[69,16,43,20,"logString"],[69,25,43,29],[69,29,43,33,"logString"],[69,38,43,42],[69,39,43,43],[69,40,44,13,"join"],[69,44,44,17],[69,45,44,18],[69,48,44,21],[69,49,44,22],[70,4,45,4],[71,2,46,0],[72,2,47,0],[73,0,48,0],[74,0,49,0],[75,0,50,0],[76,0,51,0],[77,0,52,0],[78,0,53,0],[79,0,54,0],[80,2,55,0],[80,11,55,9,"isVersionServiceProvider"],[80,35,55,33,"isVersionServiceProvider"],[80,36,55,34,"provider"],[80,44,55,42],[80,46,55,44],[81,4,56,4],[81,10,56,10,"component"],[81,19,56,19],[81,22,56,22,"provider"],[81,30,56,30],[81,31,56,31,"getComponent"],[81,43,56,43],[81,44,56,44],[81,45,56,45],[82,4,57,4],[82,11,57,11,"component"],[82,20,57,20],[82,22,57,22,"type"],[82,26,57,26],[82,31,57,31],[82,40,57,40],[82,41,57,41],[83,2,58,0],[84,2,60,0],[84,8,60,6,"name$q"],[84,14,60,12],[84,17,60,15],[84,32,60,30],[85,2,61,0],[85,8,61,6,"version$1"],[85,17,61,15],[85,20,61,18],[85,28,61,26],[87,2,63,0],[88,0,64,0],[89,0,65,0],[90,0,66,0],[91,0,67,0],[92,0,68,0],[93,0,69,0],[94,0,70,0],[95,0,71,0],[96,0,72,0],[97,0,73,0],[98,0,74,0],[99,0,75,0],[100,0,76,0],[101,0,77,0],[102,0,78,0],[103,2,79,0],[103,8,79,6,"logger"],[103,14,79,12],[103,17,79,15],[103,21,79,19,"Logger"],[103,35,79,25],[103,36,79,26],[103,51,79,41],[103,52,79,42],[104,2,81,0],[104,8,81,6,"name$p"],[104,14,81,12],[104,17,81,15],[104,39,81,37],[105,2,83,0],[105,8,83,6,"name$o"],[105,14,83,12],[105,17,83,15],[105,45,83,43],[106,2,85,0],[106,8,85,6,"name$n"],[106,14,85,12],[106,17,85,15],[106,38,85,36],[107,2,87,0],[107,8,87,6,"name$m"],[107,14,87,12],[107,17,87,15],[107,45,87,43],[108,2,89,0],[108,8,89,6,"name$l"],[108,14,89,12],[108,17,89,15],[108,38,89,36],[109,2,91,0],[109,8,91,6,"name$k"],[109,14,91,12],[109,17,91,15],[109,33,91,31],[110,2,93,0],[110,8,93,6,"name$j"],[110,14,93,12],[110,17,93,15],[110,40,93,38],[111,2,95,0],[111,8,95,6,"name$i"],[111,14,95,12],[111,17,95,15],[111,37,95,35],[112,2,97,0],[112,8,97,6,"name$h"],[112,14,97,12],[112,17,97,15],[112,41,97,39],[113,2,99,0],[113,8,99,6,"name$g"],[113,14,99,12],[113,17,99,15],[113,44,99,42],[114,2,101,0],[114,8,101,6,"name$f"],[114,14,101,12],[114,17,101,15],[114,38,101,36],[115,2,103,0],[115,8,103,6,"name$e"],[115,14,103,12],[115,17,103,15],[115,45,103,43],[116,2,105,0],[116,8,105,6,"name$d"],[116,14,105,12],[116,17,105,15],[116,42,105,40],[117,2,107,0],[117,8,107,6,"name$c"],[117,14,107,12],[117,17,107,15],[117,49,107,47],[118,2,109,0],[118,8,109,6,"name$b"],[118,14,109,12],[118,17,109,15],[118,38,109,36],[119,2,111,0],[119,8,111,6,"name$a"],[119,14,111,12],[119,17,111,15],[119,45,111,43],[120,2,113,0],[120,8,113,6,"name$9"],[120,14,113,12],[120,17,113,15],[120,40,113,38],[121,2,115,0],[121,8,115,6,"name$8"],[121,14,115,12],[121,17,115,15],[121,47,115,45],[122,2,117,0],[122,8,117,6,"name$7"],[122,14,117,12],[122,17,117,15],[122,42,117,40],[123,2,119,0],[123,8,119,6,"name$6"],[123,14,119,12],[123,17,119,15],[123,49,119,47],[124,2,121,0],[124,8,121,6,"name$5"],[124,14,121,12],[124,17,121,15],[124,36,121,34],[125,2,123,0],[125,8,123,6,"name$4"],[125,14,123,12],[125,17,123,15],[125,43,123,41],[126,2,125,0],[126,8,125,6,"name$3"],[126,14,125,12],[126,17,125,15],[126,38,125,36],[127,2,127,0],[127,8,127,6,"name$2"],[127,14,127,12],[127,17,127,15],[127,31,127,29],[128,2,129,0],[128,8,129,6,"name$1"],[128,14,129,12],[128,17,129,15],[128,45,129,43],[129,2,131,0],[129,8,131,6,"name"],[129,12,131,10],[129,15,131,13],[129,25,131,23],[130,2,132,0],[130,8,132,6,"version"],[130,15,132,13],[130,18,132,16],[130,26,132,24],[132,2,134,0],[133,0,135,0],[134,0,136,0],[135,0,137,0],[136,0,138,0],[137,0,139,0],[138,0,140,0],[139,0,141,0],[140,0,142,0],[141,0,143,0],[142,0,144,0],[143,0,145,0],[144,0,146,0],[145,0,147,0],[146,0,148,0],[147,0,149,0],[148,2,150,0],[149,0,151,0],[150,0,152,0],[151,0,153,0],[152,0,154,0],[153,2,155,0],[153,8,155,6,"DEFAULT_ENTRY_NAME"],[153,26,155,24],[153,29,155,24,"exports"],[153,36,155,24],[153,37,155,24,"_DEFAULT_ENTRY_NAME"],[153,56,155,24],[153,59,155,27],[153,70,155,38],[154,2,156,0],[154,8,156,6,"PLATFORM_LOG_STRING"],[154,27,156,25],[154,30,156,28],[155,4,157,4],[155,5,157,5,"name$q"],[155,11,157,11],[155,14,157,14],[155,25,157,25],[156,4,158,4],[156,5,158,5,"name$p"],[156,11,158,11],[156,14,158,14],[156,32,158,32],[157,4,159,4],[157,5,159,5,"name$n"],[157,11,159,11],[157,14,159,14],[157,30,159,30],[158,4,160,4],[158,5,160,5,"name$o"],[158,11,160,11],[158,14,160,14],[158,37,160,37],[159,4,161,4],[159,5,161,5,"name$l"],[159,11,161,11],[159,14,161,14],[159,30,161,30],[160,4,162,4],[160,5,162,5,"name$m"],[160,11,162,11],[160,14,162,14],[160,37,162,37],[161,4,163,4],[161,5,163,5,"name$k"],[161,11,163,11],[161,14,163,14],[161,25,163,25],[162,4,164,4],[162,5,164,5,"name$j"],[162,11,164,11],[162,14,164,14],[162,32,164,32],[163,4,165,4],[163,5,165,5,"name$i"],[163,11,165,11],[163,14,165,14],[163,25,165,25],[164,4,166,4],[164,5,166,5,"name$h"],[164,11,166,11],[164,14,166,14],[164,33,166,33],[165,4,167,4],[165,5,167,5,"name$g"],[165,11,167,11],[165,14,167,14],[165,32,167,32],[166,4,168,4],[166,5,168,5,"name$f"],[166,11,168,11],[166,14,168,14],[166,23,168,23],[167,4,169,4],[167,5,169,5,"name$e"],[167,11,169,11],[167,14,169,14],[167,30,169,30],[168,4,170,4],[168,5,170,5,"name$d"],[168,11,170,11],[168,14,170,14],[168,24,170,24],[169,4,171,4],[169,5,171,5,"name$c"],[169,11,171,11],[169,14,171,14],[169,31,171,31],[170,4,172,4],[170,5,172,5,"name$b"],[170,11,172,11],[170,14,172,14],[170,24,172,24],[171,4,173,4],[171,5,173,5,"name$a"],[171,11,173,11],[171,14,173,14],[171,31,173,31],[172,4,174,4],[172,5,174,5,"name$9"],[172,11,174,11],[172,14,174,14],[172,25,174,25],[173,4,175,4],[173,5,175,5,"name$8"],[173,11,175,11],[173,14,175,14],[173,32,175,32],[174,4,176,4],[174,5,176,5,"name$7"],[174,11,176,11],[174,14,176,14],[174,23,176,23],[175,4,177,4],[175,5,177,5,"name$6"],[175,11,177,11],[175,14,177,14],[175,30,177,30],[176,4,178,4],[176,5,178,5,"name$5"],[176,11,178,11],[176,14,178,14],[176,24,178,24],[177,4,179,4],[177,5,179,5,"name$4"],[177,11,179,11],[177,14,179,14],[177,31,179,31],[178,4,180,4],[178,5,180,5,"name$3"],[178,11,180,11],[178,14,180,14],[178,24,180,24],[179,4,181,4],[179,5,181,5,"name$1"],[179,11,181,11],[179,14,181,14],[179,31,181,31],[180,4,182,4],[180,5,182,5,"name$2"],[180,11,182,11],[180,14,182,14],[180,27,182,27],[181,4,183,4],[181,13,183,13],[181,15,183,15],[181,24,183,24],[182,4,183,26],[183,4,184,4],[183,5,184,5,"name"],[183,9,184,9],[183,12,184,12],[184,2,185,0],[184,3,185,1],[186,2,187,0],[187,0,188,0],[188,0,189,0],[189,0,190,0],[190,0,191,0],[191,0,192,0],[192,0,193,0],[193,0,194,0],[194,0,195,0],[195,0,196,0],[196,0,197,0],[197,0,198,0],[198,0,199,0],[199,0,200,0],[200,0,201,0],[201,0,202,0],[202,2,203,0],[203,0,204,0],[204,0,205,0],[205,2,206,0],[205,8,206,6,"_apps"],[205,13,206,11],[205,16,206,11,"exports"],[205,23,206,11],[205,24,206,11,"_apps"],[205,29,206,11],[205,32,206,14],[205,36,206,18,"Map"],[205,39,206,21],[205,40,206,22],[205,41,206,23],[206,2,207,0],[207,0,208,0],[208,0,209,0],[209,2,210,0],[209,8,210,6,"_serverApps"],[209,19,210,17],[209,22,210,17,"exports"],[209,29,210,17],[209,30,210,17,"_serverApps"],[209,41,210,17],[209,44,210,20],[209,48,210,24,"Map"],[209,51,210,27],[209,52,210,28],[209,53,210,29],[210,2,211,0],[211,0,212,0],[212,0,213,0],[213,0,214,0],[214,0,215,0],[215,2,216,0],[216,2,217,0],[216,8,217,6,"_components"],[216,19,217,17],[216,22,217,17,"exports"],[216,29,217,17],[216,30,217,17,"_components"],[216,41,217,17],[216,44,217,20],[216,48,217,24,"Map"],[216,51,217,27],[216,52,217,28],[216,53,217,29],[217,2,218,0],[218,0,219,0],[219,0,220,0],[220,0,221,0],[221,0,222,0],[222,2,223,0],[222,11,223,9,"_addComponent"],[222,24,223,22,"_addComponent"],[222,25,223,23,"app"],[222,28,223,26],[222,30,223,28,"component"],[222,39,223,37],[222,41,223,39],[223,4,224,4],[223,8,224,8],[224,6,225,8,"app"],[224,9,225,11],[224,10,225,12,"container"],[224,19,225,21],[224,20,225,22,"addComponent"],[224,32,225,34],[224,33,225,35,"component"],[224,42,225,44],[224,43,225,45],[225,4,226,4],[225,5,226,5],[225,6,227,4],[225,13,227,11,"e"],[225,14,227,12],[225,16,227,14],[226,6,228,8,"logger"],[226,12,228,14],[226,13,228,15,"debug"],[226,18,228,20],[226,19,228,21],[226,32,228,34,"component"],[226,41,228,43],[226,42,228,44,"name"],[226,46,228,48],[226,86,228,88,"app"],[226,89,228,91],[226,90,228,92,"name"],[226,94,228,96],[226,96,228,98],[226,98,228,100,"e"],[226,99,228,101],[226,100,228,102],[227,4,229,4],[228,2,230,0],[229,2,231,0],[230,0,232,0],[231,0,233,0],[232,0,234,0],[233,2,235,0],[233,11,235,9,"_addOrOverwriteComponent"],[233,35,235,33,"_addOrOverwriteComponent"],[233,36,235,34,"app"],[233,39,235,37],[233,41,235,39,"component"],[233,50,235,48],[233,52,235,50],[234,4,236,4,"app"],[234,7,236,7],[234,8,236,8,"container"],[234,17,236,17],[234,18,236,18,"addOrOverwriteComponent"],[234,41,236,41],[234,42,236,42,"component"],[234,51,236,51],[234,52,236,52],[235,2,237,0],[236,2,238,0],[237,0,239,0],[238,0,240,0],[239,0,241,0],[240,0,242,0],[241,0,243,0],[242,0,244,0],[243,2,245,0],[243,11,245,9,"_registerComponent"],[243,29,245,27,"_registerComponent"],[243,30,245,28,"component"],[243,39,245,37],[243,41,245,39],[244,4,246,4],[244,10,246,10,"componentName"],[244,23,246,23],[244,26,246,26,"component"],[244,35,246,35],[244,36,246,36,"name"],[244,40,246,40],[245,4,247,4],[245,8,247,8,"_components"],[245,19,247,19],[245,20,247,20,"has"],[245,23,247,23],[245,24,247,24,"componentName"],[245,37,247,37],[245,38,247,38],[245,40,247,40],[246,6,248,8,"logger"],[246,12,248,14],[246,13,248,15,"debug"],[246,18,248,20],[246,19,248,21],[246,73,248,75,"componentName"],[246,86,248,88],[246,89,248,91],[246,90,248,92],[247,6,249,8],[247,13,249,15],[247,18,249,20],[248,4,250,4],[249,4,251,4,"_components"],[249,15,251,15],[249,16,251,16,"set"],[249,19,251,19],[249,20,251,20,"componentName"],[249,33,251,33],[249,35,251,35,"component"],[249,44,251,44],[249,45,251,45],[250,4,252,4],[251,4,253,4],[251,9,253,9],[251,15,253,15,"app"],[251,18,253,18],[251,22,253,22,"_apps"],[251,27,253,27],[251,28,253,28,"values"],[251,34,253,34],[251,35,253,35],[251,36,253,36],[251,38,253,38],[252,6,254,8,"_addComponent"],[252,19,254,21],[252,20,254,22,"app"],[252,23,254,25],[252,25,254,27,"component"],[252,34,254,36],[252,35,254,37],[253,4,255,4],[254,4,256,4],[254,9,256,9],[254,15,256,15,"serverApp"],[254,24,256,24],[254,28,256,28,"_serverApps"],[254,39,256,39],[254,40,256,40,"values"],[254,46,256,46],[254,47,256,47],[254,48,256,48],[254,50,256,50],[255,6,257,8,"_addComponent"],[255,19,257,21],[255,20,257,22,"serverApp"],[255,29,257,31],[255,31,257,33,"component"],[255,40,257,42],[255,41,257,43],[256,4,258,4],[257,4,259,4],[257,11,259,11],[257,15,259,15],[258,2,260,0],[259,2,261,0],[260,0,262,0],[261,0,263,0],[262,0,264,0],[263,0,265,0],[264,0,266,0],[265,0,267,0],[266,0,268,0],[267,0,269,0],[268,2,270,0],[268,11,270,9,"_getProvider"],[268,23,270,21,"_getProvider"],[268,24,270,22,"app"],[268,27,270,25],[268,29,270,27,"name"],[268,33,270,31],[268,35,270,33],[269,4,271,4],[269,10,271,10,"heartbeatController"],[269,29,271,29],[269,32,271,32,"app"],[269,35,271,35],[269,36,271,36,"container"],[269,45,271,45],[269,46,272,9,"getProvider"],[269,57,272,20],[269,58,272,21],[269,69,272,32],[269,70,272,33],[269,71,273,9,"getImmediate"],[269,83,273,21],[269,84,273,22],[270,6,273,24,"optional"],[270,14,273,32],[270,16,273,34],[271,4,273,39],[271,5,273,40],[271,6,273,41],[272,4,274,4],[272,8,274,8,"heartbeatController"],[272,27,274,27],[272,29,274,29],[273,6,275,8],[273,11,275,13,"heartbeatController"],[273,30,275,32],[273,31,275,33,"triggerHeartbeat"],[273,47,275,49],[273,48,275,50],[273,49,275,51],[274,4,276,4],[275,4,277,4],[275,11,277,11,"app"],[275,14,277,14],[275,15,277,15,"container"],[275,24,277,24],[275,25,277,25,"getProvider"],[275,36,277,36],[275,37,277,37,"name"],[275,41,277,41],[275,42,277,42],[276,2,278,0],[277,2,279,0],[278,0,280,0],[279,0,281,0],[280,0,282,0],[281,0,283,0],[282,0,284,0],[283,0,285,0],[284,0,286,0],[285,2,287,0],[285,11,287,9,"_removeServiceInstance"],[285,33,287,31,"_removeServiceInstance"],[285,34,287,32,"app"],[285,37,287,35],[285,39,287,37,"name"],[285,43,287,41],[285,45,287,43,"instanceIdentifier"],[285,63,287,61],[285,66,287,64,"DEFAULT_ENTRY_NAME"],[285,84,287,82],[285,86,287,84],[286,4,288,4,"_getProvider"],[286,16,288,16],[286,17,288,17,"app"],[286,20,288,20],[286,22,288,22,"name"],[286,26,288,26],[286,27,288,27],[286,28,288,28,"clearInstance"],[286,41,288,41],[286,42,288,42,"instanceIdentifier"],[286,60,288,60],[286,61,288,61],[287,2,289,0],[288,2,290,0],[289,0,291,0],[290,0,292,0],[291,0,293,0],[292,0,294,0],[293,0,295,0],[294,0,296,0],[295,0,297,0],[296,2,298,0],[296,11,298,9,"_isFirebaseApp"],[296,25,298,23,"_isFirebaseApp"],[296,26,298,24,"obj"],[296,29,298,27],[296,31,298,29],[297,4,299,4],[297,11,299,11,"obj"],[297,14,299,14],[297,15,299,15,"options"],[297,22,299,22],[297,27,299,27,"undefined"],[297,36,299,36],[298,2,300,0],[299,2,301,0],[300,0,302,0],[301,0,303,0],[302,0,304,0],[303,0,305,0],[304,0,306,0],[305,0,307,0],[306,0,308,0],[307,2,309,0],[307,11,309,9,"_isFirebaseServerAppSettings"],[307,39,309,37,"_isFirebaseServerAppSettings"],[307,40,309,38,"obj"],[307,43,309,41],[307,45,309,43],[308,4,310,4],[308,8,310,8,"_isFirebaseApp"],[308,22,310,22],[308,23,310,23,"obj"],[308,26,310,26],[308,27,310,27],[308,29,310,29],[309,6,311,8],[309,13,311,15],[309,18,311,20],[310,4,312,4],[311,4,313,4],[311,11,313,12],[311,24,313,25],[311,28,313,29,"obj"],[311,31,313,32],[311,35,314,8],[311,50,314,23],[311,54,314,27,"obj"],[311,57,314,30],[311,61,315,8],[311,77,315,24],[311,81,315,28,"obj"],[311,84,315,31],[311,88,316,8],[311,120,316,40],[311,124,316,44,"obj"],[311,127,316,47],[312,2,317,0],[313,2,318,0],[314,0,319,0],[315,0,320,0],[316,0,321,0],[317,0,322,0],[318,0,323,0],[319,0,324,0],[320,0,325,0],[321,2,326,0],[321,11,326,9,"_isFirebaseServerApp"],[321,31,326,29,"_isFirebaseServerApp"],[321,32,326,30,"obj"],[321,35,326,33],[321,37,326,35],[322,4,327,4],[322,8,327,8,"obj"],[322,11,327,11],[322,16,327,16],[322,20,327,20],[322,24,327,24,"obj"],[322,27,327,27],[322,32,327,32,"undefined"],[322,41,327,41],[322,43,327,43],[323,6,328,8],[323,13,328,15],[323,18,328,20],[324,4,329,4],[325,4,330,4],[325,11,330,11,"obj"],[325,14,330,14],[325,15,330,15,"settings"],[325,23,330,23],[325,28,330,28,"undefined"],[325,37,330,37],[326,2,331,0],[327,2,332,0],[328,0,333,0],[329,0,334,0],[330,0,335,0],[331,0,336,0],[332,2,337,0],[332,11,337,9,"_clearComponents"],[332,27,337,25,"_clearComponents"],[332,28,337,25],[332,30,337,28],[333,4,338,4,"_components"],[333,15,338,15],[333,16,338,16,"clear"],[333,21,338,21],[333,22,338,22],[333,23,338,23],[334,2,339,0],[336,2,341,0],[337,0,342,0],[338,0,343,0],[339,0,344,0],[340,0,345,0],[341,0,346,0],[342,0,347,0],[343,0,348,0],[344,0,349,0],[345,0,350,0],[346,0,351,0],[347,0,352,0],[348,0,353,0],[349,0,354,0],[350,0,355,0],[351,0,356,0],[352,2,357,0],[352,8,357,6,"ERRORS"],[352,14,357,12],[352,17,357,15],[353,4,358,4],[353,5,358,5],[353,13,358,13],[353,14,358,14],[353,38,358,38],[353,88,358,88],[353,91,359,8],[353,119,359,36],[354,4,360,4],[354,5,360,5],[354,19,360,19],[354,20,360,20],[354,50,360,50],[354,82,360,82],[355,4,361,4],[355,5,361,5],[355,20,361,20],[355,21,361,21],[355,52,361,52],[355,133,361,133],[356,4,362,4],[356,5,362,5],[356,18,362,18],[356,19,362,19],[356,48,362,48],[356,97,362,97],[357,4,363,4],[357,5,363,5],[357,25,363,25],[357,26,363,26],[357,62,363,62],[357,100,363,100],[358,4,364,4],[358,5,364,5],[358,17,364,17],[358,18,364,18],[358,46,364,46],[358,119,364,119],[359,4,365,4],[359,5,365,5],[359,27,365,27],[359,28,365,28],[359,66,365,66],[359,120,365,120],[359,123,366,8],[359,147,366,32],[360,4,367,4],[360,5,367,5],[360,27,367,27],[360,28,367,28],[360,66,367,66],[360,121,367,121],[361,4,368,4],[361,5,368,5],[361,15,368,15],[361,16,368,16],[361,42,368,42],[361,121,368,121],[362,4,369,4],[362,5,369,5],[362,14,369,14],[362,15,369,15],[362,40,369,40],[362,124,369,124],[363,4,370,4],[363,5,370,5],[363,14,370,14],[363,15,370,15],[363,42,370,42],[363,124,370,124],[364,4,371,4],[364,5,371,5],[364,17,371,17],[364,18,371,18],[364,46,371,46],[364,131,371,131],[365,4,372,4],[365,5,372,5],[365,42,372,42],[365,43,372,43],[365,96,372,96],[365,201,372,201],[366,4,373,4],[366,5,373,5],[366,37,373,37],[366,38,373,38],[366,86,373,86],[367,2,374,0],[367,3,374,1],[368,2,375,0],[368,8,375,6,"ERROR_FACTORY"],[368,21,375,19],[368,24,375,22],[368,28,375,26,"ErrorFactory"],[368,46,375,38],[368,47,375,39],[368,52,375,44],[368,54,375,46],[368,64,375,56],[368,66,375,58,"ERRORS"],[368,72,375,64],[368,73,375,65],[370,2,377,0],[371,0,378,0],[372,0,379,0],[373,0,380,0],[374,0,381,0],[375,0,382,0],[376,0,383,0],[377,0,384,0],[378,0,385,0],[379,0,386,0],[380,0,387,0],[381,0,388,0],[382,0,389,0],[383,0,390,0],[384,0,391,0],[385,0,392,0],[386,2,393,0],[386,8,393,6,"FirebaseAppImpl"],[386,23,393,21],[386,24,393,22],[387,4,394,4,"constructor"],[387,15,394,15,"constructor"],[387,16,394,16,"options"],[387,23,394,23],[387,25,394,25,"config"],[387,31,394,31],[387,33,394,33,"container"],[387,42,394,42],[387,44,394,44],[388,6,395,8],[388,10,395,12],[388,11,395,13,"_isDeleted"],[388,21,395,23],[388,24,395,26],[388,29,395,31],[389,6,396,8],[389,10,396,12],[389,11,396,13,"_options"],[389,19,396,21],[389,22,396,24],[390,8,396,26],[390,11,396,29,"options"],[391,6,396,37],[391,7,396,38],[392,6,397,8],[392,10,397,12],[392,11,397,13,"_config"],[392,18,397,20],[392,21,397,23],[393,8,397,25],[393,11,397,28,"config"],[394,6,397,35],[394,7,397,36],[395,6,398,8],[395,10,398,12],[395,11,398,13,"_name"],[395,16,398,18],[395,19,398,21,"config"],[395,25,398,27],[395,26,398,28,"name"],[395,30,398,32],[396,6,399,8],[396,10,399,12],[396,11,399,13,"_automaticDataCollectionEnabled"],[396,42,399,44],[396,45,400,12,"config"],[396,51,400,18],[396,52,400,19,"automaticDataCollectionEnabled"],[396,82,400,49],[397,6,401,8],[397,10,401,12],[397,11,401,13,"_container"],[397,21,401,23],[397,24,401,26,"container"],[397,33,401,35],[398,6,402,8],[398,10,402,12],[398,11,402,13,"container"],[398,20,402,22],[398,21,402,23,"addComponent"],[398,33,402,35],[398,34,402,36],[398,38,402,40,"Component"],[398,58,402,49],[398,59,402,50],[398,64,402,55],[398,66,402,57],[398,72,402,63],[398,76,402,67],[398,78,402,69],[398,86,402,77],[398,87,402,78],[398,113,402,104],[398,114,402,105],[398,115,402,106],[399,4,403,4],[400,4,404,4],[400,8,404,8,"automaticDataCollectionEnabled"],[400,38,404,38,"automaticDataCollectionEnabled"],[400,39,404,38],[400,41,404,41],[401,6,405,8],[401,10,405,12],[401,11,405,13,"checkDestroyed"],[401,25,405,27],[401,26,405,28],[401,27,405,29],[402,6,406,8],[402,13,406,15],[402,17,406,19],[402,18,406,20,"_automaticDataCollectionEnabled"],[402,49,406,51],[403,4,407,4],[404,4,408,4],[404,8,408,8,"automaticDataCollectionEnabled"],[404,38,408,38,"automaticDataCollectionEnabled"],[404,39,408,39,"val"],[404,42,408,42],[404,44,408,44],[405,6,409,8],[405,10,409,12],[405,11,409,13,"checkDestroyed"],[405,25,409,27],[405,26,409,28],[405,27,409,29],[406,6,410,8],[406,10,410,12],[406,11,410,13,"_automaticDataCollectionEnabled"],[406,42,410,44],[406,45,410,47,"val"],[406,48,410,50],[407,4,411,4],[408,4,412,4],[408,8,412,8,"name"],[408,12,412,12,"name"],[408,13,412,12],[408,15,412,15],[409,6,413,8],[409,10,413,12],[409,11,413,13,"checkDestroyed"],[409,25,413,27],[409,26,413,28],[409,27,413,29],[410,6,414,8],[410,13,414,15],[410,17,414,19],[410,18,414,20,"_name"],[410,23,414,25],[411,4,415,4],[412,4,416,4],[412,8,416,8,"options"],[412,15,416,15,"options"],[412,16,416,15],[412,18,416,18],[413,6,417,8],[413,10,417,12],[413,11,417,13,"checkDestroyed"],[413,25,417,27],[413,26,417,28],[413,27,417,29],[414,6,418,8],[414,13,418,15],[414,17,418,19],[414,18,418,20,"_options"],[414,26,418,28],[415,4,419,4],[416,4,420,4],[416,8,420,8,"config"],[416,14,420,14,"config"],[416,15,420,14],[416,17,420,17],[417,6,421,8],[417,10,421,12],[417,11,421,13,"checkDestroyed"],[417,25,421,27],[417,26,421,28],[417,27,421,29],[418,6,422,8],[418,13,422,15],[418,17,422,19],[418,18,422,20,"_config"],[418,25,422,27],[419,4,423,4],[420,4,424,4],[420,8,424,8,"container"],[420,17,424,17,"container"],[420,18,424,17],[420,20,424,20],[421,6,425,8],[421,13,425,15],[421,17,425,19],[421,18,425,20,"_container"],[421,28,425,30],[422,4,426,4],[423,4,427,4],[423,8,427,8,"isDeleted"],[423,17,427,17,"isDeleted"],[423,18,427,17],[423,20,427,20],[424,6,428,8],[424,13,428,15],[424,17,428,19],[424,18,428,20,"_isDeleted"],[424,28,428,30],[425,4,429,4],[426,4,430,4],[426,8,430,8,"isDeleted"],[426,17,430,17,"isDeleted"],[426,18,430,18,"val"],[426,21,430,21],[426,23,430,23],[427,6,431,8],[427,10,431,12],[427,11,431,13,"_isDeleted"],[427,21,431,23],[427,24,431,26,"val"],[427,27,431,29],[428,4,432,4],[429,4,433,4],[430,0,434,0],[431,0,435,0],[432,0,436,0],[433,4,437,4,"checkDestroyed"],[433,18,437,18,"checkDestroyed"],[433,19,437,18],[433,21,437,21],[434,6,438,8],[434,10,438,12],[434,14,438,16],[434,15,438,17,"isDeleted"],[434,24,438,26],[434,26,438,28],[435,8,439,12],[435,14,439,18,"ERROR_FACTORY"],[435,27,439,31],[435,28,439,32,"create"],[435,34,439,38],[435,35,439,39],[435,48,439,52],[435,49,439,53],[435,77,439,81],[436,10,439,83,"appName"],[436,17,439,90],[436,19,439,92],[436,23,439,96],[436,24,439,97,"_name"],[437,8,439,103],[437,9,439,104],[437,10,439,105],[438,6,440,8],[439,4,441,4],[440,2,442,0],[442,2,444,0],[443,0,445,0],[444,0,446,0],[445,0,447,0],[446,0,448,0],[447,0,449,0],[448,0,450,0],[449,0,451,0],[450,0,452,0],[451,0,453,0],[452,0,454,0],[453,0,455,0],[454,0,456,0],[455,0,457,0],[456,0,458,0],[457,0,459,0],[458,2,460,0],[459,2,461,0],[460,2,462,0],[461,2,463,0],[461,11,463,9,"validateTokenTTL"],[461,27,463,25,"validateTokenTTL"],[461,28,463,26,"base64Token"],[461,39,463,37],[461,41,463,39,"tokenName"],[461,50,463,48],[461,52,463,50],[462,4,464,4],[462,10,464,10,"secondPart"],[462,20,464,20],[462,23,464,23],[462,27,464,23,"base64Decode"],[462,45,464,35],[462,47,464,36,"base64Token"],[462,58,464,47],[462,59,464,48,"split"],[462,64,464,53],[462,65,464,54],[462,68,464,57],[462,69,464,58],[462,70,464,59],[462,71,464,60],[462,72,464,61],[462,73,464,62],[463,4,465,4],[463,8,465,8,"secondPart"],[463,18,465,18],[463,23,465,23],[463,27,465,27],[463,29,465,29],[464,6,466,8,"console"],[464,13,466,15],[464,14,466,16,"error"],[464,19,466,21],[464,20,466,22],[464,41,466,43,"tokenName"],[464,50,466,52],[464,97,466,99],[464,98,466,100],[465,6,467,8],[466,4,468,4],[467,4,469,4],[467,10,469,10,"expClaim"],[467,18,469,18],[467,21,469,21,"JSON"],[467,25,469,25],[467,26,469,26,"parse"],[467,31,469,31],[467,32,469,32,"secondPart"],[467,42,469,42],[467,43,469,43],[467,44,469,44,"exp"],[467,47,469,47],[468,4,470,4],[468,8,470,8,"expClaim"],[468,16,470,16],[468,21,470,21,"undefined"],[468,30,470,30],[468,32,470,32],[469,6,471,8,"console"],[469,13,471,15],[469,14,471,16,"error"],[469,19,471,21],[469,20,471,22],[469,41,471,43,"tokenName"],[469,50,471,52],[469,101,471,103],[469,102,471,104],[470,6,472,8],[471,4,473,4],[472,4,474,4],[472,10,474,10,"exp"],[472,13,474,13],[472,16,474,16,"JSON"],[472,20,474,20],[472,21,474,21,"parse"],[472,26,474,26],[472,27,474,27,"secondPart"],[472,37,474,37],[472,38,474,38],[472,39,474,39,"exp"],[472,42,474,42],[472,45,474,45],[472,49,474,49],[473,4,475,4],[473,10,475,10,"now"],[473,13,475,13],[473,16,475,16],[473,20,475,20,"Date"],[473,24,475,24],[473,25,475,25],[473,26,475,26],[473,27,475,27,"getTime"],[473,34,475,34],[473,35,475,35],[473,36,475,36],[474,4,476,4],[474,10,476,10,"diff"],[474,14,476,14],[474,17,476,17,"exp"],[474,20,476,20],[474,23,476,23,"now"],[474,26,476,26],[475,4,477,4],[475,8,477,8,"diff"],[475,12,477,12],[475,16,477,16],[475,17,477,17],[475,19,477,19],[476,6,478,8,"console"],[476,13,478,15],[476,14,478,16,"error"],[476,19,478,21],[476,20,478,22],[476,41,478,43,"tokenName"],[476,50,478,52],[476,87,478,89],[476,88,478,90],[477,4,479,4],[478,2,480,0],[479,2,481,0],[479,8,481,6,"FirebaseServerAppImpl"],[479,29,481,27],[479,38,481,36,"FirebaseAppImpl"],[479,53,481,51],[479,54,481,52],[480,4,482,4,"constructor"],[480,15,482,15,"constructor"],[480,16,482,16,"options"],[480,23,482,23],[480,25,482,25,"serverConfig"],[480,37,482,37],[480,39,482,39,"name"],[480,43,482,43],[480,45,482,45,"container"],[480,54,482,54],[480,56,482,56],[481,6,483,8],[482,6,484,8],[482,12,484,14,"automaticDataCollectionEnabled"],[482,42,484,44],[482,45,484,47,"serverConfig"],[482,57,484,59],[482,58,484,60,"automaticDataCollectionEnabled"],[482,88,484,90],[482,93,484,95,"undefined"],[482,102,484,104],[482,105,485,14,"serverConfig"],[482,117,485,26],[482,118,485,27,"automaticDataCollectionEnabled"],[482,148,485,57],[482,151,486,14],[482,155,486,18],[483,6,487,8],[484,6,488,8],[484,12,488,14,"config"],[484,18,488,20],[484,21,488,23],[485,8,489,12,"name"],[485,12,489,16],[486,8,490,12,"automaticDataCollectionEnabled"],[487,6,491,8],[487,7,491,9],[488,6,492,8],[488,10,492,12,"options"],[488,17,492,19],[488,18,492,20,"apiKey"],[488,24,492,26],[488,29,492,31,"undefined"],[488,38,492,40],[488,40,492,42],[489,8,493,12],[490,8,494,12],[490,13,494,17],[490,14,494,18,"options"],[490,21,494,25],[490,23,494,27,"config"],[490,29,494,33],[490,31,494,35,"container"],[490,40,494,44],[490,41,494,45],[491,6,495,8],[491,7,495,9],[491,13,496,13],[492,8,497,12],[492,14,497,18,"appImpl"],[492,21,497,25],[492,24,497,28,"options"],[492,31,497,35],[493,8,498,12],[493,13,498,17],[493,14,498,18,"appImpl"],[493,21,498,25],[493,22,498,26,"options"],[493,29,498,33],[493,31,498,35,"config"],[493,37,498,41],[493,39,498,43,"container"],[493,48,498,52],[493,49,498,53],[494,6,499,8],[495,6,500,8],[496,6,501,8],[496,10,501,12],[496,11,501,13,"_serverConfig"],[496,24,501,26],[496,27,501,29],[497,8,502,12,"automaticDataCollectionEnabled"],[497,38,502,42],[498,8,503,12],[498,11,503,15,"serverConfig"],[499,6,504,8],[499,7,504,9],[500,6,505,8],[501,6,506,8],[501,10,506,12],[501,14,506,16],[501,15,506,17,"_serverConfig"],[501,28,506,30],[501,29,506,31,"authIdToken"],[501,40,506,42],[501,42,506,44],[502,8,507,12,"validateTokenTTL"],[502,24,507,28],[502,25,507,29],[502,29,507,33],[502,30,507,34,"_serverConfig"],[502,43,507,47],[502,44,507,48,"authIdToken"],[502,55,507,59],[502,57,507,61],[502,70,507,74],[502,71,507,75],[503,6,508,8],[504,6,509,8],[505,6,510,8],[505,10,510,12],[505,14,510,16],[505,15,510,17,"_serverConfig"],[505,28,510,30],[505,29,510,31,"appCheckToken"],[505,42,510,44],[505,44,510,46],[506,8,511,12,"validateTokenTTL"],[506,24,511,28],[506,25,511,29],[506,29,511,33],[506,30,511,34,"_serverConfig"],[506,43,511,47],[506,44,511,48,"appCheckToken"],[506,57,511,61],[506,59,511,63],[506,74,511,78],[506,75,511,79],[507,6,512,8],[508,6,513,8],[508,10,513,12],[508,11,513,13,"_finalizationRegistry"],[508,32,513,34],[508,35,513,37],[508,39,513,41],[509,6,514,8],[509,10,514,12],[509,17,514,19,"FinalizationRegistry"],[509,37,514,39],[509,42,514,44],[509,53,514,55],[509,55,514,57],[510,8,515,12],[510,12,515,16],[510,13,515,17,"_finalizationRegistry"],[510,34,515,38],[510,37,515,41],[510,41,515,45,"FinalizationRegistry"],[510,61,515,65],[510,62,515,66],[510,68,515,72],[511,10,516,16],[511,14,516,20],[511,15,516,21,"automaticCleanup"],[511,31,516,37],[511,32,516,38],[511,33,516,39],[512,8,517,12],[512,9,517,13],[512,10,517,14],[513,6,518,8],[514,6,519,8],[514,10,519,12],[514,11,519,13,"_refCount"],[514,20,519,22],[514,23,519,25],[514,24,519,26],[515,6,520,8],[515,10,520,12],[515,11,520,13,"incRefCount"],[515,22,520,24],[515,23,520,25],[515,27,520,29],[515,28,520,30,"_serverConfig"],[515,41,520,43],[515,42,520,44,"releaseOnDeref"],[515,56,520,58],[515,57,520,59],[516,6,521,8],[517,6,522,8],[518,6,523,8],[518,10,523,12],[518,11,523,13,"_serverConfig"],[518,24,523,26],[518,25,523,27,"releaseOnDeref"],[518,39,523,41],[518,42,523,44,"undefined"],[518,51,523,53],[519,6,524,8,"serverConfig"],[519,18,524,20],[519,19,524,21,"releaseOnDeref"],[519,33,524,35],[519,36,524,38,"undefined"],[519,45,524,47],[520,6,525,8,"registerVersion"],[520,21,525,23],[520,22,525,24,"name$q"],[520,28,525,30],[520,30,525,32,"version$1"],[520,39,525,41],[520,41,525,43],[520,52,525,54],[520,53,525,55],[521,4,526,4],[522,4,527,4,"toJSON"],[522,10,527,10,"toJSON"],[522,11,527,10],[522,13,527,13],[523,6,528,8],[523,13,528,15,"undefined"],[523,22,528,24],[524,4,529,4],[525,4,530,4],[525,8,530,8,"refCount"],[525,16,530,16,"refCount"],[525,17,530,16],[525,19,530,19],[526,6,531,8],[526,13,531,15],[526,17,531,19],[526,18,531,20,"_refCount"],[526,27,531,29],[527,4,532,4],[528,4,533,4],[529,4,534,4],[530,4,535,4,"incRefCount"],[530,15,535,15,"incRefCount"],[530,16,535,16,"obj"],[530,19,535,19],[530,21,535,21],[531,6,536,8],[531,10,536,12],[531,14,536,16],[531,15,536,17,"isDeleted"],[531,24,536,26],[531,26,536,28],[532,8,537,12],[533,6,538,8],[534,6,539,8],[534,10,539,12],[534,11,539,13,"_refCount"],[534,20,539,22],[534,22,539,24],[535,6,540,8],[535,10,540,12,"obj"],[535,13,540,15],[535,18,540,20,"undefined"],[535,27,540,29],[535,31,540,33],[535,35,540,37],[535,36,540,38,"_finalizationRegistry"],[535,57,540,59],[535,62,540,64],[535,66,540,68],[535,68,540,70],[536,8,541,12],[536,12,541,16],[536,13,541,17,"_finalizationRegistry"],[536,34,541,38],[536,35,541,39,"register"],[536,43,541,47],[536,44,541,48,"obj"],[536,47,541,51],[536,49,541,53],[536,53,541,57],[536,54,541,58],[537,6,542,8],[538,4,543,4],[539,4,544,4],[540,4,545,4,"decRefCount"],[540,15,545,15,"decRefCount"],[540,16,545,15],[540,18,545,18],[541,6,546,8],[541,10,546,12],[541,14,546,16],[541,15,546,17,"isDeleted"],[541,24,546,26],[541,26,546,28],[542,8,547,12],[542,15,547,19],[542,16,547,20],[543,6,548,8],[544,6,549,8],[544,13,549,15],[544,15,549,17],[544,19,549,21],[544,20,549,22,"_refCount"],[544,29,549,31],[545,4,550,4],[546,4,551,4],[547,4,552,4],[548,4,553,4],[549,4,554,4,"automaticCleanup"],[549,20,554,20,"automaticCleanup"],[549,21,554,20],[549,23,554,23],[550,6,555,8],[550,11,555,13,"deleteApp"],[550,20,555,22],[550,21,555,23],[550,25,555,27],[550,26,555,28],[551,4,556,4],[552,4,557,4],[552,8,557,8,"settings"],[552,16,557,16,"settings"],[552,17,557,16],[552,19,557,19],[553,6,558,8],[553,10,558,12],[553,11,558,13,"checkDestroyed"],[553,25,558,27],[553,26,558,28],[553,27,558,29],[554,6,559,8],[554,13,559,15],[554,17,559,19],[554,18,559,20,"_serverConfig"],[554,31,559,33],[555,4,560,4],[556,4,561,4],[557,0,562,0],[558,0,563,0],[559,0,564,0],[560,4,565,4,"checkDestroyed"],[560,18,565,18,"checkDestroyed"],[560,19,565,18],[560,21,565,21],[561,6,566,8],[561,10,566,12],[561,14,566,16],[561,15,566,17,"isDeleted"],[561,24,566,26],[561,26,566,28],[562,8,567,12],[562,14,567,18,"ERROR_FACTORY"],[562,27,567,31],[562,28,567,32,"create"],[562,34,567,38],[562,35,567,39],[562,55,567,59],[562,56,567,60],[562,89,567,93],[562,90,567,94],[563,6,568,8],[564,4,569,4],[565,2,570,0],[567,2,572,0],[568,0,573,0],[569,0,574,0],[570,0,575,0],[571,0,576,0],[572,0,577,0],[573,0,578,0],[574,0,579,0],[575,0,580,0],[576,0,581,0],[577,0,582,0],[578,0,583,0],[579,0,584,0],[580,0,585,0],[581,0,586,0],[582,0,587,0],[583,2,588,0],[584,0,589,0],[585,0,590,0],[586,0,591,0],[587,0,592,0],[588,2,593,0],[588,8,593,6,"SDK_VERSION"],[588,19,593,17],[588,22,593,17,"exports"],[588,29,593,17],[588,30,593,17,"SDK_VERSION"],[588,41,593,17],[588,44,593,20,"version"],[588,51,593,27],[589,2,594,0],[589,11,594,9,"initializeApp"],[589,24,594,22,"initializeApp"],[589,25,594,23,"_options"],[589,33,594,31],[589,35,594,33,"rawConfig"],[589,44,594,42],[589,47,594,45],[589,48,594,46],[589,49,594,47],[589,51,594,49],[590,4,595,4],[590,8,595,8,"options"],[590,15,595,15],[590,18,595,18,"_options"],[590,26,595,26],[591,4,596,4],[591,8,596,8],[591,15,596,15,"rawConfig"],[591,24,596,24],[591,29,596,29],[591,37,596,37],[591,39,596,39],[592,6,597,8],[592,12,597,14,"name"],[592,16,597,18],[592,19,597,21,"rawConfig"],[592,28,597,30],[593,6,598,8,"rawConfig"],[593,15,598,17],[593,18,598,20],[594,8,598,22,"name"],[595,6,598,27],[595,7,598,28],[596,4,599,4],[597,4,600,4],[597,10,600,10,"config"],[597,16,600,16],[597,19,600,19],[598,6,601,8,"name"],[598,10,601,12],[598,12,601,14,"DEFAULT_ENTRY_NAME"],[598,30,601,32],[599,6,602,8,"automaticDataCollectionEnabled"],[599,36,602,38],[599,38,602,40],[599,42,602,44],[600,6,603,8],[600,9,603,11,"rawConfig"],[601,4,604,4],[601,5,604,5],[602,4,605,4],[602,10,605,10,"name"],[602,14,605,14],[602,17,605,17,"config"],[602,23,605,23],[602,24,605,24,"name"],[602,28,605,28],[603,4,606,4],[603,8,606,8],[603,15,606,15,"name"],[603,19,606,19],[603,24,606,24],[603,32,606,32],[603,36,606,36],[603,37,606,37,"name"],[603,41,606,41],[603,43,606,43],[604,6,607,8],[604,12,607,14,"ERROR_FACTORY"],[604,25,607,27],[604,26,607,28,"create"],[604,32,607,34],[604,33,607,35],[604,47,607,49],[604,48,607,50],[604,77,607,79],[605,8,608,12,"appName"],[605,15,608,19],[605,17,608,21,"String"],[605,23,608,27],[605,24,608,28,"name"],[605,28,608,32],[606,6,609,8],[606,7,609,9],[606,8,609,10],[607,4,610,4],[608,4,611,4,"options"],[608,11,611,11],[608,16,611,16,"options"],[608,23,611,23],[608,26,611,26],[608,30,611,26,"getDefaultAppConfig"],[608,55,611,45],[608,57,611,46],[608,58,611,47],[608,59,611,48],[609,4,612,4],[609,8,612,8],[609,9,612,9,"options"],[609,16,612,16],[609,18,612,18],[610,6,613,8],[610,12,613,14,"ERROR_FACTORY"],[610,25,613,27],[610,26,613,28,"create"],[610,32,613,34],[610,33,613,35],[610,45,613,47],[610,46,613,48],[610,71,613,73],[610,72,613,74],[611,4,614,4],[612,4,615,4],[612,10,615,10,"existingApp"],[612,21,615,21],[612,24,615,24,"_apps"],[612,29,615,29],[612,30,615,30,"get"],[612,33,615,33],[612,34,615,34,"name"],[612,38,615,38],[612,39,615,39],[613,4,616,4],[613,8,616,8,"existingApp"],[613,19,616,19],[613,21,616,21],[614,6,617,8],[615,6,618,8],[615,10,618,12],[615,14,618,12,"deepEqual"],[615,29,618,21],[615,31,618,22,"options"],[615,38,618,29],[615,40,618,31,"existingApp"],[615,51,618,42],[615,52,618,43,"options"],[615,59,618,50],[615,60,618,51],[615,64,619,12],[615,68,619,12,"deepEqual"],[615,83,619,21],[615,85,619,22,"config"],[615,91,619,28],[615,93,619,30,"existingApp"],[615,104,619,41],[615,105,619,42,"config"],[615,111,619,48],[615,112,619,49],[615,114,619,51],[616,8,620,12],[616,15,620,19,"existingApp"],[616,26,620,30],[617,6,621,8],[617,7,621,9],[617,13,622,13],[618,8,623,12],[618,14,623,18,"ERROR_FACTORY"],[618,27,623,31],[618,28,623,32,"create"],[618,34,623,38],[618,35,623,39],[618,50,623,54],[618,51,623,55],[618,81,623,85],[619,10,623,87,"appName"],[619,17,623,94],[619,19,623,96,"name"],[620,8,623,101],[620,9,623,102],[620,10,623,103],[621,6,624,8],[622,4,625,4],[623,4,626,4],[623,10,626,10,"container"],[623,19,626,19],[623,22,626,22],[623,26,626,26,"ComponentContainer"],[623,55,626,44],[623,56,626,45,"name"],[623,60,626,49],[623,61,626,50],[624,4,627,4],[624,9,627,9],[624,15,627,15,"component"],[624,24,627,24],[624,28,627,28,"_components"],[624,39,627,39],[624,40,627,40,"values"],[624,46,627,46],[624,47,627,47],[624,48,627,48],[624,50,627,50],[625,6,628,8,"container"],[625,15,628,17],[625,16,628,18,"addComponent"],[625,28,628,30],[625,29,628,31,"component"],[625,38,628,40],[625,39,628,41],[626,4,629,4],[627,4,630,4],[627,10,630,10,"newApp"],[627,16,630,16],[627,19,630,19],[627,23,630,23,"FirebaseAppImpl"],[627,38,630,38],[627,39,630,39,"options"],[627,46,630,46],[627,48,630,48,"config"],[627,54,630,54],[627,56,630,56,"container"],[627,65,630,65],[627,66,630,66],[628,4,631,4,"_apps"],[628,9,631,9],[628,10,631,10,"set"],[628,13,631,13],[628,14,631,14,"name"],[628,18,631,18],[628,20,631,20,"newApp"],[628,26,631,26],[628,27,631,27],[629,4,632,4],[629,11,632,11,"newApp"],[629,17,632,17],[630,2,633,0],[631,2,634,0],[631,11,634,9,"initializeServerApp"],[631,30,634,28,"initializeServerApp"],[631,31,634,29,"_options"],[631,39,634,37],[631,41,634,39,"_serverAppConfig"],[631,57,634,55],[631,60,634,58],[631,61,634,59],[631,62,634,60],[631,64,634,62],[632,4,635,4],[632,8,635,8],[632,12,635,8,"isBrowser"],[632,27,635,17],[632,29,635,18],[632,30,635,19],[632,34,635,23],[632,35,635,24],[632,39,635,24,"isWebWorker"],[632,56,635,35],[632,58,635,36],[632,59,635,37],[632,61,635,39],[633,6,636,8],[634,6,637,8],[634,12,637,14,"ERROR_FACTORY"],[634,25,637,27],[634,26,637,28,"create"],[634,32,637,34],[634,33,637,35],[634,65,637,67],[634,66,637,68],[634,111,637,113],[634,112,637,114],[635,4,638,4],[636,4,639,4],[636,8,639,8,"firebaseOptions"],[636,23,639,23],[637,4,640,4],[637,8,640,8,"serverAppSettings"],[637,25,640,25],[637,28,640,28,"_serverAppConfig"],[637,44,640,44],[637,48,640,48],[637,49,640,49],[637,50,640,50],[638,4,641,4],[638,8,641,8,"_options"],[638,16,641,16],[638,18,641,18],[639,6,642,8],[639,10,642,12,"_isFirebaseApp"],[639,24,642,26],[639,25,642,27,"_options"],[639,33,642,35],[639,34,642,36],[639,36,642,38],[640,8,643,12,"firebaseOptions"],[640,23,643,27],[640,26,643,30,"_options"],[640,34,643,38],[640,35,643,39,"options"],[640,42,643,46],[641,6,644,8],[641,7,644,9],[641,13,645,13],[641,17,645,17,"_isFirebaseServerAppSettings"],[641,45,645,45],[641,46,645,46,"_options"],[641,54,645,54],[641,55,645,55],[641,57,645,57],[642,8,646,12,"serverAppSettings"],[642,25,646,29],[642,28,646,32,"_options"],[642,36,646,40],[643,6,647,8],[643,7,647,9],[643,13,648,13],[644,8,649,12,"firebaseOptions"],[644,23,649,27],[644,26,649,30,"_options"],[644,34,649,38],[645,6,650,8],[646,4,651,4],[647,4,652,4],[647,8,652,8,"serverAppSettings"],[647,25,652,25],[647,26,652,26,"automaticDataCollectionEnabled"],[647,56,652,56],[647,61,652,61,"undefined"],[647,70,652,70],[647,72,652,72],[648,6,653,8,"serverAppSettings"],[648,23,653,25],[648,24,653,26,"automaticDataCollectionEnabled"],[648,54,653,56],[648,57,653,59],[648,61,653,63],[649,4,654,4],[650,4,655,4,"firebaseOptions"],[650,19,655,19],[650,24,655,24,"firebaseOptions"],[650,39,655,39],[650,42,655,42],[650,46,655,42,"getDefaultAppConfig"],[650,71,655,61],[650,73,655,62],[650,74,655,63],[650,75,655,64],[651,4,656,4],[651,8,656,8],[651,9,656,9,"firebaseOptions"],[651,24,656,24],[651,26,656,26],[652,6,657,8],[652,12,657,14,"ERROR_FACTORY"],[652,25,657,27],[652,26,657,28,"create"],[652,32,657,34],[652,33,657,35],[652,45,657,47],[652,46,657,48],[652,71,657,73],[652,72,657,74],[653,4,658,4],[654,4,659,4],[655,4,660,4],[655,10,660,10,"nameObj"],[655,17,660,17],[655,20,660,20],[656,6,661,8],[656,9,661,11,"serverAppSettings"],[656,26,661,28],[657,6,662,8],[657,9,662,11,"firebaseOptions"],[658,4,663,4],[658,5,663,5],[659,4,664,4],[660,4,665,4],[661,4,666,4],[661,8,666,8,"nameObj"],[661,15,666,15],[661,16,666,16,"releaseOnDeref"],[661,30,666,30],[661,35,666,35,"undefined"],[661,44,666,44],[661,46,666,46],[662,6,667,8],[662,13,667,15,"nameObj"],[662,20,667,22],[662,21,667,23,"releaseOnDeref"],[662,35,667,37],[663,4,668,4],[664,4,669,4],[664,10,669,10,"hashCode"],[664,18,669,18],[664,21,669,22,"s"],[664,22,669,23],[664,26,669,28],[665,6,670,8],[665,13,670,15],[665,14,670,16],[665,17,670,19,"s"],[665,18,670,20],[665,19,670,21],[665,20,670,22,"reduce"],[665,26,670,28],[665,27,670,29],[665,28,670,30,"hash"],[665,32,670,34],[665,34,670,36,"c"],[665,35,670,37],[665,40,670,43,"Math"],[665,44,670,47],[665,45,670,48,"imul"],[665,49,670,52],[665,50,670,53],[665,52,670,55],[665,54,670,57,"hash"],[665,58,670,61],[665,59,670,62],[665,62,670,65,"c"],[665,63,670,66],[665,64,670,67,"charCodeAt"],[665,74,670,77],[665,75,670,78],[665,76,670,79],[665,77,670,80],[665,80,670,84],[665,81,670,85],[665,83,670,87],[665,84,670,88],[665,85,670,89],[666,4,671,4],[666,5,671,5],[667,4,672,4],[667,8,672,8,"serverAppSettings"],[667,25,672,25],[667,26,672,26,"releaseOnDeref"],[667,40,672,40],[667,45,672,45,"undefined"],[667,54,672,54],[667,56,672,56],[668,6,673,8],[668,10,673,12],[668,17,673,19,"FinalizationRegistry"],[668,37,673,39],[668,42,673,44],[668,53,673,55],[668,55,673,57],[669,8,674,12],[669,14,674,18,"ERROR_FACTORY"],[669,27,674,31],[669,28,674,32,"create"],[669,34,674,38],[669,35,674,39],[669,72,674,76],[669,73,674,77],[669,125,674,129],[669,126,674,130],[669,127,674,131],[669,128,674,132],[670,6,675,8],[671,4,676,4],[672,4,677,4],[672,10,677,10,"nameString"],[672,20,677,20],[672,23,677,23],[672,25,677,25],[672,28,677,28,"hashCode"],[672,36,677,36],[672,37,677,37,"JSON"],[672,41,677,41],[672,42,677,42,"stringify"],[672,51,677,51],[672,52,677,52,"nameObj"],[672,59,677,59],[672,60,677,60],[672,61,677,61],[673,4,678,4],[673,10,678,10,"existingApp"],[673,21,678,21],[673,24,678,24,"_serverApps"],[673,35,678,35],[673,36,678,36,"get"],[673,39,678,39],[673,40,678,40,"nameString"],[673,50,678,50],[673,51,678,51],[674,4,679,4],[674,8,679,8,"existingApp"],[674,19,679,19],[674,21,679,21],[675,6,680,8,"existingApp"],[675,17,680,19],[675,18,680,20,"incRefCount"],[675,29,680,31],[675,30,680,32,"serverAppSettings"],[675,47,680,49],[675,48,680,50,"releaseOnDeref"],[675,62,680,64],[675,63,680,65],[676,6,681,8],[676,13,681,15,"existingApp"],[676,24,681,26],[677,4,682,4],[678,4,683,4],[678,10,683,10,"container"],[678,19,683,19],[678,22,683,22],[678,26,683,26,"ComponentContainer"],[678,55,683,44],[678,56,683,45,"nameString"],[678,66,683,55],[678,67,683,56],[679,4,684,4],[679,9,684,9],[679,15,684,15,"component"],[679,24,684,24],[679,28,684,28,"_components"],[679,39,684,39],[679,40,684,40,"values"],[679,46,684,46],[679,47,684,47],[679,48,684,48],[679,50,684,50],[680,6,685,8,"container"],[680,15,685,17],[680,16,685,18,"addComponent"],[680,28,685,30],[680,29,685,31,"component"],[680,38,685,40],[680,39,685,41],[681,4,686,4],[682,4,687,4],[682,10,687,10,"newApp"],[682,16,687,16],[682,19,687,19],[682,23,687,23,"FirebaseServerAppImpl"],[682,44,687,44],[682,45,687,45,"firebaseOptions"],[682,60,687,60],[682,62,687,62,"serverAppSettings"],[682,79,687,79],[682,81,687,81,"nameString"],[682,91,687,91],[682,93,687,93,"container"],[682,102,687,102],[682,103,687,103],[683,4,688,4,"_serverApps"],[683,15,688,15],[683,16,688,16,"set"],[683,19,688,19],[683,20,688,20,"nameString"],[683,30,688,30],[683,32,688,32,"newApp"],[683,38,688,38],[683,39,688,39],[684,4,689,4],[684,11,689,11,"newApp"],[684,17,689,17],[685,2,690,0],[686,2,691,0],[687,0,692,0],[688,0,693,0],[689,0,694,0],[690,0,695,0],[691,0,696,0],[692,0,697,0],[693,0,698,0],[694,0,699,0],[695,0,700,0],[696,0,701,0],[697,0,702,0],[698,0,703,0],[699,0,704,0],[700,0,705,0],[701,0,706,0],[702,0,707,0],[703,0,708,0],[704,0,709,0],[705,0,710,0],[706,0,711,0],[707,0,712,0],[708,0,713,0],[709,0,714,0],[710,0,715,0],[711,0,716,0],[712,0,717,0],[713,0,718,0],[714,0,719,0],[715,2,720,0],[715,11,720,9,"getApp"],[715,17,720,15,"getApp"],[715,18,720,16,"name"],[715,22,720,20],[715,25,720,23,"DEFAULT_ENTRY_NAME"],[715,43,720,41],[715,45,720,43],[716,4,721,4],[716,10,721,10,"app"],[716,13,721,13],[716,16,721,16,"_apps"],[716,21,721,21],[716,22,721,22,"get"],[716,25,721,25],[716,26,721,26,"name"],[716,30,721,30],[716,31,721,31],[717,4,722,4],[717,8,722,8],[717,9,722,9,"app"],[717,12,722,12],[717,16,722,16,"name"],[717,20,722,20],[717,25,722,25,"DEFAULT_ENTRY_NAME"],[717,43,722,43],[717,47,722,47],[717,51,722,47,"getDefaultAppConfig"],[717,76,722,66],[717,78,722,67],[717,79,722,68],[717,81,722,70],[718,6,723,8],[718,13,723,15,"initializeApp"],[718,26,723,28],[718,27,723,29],[718,28,723,30],[719,4,724,4],[720,4,725,4],[720,8,725,8],[720,9,725,9,"app"],[720,12,725,12],[720,14,725,14],[721,6,726,8],[721,12,726,14,"ERROR_FACTORY"],[721,25,726,27],[721,26,726,28,"create"],[721,32,726,34],[721,33,726,35],[721,41,726,43],[721,42,726,44],[721,65,726,67],[722,8,726,69,"appName"],[722,15,726,76],[722,17,726,78,"name"],[723,6,726,83],[723,7,726,84],[723,8,726,85],[724,4,727,4],[725,4,728,4],[725,11,728,11,"app"],[725,14,728,14],[726,2,729,0],[727,2,730,0],[728,0,731,0],[729,0,732,0],[730,0,733,0],[731,2,734,0],[731,11,734,9,"getApps"],[731,18,734,16,"getApps"],[731,19,734,16],[731,21,734,19],[732,4,735,4],[732,11,735,11,"Array"],[732,16,735,16],[732,17,735,17,"from"],[732,21,735,21],[732,22,735,22,"_apps"],[732,27,735,27],[732,28,735,28,"values"],[732,34,735,34],[732,35,735,35],[732,36,735,36],[732,37,735,37],[733,2,736,0],[734,2,737,0],[735,0,738,0],[736,0,739,0],[737,0,740,0],[738,0,741,0],[739,0,742,0],[740,0,743,0],[741,0,744,0],[742,0,745,0],[743,0,746,0],[744,0,747,0],[745,0,748,0],[746,0,749,0],[747,0,750,0],[748,0,751,0],[749,0,752,0],[750,0,753,0],[751,2,754,0],[751,17,754,15,"deleteApp"],[751,26,754,24,"deleteApp"],[751,27,754,25,"app"],[751,30,754,28],[751,32,754,30],[752,4,755,4],[752,8,755,8,"cleanupProviders"],[752,24,755,24],[752,27,755,27],[752,32,755,32],[753,4,756,4],[753,10,756,10,"name"],[753,14,756,14],[753,17,756,17,"app"],[753,20,756,20],[753,21,756,21,"name"],[753,25,756,25],[754,4,757,4],[754,8,757,8,"_apps"],[754,13,757,13],[754,14,757,14,"has"],[754,17,757,17],[754,18,757,18,"name"],[754,22,757,22],[754,23,757,23],[754,25,757,25],[755,6,758,8,"cleanupProviders"],[755,22,758,24],[755,25,758,27],[755,29,758,31],[756,6,759,8,"_apps"],[756,11,759,13],[756,12,759,14,"delete"],[756,18,759,20],[756,19,759,21,"name"],[756,23,759,25],[756,24,759,26],[757,4,760,4],[757,5,760,5],[757,11,761,9],[757,15,761,13,"_serverApps"],[757,26,761,24],[757,27,761,25,"has"],[757,30,761,28],[757,31,761,29,"name"],[757,35,761,33],[757,36,761,34],[757,38,761,36],[758,6,762,8],[758,12,762,14,"firebaseServerApp"],[758,29,762,31],[758,32,762,34,"app"],[758,35,762,37],[759,6,763,8],[759,10,763,12,"firebaseServerApp"],[759,27,763,29],[759,28,763,30,"decRefCount"],[759,39,763,41],[759,40,763,42],[759,41,763,43],[759,45,763,47],[759,46,763,48],[759,48,763,50],[760,8,764,12,"_serverApps"],[760,19,764,23],[760,20,764,24,"delete"],[760,26,764,30],[760,27,764,31,"name"],[760,31,764,35],[760,32,764,36],[761,8,765,12,"cleanupProviders"],[761,24,765,28],[761,27,765,31],[761,31,765,35],[762,6,766,8],[763,4,767,4],[764,4,768,4],[764,8,768,8,"cleanupProviders"],[764,24,768,24],[764,26,768,26],[765,6,769,8],[765,12,769,14,"Promise"],[765,19,769,21],[765,20,769,22,"all"],[765,23,769,25],[765,24,769,26,"app"],[765,27,769,29],[765,28,769,30,"container"],[765,37,769,39],[765,38,770,13,"getProviders"],[765,50,770,25],[765,51,770,26],[765,52,770,27],[765,53,771,13,"map"],[765,56,771,16],[765,57,771,17,"provider"],[765,65,771,25],[765,69,771,29,"provider"],[765,77,771,37],[765,78,771,38,"delete"],[765,84,771,44],[765,85,771,45],[765,86,771,46],[765,87,771,47],[765,88,771,48],[766,6,772,8,"app"],[766,9,772,11],[766,10,772,12,"isDeleted"],[766,19,772,21],[766,22,772,24],[766,26,772,28],[767,4,773,4],[768,2,774,0],[769,2,775,0],[770,0,776,0],[771,0,777,0],[772,0,778,0],[773,0,779,0],[774,0,780,0],[775,0,781,0],[776,0,782,0],[777,2,783,0],[777,11,783,9,"registerVersion"],[777,26,783,24,"registerVersion"],[777,27,783,25,"libraryKeyOrName"],[777,43,783,41],[777,45,783,43,"version"],[777,52,783,50],[777,54,783,52,"variant"],[777,61,783,59],[777,63,783,61],[778,4,784,4],[779,4,785,4],[780,4,786,4],[780,8,786,8,"library"],[780,15,786,15],[780,18,786,18,"PLATFORM_LOG_STRING"],[780,37,786,37],[780,38,786,38,"libraryKeyOrName"],[780,54,786,54],[780,55,786,55],[780,59,786,59,"libraryKeyOrName"],[780,75,786,75],[781,4,787,4],[781,8,787,8,"variant"],[781,15,787,15],[781,17,787,17],[782,6,788,8,"library"],[782,13,788,15],[782,17,788,19],[782,21,788,23,"variant"],[782,28,788,30],[782,30,788,32],[783,4,789,4],[784,4,790,4],[784,10,790,10,"libraryMismatch"],[784,25,790,25],[784,28,790,28,"library"],[784,35,790,35],[784,36,790,36,"match"],[784,41,790,41],[784,42,790,42],[784,49,790,49],[784,50,790,50],[785,4,791,4],[785,10,791,10,"versionMismatch"],[785,25,791,25],[785,28,791,28,"version"],[785,35,791,35],[785,36,791,36,"match"],[785,41,791,41],[785,42,791,42],[785,49,791,49],[785,50,791,50],[786,4,792,4],[786,8,792,8,"libraryMismatch"],[786,23,792,23],[786,27,792,27,"versionMismatch"],[786,42,792,42],[786,44,792,44],[787,6,793,8],[787,12,793,14,"warning"],[787,19,793,21],[787,22,793,24],[787,23,794,12],[787,54,794,43,"library"],[787,61,794,50],[787,80,794,69,"version"],[787,87,794,76],[787,91,794,80],[787,92,795,9],[788,6,796,8],[788,10,796,12,"libraryMismatch"],[788,25,796,27],[788,27,796,29],[789,8,797,12,"warning"],[789,15,797,19],[789,16,797,20,"push"],[789,20,797,24],[789,21,797,25],[789,38,797,42,"library"],[789,45,797,49],[789,96,797,100],[789,97,797,101],[790,6,798,8],[791,6,799,8],[791,10,799,12,"libraryMismatch"],[791,25,799,27],[791,29,799,31,"versionMismatch"],[791,44,799,46],[791,46,799,48],[792,8,800,12,"warning"],[792,15,800,19],[792,16,800,20,"push"],[792,20,800,24],[792,21,800,25],[792,26,800,30],[792,27,800,31],[793,6,801,8],[794,6,802,8],[794,10,802,12,"versionMismatch"],[794,25,802,27],[794,27,802,29],[795,8,803,12,"warning"],[795,15,803,19],[795,16,803,20,"push"],[795,20,803,24],[795,21,803,25],[795,38,803,42,"version"],[795,45,803,49],[795,96,803,100],[795,97,803,101],[796,6,804,8],[797,6,805,8,"logger"],[797,12,805,14],[797,13,805,15,"warn"],[797,17,805,19],[797,18,805,20,"warning"],[797,25,805,27],[797,26,805,28,"join"],[797,30,805,32],[797,31,805,33],[797,34,805,36],[797,35,805,37],[797,36,805,38],[798,6,806,8],[799,4,807,4],[800,4,808,4,"_registerComponent"],[800,22,808,22],[800,23,808,23],[800,27,808,27,"Component"],[800,47,808,36],[800,48,808,37],[800,51,808,40,"library"],[800,58,808,47],[800,68,808,57],[800,70,808,59],[800,77,808,66],[801,6,808,68,"library"],[801,13,808,75],[802,6,808,77,"version"],[803,4,808,85],[803,5,808,86],[803,6,808,87],[803,8,808,89],[803,17,808,98],[803,18,808,99],[803,45,808,126],[803,46,808,127],[803,47,808,128],[804,2,809,0],[805,2,810,0],[806,0,811,0],[807,0,812,0],[808,0,813,0],[809,0,814,0],[810,0,815,0],[811,0,816,0],[812,2,817,0],[812,11,817,9,"onLog"],[812,16,817,14,"onLog"],[812,17,817,15,"logCallback"],[812,28,817,26],[812,30,817,28,"options"],[812,37,817,35],[812,39,817,37],[813,4,818,4],[813,8,818,8,"logCallback"],[813,19,818,19],[813,24,818,24],[813,28,818,28],[813,32,818,32],[813,39,818,39,"logCallback"],[813,50,818,50],[813,55,818,55],[813,65,818,65],[813,67,818,67],[814,6,819,8],[814,12,819,14,"ERROR_FACTORY"],[814,25,819,27],[814,26,819,28,"create"],[814,32,819,34],[814,33,819,35],[814,55,819,57],[814,56,819,58],[814,91,819,93],[814,92,819,94],[815,4,820,4],[816,4,821,4],[816,8,821,4,"setUserLogHandler"],[816,33,821,21],[816,35,821,22,"logCallback"],[816,46,821,33],[816,48,821,35,"options"],[816,55,821,42],[816,56,821,43],[817,2,822,0],[818,2,823,0],[819,0,824,0],[820,0,825,0],[821,0,826,0],[822,0,827,0],[823,0,828,0],[824,0,829,0],[825,0,830,0],[826,0,831,0],[827,2,832,0],[827,11,832,9,"setLogLevel"],[827,22,832,20,"setLogLevel"],[827,23,832,21,"logLevel"],[827,31,832,29],[827,33,832,31],[828,4,833,4],[828,8,833,4,"setLogLevel$1"],[828,27,833,17],[828,29,833,18,"logLevel"],[828,37,833,26],[828,38,833,27],[829,2,834,0],[831,2,836,0],[832,0,837,0],[833,0,838,0],[834,0,839,0],[835,0,840,0],[836,0,841,0],[837,0,842,0],[838,0,843,0],[839,0,844,0],[840,0,845,0],[841,0,846,0],[842,0,847,0],[843,0,848,0],[844,0,849,0],[845,0,850,0],[846,0,851,0],[847,2,852,0],[847,8,852,6,"DB_NAME"],[847,15,852,13],[847,18,852,16],[847,47,852,45],[848,2,853,0],[848,8,853,6,"DB_VERSION"],[848,18,853,16],[848,21,853,19],[848,22,853,20],[849,2,854,0],[849,8,854,6,"STORE_NAME"],[849,18,854,16],[849,21,854,19],[849,47,854,45],[850,2,855,0],[850,6,855,4,"dbPromise"],[850,15,855,13],[850,18,855,16],[850,22,855,20],[851,2,856,0],[851,11,856,9,"getDbPromise"],[851,23,856,21,"getDbPromise"],[851,24,856,21],[851,26,856,24],[852,4,857,4],[852,8,857,8],[852,9,857,9,"dbPromise"],[852,18,857,18],[852,20,857,20],[853,6,858,8,"dbPromise"],[853,15,858,17],[853,18,858,20],[853,22,858,20,"openDB"],[853,33,858,26],[853,35,858,27,"DB_NAME"],[853,42,858,34],[853,44,858,36,"DB_VERSION"],[853,54,858,46],[853,56,858,48],[854,8,859,12,"upgrade"],[854,15,859,19],[854,17,859,21,"upgrade"],[854,18,859,22,"db"],[854,20,859,24],[854,22,859,26,"oldVersion"],[854,32,859,36],[854,37,859,41],[855,10,860,16],[856,10,861,16],[857,10,862,16],[858,10,863,16],[859,10,864,16],[860,10,865,16],[860,18,865,24,"oldVersion"],[860,28,865,34],[861,12,866,20],[861,17,866,25],[861,18,866,26],[862,14,867,24],[862,18,867,28],[863,16,868,28,"db"],[863,18,868,30],[863,19,868,31,"createObjectStore"],[863,36,868,48],[863,37,868,49,"STORE_NAME"],[863,47,868,59],[863,48,868,60],[864,14,869,24],[864,15,869,25],[864,16,870,24],[864,23,870,31,"e"],[864,24,870,32],[864,26,870,34],[865,16,871,28],[866,16,872,28],[867,16,873,28],[868,16,874,28,"console"],[868,23,874,35],[868,24,874,36,"warn"],[868,28,874,40],[868,29,874,41,"e"],[868,30,874,42],[868,31,874,43],[869,14,875,24],[870,10,876,16],[871,8,877,12],[872,6,878,8],[872,7,878,9],[872,8,878,10],[872,9,878,11,"catch"],[872,14,878,16],[872,15,878,17,"e"],[872,16,878,18],[872,20,878,22],[873,8,879,12],[873,14,879,18,"ERROR_FACTORY"],[873,27,879,31],[873,28,879,32,"create"],[873,34,879,38],[873,35,879,39],[873,45,879,49],[873,46,879,50],[873,71,879,75],[874,10,880,16,"originalErrorMessage"],[874,30,880,36],[874,32,880,38,"e"],[874,33,880,39],[874,34,880,40,"message"],[875,8,881,12],[875,9,881,13],[875,10,881,14],[876,6,882,8],[876,7,882,9],[876,8,882,10],[877,4,883,4],[878,4,884,4],[878,11,884,11,"dbPromise"],[878,20,884,20],[879,2,885,0],[880,2,886,0],[880,17,886,15,"readHeartbeatsFromIndexedDB"],[880,44,886,42,"readHeartbeatsFromIndexedDB"],[880,45,886,43,"app"],[880,48,886,46],[880,50,886,48],[881,4,887,4],[881,8,887,8],[882,6,888,8],[882,12,888,14,"db"],[882,14,888,16],[882,17,888,19],[882,23,888,25,"getDbPromise"],[882,35,888,37],[882,36,888,38],[882,37,888,39],[883,6,889,8],[883,12,889,14,"tx"],[883,14,889,16],[883,17,889,19,"db"],[883,19,889,21],[883,20,889,22,"transaction"],[883,31,889,33],[883,32,889,34,"STORE_NAME"],[883,42,889,44],[883,43,889,45],[884,6,890,8],[884,12,890,14,"result"],[884,18,890,20],[884,21,890,23],[884,27,890,29,"tx"],[884,29,890,31],[884,30,890,32,"objectStore"],[884,41,890,43],[884,42,890,44,"STORE_NAME"],[884,52,890,54],[884,53,890,55],[884,54,890,56,"get"],[884,57,890,59],[884,58,890,60,"computeKey"],[884,68,890,70],[884,69,890,71,"app"],[884,72,890,74],[884,73,890,75],[884,74,890,76],[885,6,891,8],[886,6,892,8],[887,6,893,8],[887,12,893,14,"tx"],[887,14,893,16],[887,15,893,17,"done"],[887,19,893,21],[888,6,894,8],[888,13,894,15,"result"],[888,19,894,21],[889,4,895,4],[889,5,895,5],[889,6,896,4],[889,13,896,11,"e"],[889,14,896,12],[889,16,896,14],[890,6,897,8],[890,10,897,12,"e"],[890,11,897,13],[890,23,897,25,"FirebaseError"],[890,42,897,38],[890,44,897,40],[891,8,898,12,"logger"],[891,14,898,18],[891,15,898,19,"warn"],[891,19,898,23],[891,20,898,24,"e"],[891,21,898,25],[891,22,898,26,"message"],[891,29,898,33],[891,30,898,34],[892,6,899,8],[892,7,899,9],[892,13,900,13],[893,8,901,12],[893,14,901,18,"idbGetError"],[893,25,901,29],[893,28,901,32,"ERROR_FACTORY"],[893,41,901,45],[893,42,901,46,"create"],[893,48,901,52],[893,49,901,53],[893,58,901,62],[893,59,901,63],[893,83,901,87],[894,10,902,16,"originalErrorMessage"],[894,30,902,36],[894,32,902,38,"e"],[894,33,902,39],[894,35,902,41,"message"],[895,8,903,12],[895,9,903,13],[895,10,903,14],[896,8,904,12,"logger"],[896,14,904,18],[896,15,904,19,"warn"],[896,19,904,23],[896,20,904,24,"idbGetError"],[896,31,904,35],[896,32,904,36,"message"],[896,39,904,43],[896,40,904,44],[897,6,905,8],[898,4,906,4],[899,2,907,0],[900,2,908,0],[900,17,908,15,"writeHeartbeatsToIndexedDB"],[900,43,908,41,"writeHeartbeatsToIndexedDB"],[900,44,908,42,"app"],[900,47,908,45],[900,49,908,47,"heartbeatObject"],[900,64,908,62],[900,66,908,64],[901,4,909,4],[901,8,909,8],[902,6,910,8],[902,12,910,14,"db"],[902,14,910,16],[902,17,910,19],[902,23,910,25,"getDbPromise"],[902,35,910,37],[902,36,910,38],[902,37,910,39],[903,6,911,8],[903,12,911,14,"tx"],[903,14,911,16],[903,17,911,19,"db"],[903,19,911,21],[903,20,911,22,"transaction"],[903,31,911,33],[903,32,911,34,"STORE_NAME"],[903,42,911,44],[903,44,911,46],[903,55,911,57],[903,56,911,58],[904,6,912,8],[904,12,912,14,"objectStore"],[904,23,912,25],[904,26,912,28,"tx"],[904,28,912,30],[904,29,912,31,"objectStore"],[904,40,912,42],[904,41,912,43,"STORE_NAME"],[904,51,912,53],[904,52,912,54],[905,6,913,8],[905,12,913,14,"objectStore"],[905,23,913,25],[905,24,913,26,"put"],[905,27,913,29],[905,28,913,30,"heartbeatObject"],[905,43,913,45],[905,45,913,47,"computeKey"],[905,55,913,57],[905,56,913,58,"app"],[905,59,913,61],[905,60,913,62],[905,61,913,63],[906,6,914,8],[906,12,914,14,"tx"],[906,14,914,16],[906,15,914,17,"done"],[906,19,914,21],[907,4,915,4],[907,5,915,5],[907,6,916,4],[907,13,916,11,"e"],[907,14,916,12],[907,16,916,14],[908,6,917,8],[908,10,917,12,"e"],[908,11,917,13],[908,23,917,25,"FirebaseError"],[908,42,917,38],[908,44,917,40],[909,8,918,12,"logger"],[909,14,918,18],[909,15,918,19,"warn"],[909,19,918,23],[909,20,918,24,"e"],[909,21,918,25],[909,22,918,26,"message"],[909,29,918,33],[909,30,918,34],[910,6,919,8],[910,7,919,9],[910,13,920,13],[911,8,921,12],[911,14,921,18,"idbGetError"],[911,25,921,29],[911,28,921,32,"ERROR_FACTORY"],[911,41,921,45],[911,42,921,46,"create"],[911,48,921,52],[911,49,921,53],[911,58,921,62],[911,59,921,63],[911,85,921,89],[912,10,922,16,"originalErrorMessage"],[912,30,922,36],[912,32,922,38,"e"],[912,33,922,39],[912,35,922,41,"message"],[913,8,923,12],[913,9,923,13],[913,10,923,14],[914,8,924,12,"logger"],[914,14,924,18],[914,15,924,19,"warn"],[914,19,924,23],[914,20,924,24,"idbGetError"],[914,31,924,35],[914,32,924,36,"message"],[914,39,924,43],[914,40,924,44],[915,6,925,8],[916,4,926,4],[917,2,927,0],[918,2,928,0],[918,11,928,9,"computeKey"],[918,21,928,19,"computeKey"],[918,22,928,20,"app"],[918,25,928,23],[918,27,928,25],[919,4,929,4],[919,11,929,11],[919,14,929,14,"app"],[919,17,929,17],[919,18,929,18,"name"],[919,22,929,22],[919,26,929,26,"app"],[919,29,929,29],[919,30,929,30,"options"],[919,37,929,37],[919,38,929,38,"appId"],[919,43,929,43],[919,45,929,45],[920,2,930,0],[922,2,932,0],[923,0,933,0],[924,0,934,0],[925,0,935,0],[926,0,936,0],[927,0,937,0],[928,0,938,0],[929,0,939,0],[930,0,940,0],[931,0,941,0],[932,0,942,0],[933,0,943,0],[934,0,944,0],[935,0,945,0],[936,0,946,0],[937,0,947,0],[938,2,948,0],[938,8,948,6,"MAX_HEADER_BYTES"],[938,24,948,22],[938,27,948,25],[938,31,948,29],[939,2,949,0],[939,8,949,6,"MAX_NUM_STORED_HEARTBEATS"],[939,33,949,31],[939,36,949,34],[939,38,949,36],[940,2,950,0],[940,8,950,6,"HeartbeatServiceImpl"],[940,28,950,26],[940,29,950,27],[941,4,951,4,"constructor"],[941,15,951,15,"constructor"],[941,16,951,16,"container"],[941,25,951,25],[941,27,951,27],[942,6,952,8],[942,10,952,12],[942,11,952,13,"container"],[942,20,952,22],[942,23,952,25,"container"],[942,32,952,34],[943,6,953,8],[944,0,954,0],[945,0,955,0],[946,0,956,0],[947,0,957,0],[948,0,958,0],[949,0,959,0],[950,0,960,0],[951,0,961,0],[952,6,962,8],[952,10,962,12],[952,11,962,13,"_heartbeatsCache"],[952,27,962,29],[952,30,962,32],[952,34,962,36],[953,6,963,8],[953,12,963,14,"app"],[953,15,963,17],[953,18,963,20],[953,22,963,24],[953,23,963,25,"container"],[953,32,963,34],[953,33,963,35,"getProvider"],[953,44,963,46],[953,45,963,47],[953,50,963,52],[953,51,963,53],[953,52,963,54,"getImmediate"],[953,64,963,66],[953,65,963,67],[953,66,963,68],[954,6,964,8],[954,10,964,12],[954,11,964,13,"_storage"],[954,19,964,21],[954,22,964,24],[954,26,964,28,"HeartbeatStorageImpl"],[954,46,964,48],[954,47,964,49,"app"],[954,50,964,52],[954,51,964,53],[955,6,965,8],[955,10,965,12],[955,11,965,13,"_heartbeatsCachePromise"],[955,34,965,36],[955,37,965,39],[955,41,965,43],[955,42,965,44,"_storage"],[955,50,965,52],[955,51,965,53,"read"],[955,55,965,57],[955,56,965,58],[955,57,965,59],[955,58,965,60,"then"],[955,62,965,64],[955,63,965,65,"result"],[955,69,965,71],[955,73,965,75],[956,8,966,12],[956,12,966,16],[956,13,966,17,"_heartbeatsCache"],[956,29,966,33],[956,32,966,36,"result"],[956,38,966,42],[957,8,967,12],[957,15,967,19,"result"],[957,21,967,25],[958,6,968,8],[958,7,968,9],[958,8,968,10],[959,4,969,4],[960,4,970,4],[961,0,971,0],[962,0,972,0],[963,0,973,0],[964,0,974,0],[965,0,975,0],[966,0,976,0],[967,4,977,4],[967,10,977,10,"triggerHeartbeat"],[967,26,977,26,"triggerHeartbeat"],[967,27,977,26],[967,29,977,29],[968,6,978,8],[968,10,978,12],[969,8,979,12],[969,14,979,18,"platformLogger"],[969,28,979,32],[969,31,979,35],[969,35,979,39],[969,36,979,40,"container"],[969,45,979,49],[969,46,980,17,"getProvider"],[969,57,980,28],[969,58,980,29],[969,75,980,46],[969,76,980,47],[969,77,981,17,"getImmediate"],[969,89,981,29],[969,90,981,30],[969,91,981,31],[970,8,982,12],[971,8,983,12],[972,8,984,12],[972,14,984,18,"agent"],[972,19,984,23],[972,22,984,26,"platformLogger"],[972,36,984,40],[972,37,984,41,"getPlatformInfoString"],[972,58,984,62],[972,59,984,63],[972,60,984,64],[973,8,985,12],[973,14,985,18,"date"],[973,18,985,22],[973,21,985,25,"getUTCDateString"],[973,37,985,41],[973,38,985,42],[973,39,985,43],[974,8,986,12],[974,12,986,16],[974,16,986,20],[974,17,986,21,"_heartbeatsCache"],[974,33,986,37],[974,35,986,39,"heartbeats"],[974,45,986,49],[974,49,986,53],[974,53,986,57],[974,55,986,59],[975,10,987,16],[975,14,987,20],[975,15,987,21,"_heartbeatsCache"],[975,31,987,37],[975,34,987,40],[975,40,987,46],[975,44,987,50],[975,45,987,51,"_heartbeatsCachePromise"],[975,68,987,74],[976,10,988,16],[977,10,989,16],[977,14,989,20],[977,18,989,24],[977,19,989,25,"_heartbeatsCache"],[977,35,989,41],[977,37,989,43,"heartbeats"],[977,47,989,53],[977,51,989,57],[977,55,989,61],[977,57,989,63],[978,12,990,20],[979,10,991,16],[980,8,992,12],[981,8,993,12],[982,8,994,12],[983,8,995,12],[983,12,995,16],[983,16,995,20],[983,17,995,21,"_heartbeatsCache"],[983,33,995,37],[983,34,995,38,"lastSentHeartbeatDate"],[983,55,995,59],[983,60,995,64,"date"],[983,64,995,68],[983,68,996,16],[983,72,996,20],[983,73,996,21,"_heartbeatsCache"],[983,89,996,37],[983,90,996,38,"heartbeats"],[983,100,996,48],[983,101,996,49,"some"],[983,105,996,53],[983,106,996,54,"singleDateHeartbeat"],[983,125,996,73],[983,129,996,77,"singleDateHeartbeat"],[983,148,996,96],[983,149,996,97,"date"],[983,153,996,101],[983,158,996,106,"date"],[983,162,996,110],[983,163,996,111],[983,165,996,113],[984,10,997,16],[985,8,998,12],[985,9,998,13],[985,15,999,17],[986,10,1000,16],[987,10,1001,16],[987,14,1001,20],[987,15,1001,21,"_heartbeatsCache"],[987,31,1001,37],[987,32,1001,38,"heartbeats"],[987,42,1001,48],[987,43,1001,49,"push"],[987,47,1001,53],[987,48,1001,54],[988,12,1001,56,"date"],[988,16,1001,60],[989,12,1001,62,"agent"],[990,10,1001,68],[990,11,1001,69],[990,12,1001,70],[991,10,1002,16],[992,10,1003,16],[993,10,1004,16],[993,14,1004,20],[993,18,1004,24],[993,19,1004,25,"_heartbeatsCache"],[993,35,1004,41],[993,36,1004,42,"heartbeats"],[993,46,1004,52],[993,47,1004,53,"length"],[993,53,1004,59],[993,56,1004,62,"MAX_NUM_STORED_HEARTBEATS"],[993,81,1004,87],[993,83,1004,89],[994,12,1005,20],[994,18,1005,26,"earliestHeartbeatIdx"],[994,38,1005,46],[994,41,1005,49,"getEarliestHeartbeatIdx"],[994,64,1005,72],[994,65,1005,73],[994,69,1005,77],[994,70,1005,78,"_heartbeatsCache"],[994,86,1005,94],[994,87,1005,95,"heartbeats"],[994,97,1005,105],[994,98,1005,106],[995,12,1006,20],[995,16,1006,24],[995,17,1006,25,"_heartbeatsCache"],[995,33,1006,41],[995,34,1006,42,"heartbeats"],[995,44,1006,52],[995,45,1006,53,"splice"],[995,51,1006,59],[995,52,1006,60,"earliestHeartbeatIdx"],[995,72,1006,80],[995,74,1006,82],[995,75,1006,83],[995,76,1006,84],[996,10,1007,16],[997,8,1008,12],[998,8,1009,12],[998,15,1009,19],[998,19,1009,23],[998,20,1009,24,"_storage"],[998,28,1009,32],[998,29,1009,33,"overwrite"],[998,38,1009,42],[998,39,1009,43],[998,43,1009,47],[998,44,1009,48,"_heartbeatsCache"],[998,60,1009,64],[998,61,1009,65],[999,6,1010,8],[999,7,1010,9],[999,8,1011,8],[999,15,1011,15,"e"],[999,16,1011,16],[999,18,1011,18],[1000,8,1012,12,"logger"],[1000,14,1012,18],[1000,15,1012,19,"warn"],[1000,19,1012,23],[1000,20,1012,24,"e"],[1000,21,1012,25],[1000,22,1012,26],[1001,6,1013,8],[1002,4,1014,4],[1003,4,1015,4],[1004,0,1016,0],[1005,0,1017,0],[1006,0,1018,0],[1007,0,1019,0],[1008,0,1020,0],[1009,0,1021,0],[1010,4,1022,4],[1010,10,1022,10,"getHeartbeatsHeader"],[1010,29,1022,29,"getHeartbeatsHeader"],[1010,30,1022,29],[1010,32,1022,32],[1011,6,1023,8],[1011,10,1023,12],[1012,8,1024,12],[1012,12,1024,16],[1012,16,1024,20],[1012,17,1024,21,"_heartbeatsCache"],[1012,33,1024,37],[1012,38,1024,42],[1012,42,1024,46],[1012,44,1024,48],[1013,10,1025,16],[1013,16,1025,22],[1013,20,1025,26],[1013,21,1025,27,"_heartbeatsCachePromise"],[1013,44,1025,50],[1014,8,1026,12],[1015,8,1027,12],[1016,8,1028,12],[1016,12,1028,16],[1016,16,1028,20],[1016,17,1028,21,"_heartbeatsCache"],[1016,33,1028,37],[1016,35,1028,39,"heartbeats"],[1016,45,1028,49],[1016,49,1028,53],[1016,53,1028,57],[1016,57,1029,16],[1016,61,1029,20],[1016,62,1029,21,"_heartbeatsCache"],[1016,78,1029,37],[1016,79,1029,38,"heartbeats"],[1016,89,1029,48],[1016,90,1029,49,"length"],[1016,96,1029,55],[1016,101,1029,60],[1016,102,1029,61],[1016,104,1029,63],[1017,10,1030,16],[1017,17,1030,23],[1017,19,1030,25],[1018,8,1031,12],[1019,8,1032,12],[1019,14,1032,18,"date"],[1019,18,1032,22],[1019,21,1032,25,"getUTCDateString"],[1019,37,1032,41],[1019,38,1032,42],[1019,39,1032,43],[1020,8,1033,12],[1021,8,1034,12],[1021,14,1034,18],[1022,10,1034,20,"heartbeatsToSend"],[1022,26,1034,36],[1023,10,1034,38,"unsentEntries"],[1024,8,1034,52],[1024,9,1034,53],[1024,12,1034,56,"extractHeartbeatsForHeader"],[1024,38,1034,82],[1024,39,1034,83],[1024,43,1034,87],[1024,44,1034,88,"_heartbeatsCache"],[1024,60,1034,104],[1024,61,1034,105,"heartbeats"],[1024,71,1034,115],[1024,72,1034,116],[1025,8,1035,12],[1025,14,1035,18,"headerString"],[1025,26,1035,30],[1025,29,1035,33],[1025,33,1035,33,"base64urlEncodeWithoutPadding"],[1025,68,1035,62],[1025,70,1035,63,"JSON"],[1025,74,1035,67],[1025,75,1035,68,"stringify"],[1025,84,1035,77],[1025,85,1035,78],[1026,10,1035,80,"version"],[1026,17,1035,87],[1026,19,1035,89],[1026,20,1035,90],[1027,10,1035,92,"heartbeats"],[1027,20,1035,102],[1027,22,1035,104,"heartbeatsToSend"],[1028,8,1035,121],[1028,9,1035,122],[1028,10,1035,123],[1028,11,1035,124],[1029,8,1036,12],[1030,8,1037,12],[1030,12,1037,16],[1030,13,1037,17,"_heartbeatsCache"],[1030,29,1037,33],[1030,30,1037,34,"lastSentHeartbeatDate"],[1030,51,1037,55],[1030,54,1037,58,"date"],[1030,58,1037,62],[1031,8,1038,12],[1031,12,1038,16,"unsentEntries"],[1031,25,1038,29],[1031,26,1038,30,"length"],[1031,32,1038,36],[1031,35,1038,39],[1031,36,1038,40],[1031,38,1038,42],[1032,10,1039,16],[1033,10,1040,16],[1033,14,1040,20],[1033,15,1040,21,"_heartbeatsCache"],[1033,31,1040,37],[1033,32,1040,38,"heartbeats"],[1033,42,1040,48],[1033,45,1040,51,"unsentEntries"],[1033,58,1040,64],[1034,10,1041,16],[1035,10,1042,16],[1036,10,1043,16],[1037,10,1044,16],[1037,16,1044,22],[1037,20,1044,26],[1037,21,1044,27,"_storage"],[1037,29,1044,35],[1037,30,1044,36,"overwrite"],[1037,39,1044,45],[1037,40,1044,46],[1037,44,1044,50],[1037,45,1044,51,"_heartbeatsCache"],[1037,61,1044,67],[1037,62,1044,68],[1038,8,1045,12],[1038,9,1045,13],[1038,15,1046,17],[1039,10,1047,16],[1039,14,1047,20],[1039,15,1047,21,"_heartbeatsCache"],[1039,31,1047,37],[1039,32,1047,38,"heartbeats"],[1039,42,1047,48],[1039,45,1047,51],[1039,47,1047,53],[1040,10,1048,16],[1041,10,1049,16],[1041,15,1049,21],[1041,19,1049,25],[1041,20,1049,26,"_storage"],[1041,28,1049,34],[1041,29,1049,35,"overwrite"],[1041,38,1049,44],[1041,39,1049,45],[1041,43,1049,49],[1041,44,1049,50,"_heartbeatsCache"],[1041,60,1049,66],[1041,61,1049,67],[1042,8,1050,12],[1043,8,1051,12],[1043,15,1051,19,"headerString"],[1043,27,1051,31],[1044,6,1052,8],[1044,7,1052,9],[1044,8,1053,8],[1044,15,1053,15,"e"],[1044,16,1053,16],[1044,18,1053,18],[1045,8,1054,12,"logger"],[1045,14,1054,18],[1045,15,1054,19,"warn"],[1045,19,1054,23],[1045,20,1054,24,"e"],[1045,21,1054,25],[1045,22,1054,26],[1046,8,1055,12],[1046,15,1055,19],[1046,17,1055,21],[1047,6,1056,8],[1048,4,1057,4],[1049,2,1058,0],[1050,2,1059,0],[1050,11,1059,9,"getUTCDateString"],[1050,27,1059,25,"getUTCDateString"],[1050,28,1059,25],[1050,30,1059,28],[1051,4,1060,4],[1051,10,1060,10,"today"],[1051,15,1060,15],[1051,18,1060,18],[1051,22,1060,22,"Date"],[1051,26,1060,26],[1051,27,1060,27],[1051,28,1060,28],[1052,4,1061,4],[1053,4,1062,4],[1053,11,1062,11,"today"],[1053,16,1062,16],[1053,17,1062,17,"toISOString"],[1053,28,1062,28],[1053,29,1062,29],[1053,30,1062,30],[1053,31,1062,31,"substring"],[1053,40,1062,40],[1053,41,1062,41],[1053,42,1062,42],[1053,44,1062,44],[1053,46,1062,46],[1053,47,1062,47],[1054,2,1063,0],[1055,2,1064,0],[1055,11,1064,9,"extractHeartbeatsForHeader"],[1055,37,1064,35,"extractHeartbeatsForHeader"],[1055,38,1064,36,"heartbeatsCache"],[1055,53,1064,51],[1055,55,1064,53,"maxSize"],[1055,62,1064,60],[1055,65,1064,63,"MAX_HEADER_BYTES"],[1055,81,1064,79],[1055,83,1064,81],[1056,4,1065,4],[1057,4,1066,4],[1058,4,1067,4],[1058,10,1067,10,"heartbeatsToSend"],[1058,26,1067,26],[1058,29,1067,29],[1058,31,1067,31],[1059,4,1068,4],[1060,4,1069,4],[1060,8,1069,8,"unsentEntries"],[1060,21,1069,21],[1060,24,1069,24,"heartbeatsCache"],[1060,39,1069,39],[1060,40,1069,40,"slice"],[1060,45,1069,45],[1060,46,1069,46],[1060,47,1069,47],[1061,4,1070,4],[1061,9,1070,9],[1061,15,1070,15,"singleDateHeartbeat"],[1061,34,1070,34],[1061,38,1070,38,"heartbeatsCache"],[1061,53,1070,53],[1061,55,1070,55],[1062,6,1071,8],[1063,6,1072,8],[1063,12,1072,14,"heartbeatEntry"],[1063,26,1072,28],[1063,29,1072,31,"heartbeatsToSend"],[1063,45,1072,47],[1063,46,1072,48,"find"],[1063,50,1072,52],[1063,51,1072,53,"hb"],[1063,53,1072,55],[1063,57,1072,59,"hb"],[1063,59,1072,61],[1063,60,1072,62,"agent"],[1063,65,1072,67],[1063,70,1072,72,"singleDateHeartbeat"],[1063,89,1072,91],[1063,90,1072,92,"agent"],[1063,95,1072,97],[1063,96,1072,98],[1064,6,1073,8],[1064,10,1073,12],[1064,11,1073,13,"heartbeatEntry"],[1064,25,1073,27],[1064,27,1073,29],[1065,8,1074,12],[1066,8,1075,12,"heartbeatsToSend"],[1066,24,1075,28],[1066,25,1075,29,"push"],[1066,29,1075,33],[1066,30,1075,34],[1067,10,1076,16,"agent"],[1067,15,1076,21],[1067,17,1076,23,"singleDateHeartbeat"],[1067,36,1076,42],[1067,37,1076,43,"agent"],[1067,42,1076,48],[1068,10,1077,16,"dates"],[1068,15,1077,21],[1068,17,1077,23],[1068,18,1077,24,"singleDateHeartbeat"],[1068,37,1077,43],[1068,38,1077,44,"date"],[1068,42,1077,48],[1069,8,1078,12],[1069,9,1078,13],[1069,10,1078,14],[1070,8,1079,12],[1070,12,1079,16,"countBytes"],[1070,22,1079,26],[1070,23,1079,27,"heartbeatsToSend"],[1070,39,1079,43],[1070,40,1079,44],[1070,43,1079,47,"maxSize"],[1070,50,1079,54],[1070,52,1079,56],[1071,10,1080,16],[1072,10,1081,16],[1073,10,1082,16,"heartbeatsToSend"],[1073,26,1082,32],[1073,27,1082,33,"pop"],[1073,30,1082,36],[1073,31,1082,37],[1073,32,1082,38],[1074,10,1083,16],[1075,8,1084,12],[1076,6,1085,8],[1076,7,1085,9],[1076,13,1086,13],[1077,8,1087,12,"heartbeatEntry"],[1077,22,1087,26],[1077,23,1087,27,"dates"],[1077,28,1087,32],[1077,29,1087,33,"push"],[1077,33,1087,37],[1077,34,1087,38,"singleDateHeartbeat"],[1077,53,1087,57],[1077,54,1087,58,"date"],[1077,58,1087,62],[1077,59,1087,63],[1078,8,1088,12],[1079,8,1089,12],[1080,8,1090,12],[1080,12,1090,16,"countBytes"],[1080,22,1090,26],[1080,23,1090,27,"heartbeatsToSend"],[1080,39,1090,43],[1080,40,1090,44],[1080,43,1090,47,"maxSize"],[1080,50,1090,54],[1080,52,1090,56],[1081,10,1091,16,"heartbeatEntry"],[1081,24,1091,30],[1081,25,1091,31,"dates"],[1081,30,1091,36],[1081,31,1091,37,"pop"],[1081,34,1091,40],[1081,35,1091,41],[1081,36,1091,42],[1082,10,1092,16],[1083,8,1093,12],[1084,6,1094,8],[1085,6,1095,8],[1086,6,1096,8],[1087,6,1097,8,"unsentEntries"],[1087,19,1097,21],[1087,22,1097,24,"unsentEntries"],[1087,35,1097,37],[1087,36,1097,38,"slice"],[1087,41,1097,43],[1087,42,1097,44],[1087,43,1097,45],[1087,44,1097,46],[1088,4,1098,4],[1089,4,1099,4],[1089,11,1099,11],[1090,6,1100,8,"heartbeatsToSend"],[1090,22,1100,24],[1091,6,1101,8,"unsentEntries"],[1092,4,1102,4],[1092,5,1102,5],[1093,2,1103,0],[1094,2,1104,0],[1094,8,1104,6,"HeartbeatStorageImpl"],[1094,28,1104,26],[1094,29,1104,27],[1095,4,1105,4,"constructor"],[1095,15,1105,15,"constructor"],[1095,16,1105,16,"app"],[1095,19,1105,19],[1095,21,1105,21],[1096,6,1106,8],[1096,10,1106,12],[1096,11,1106,13,"app"],[1096,14,1106,16],[1096,17,1106,19,"app"],[1096,20,1106,22],[1097,6,1107,8],[1097,10,1107,12],[1097,11,1107,13,"_canUseIndexedDBPromise"],[1097,34,1107,36],[1097,37,1107,39],[1097,41,1107,43],[1097,42,1107,44,"runIndexedDBEnvironmentCheck"],[1097,70,1107,72],[1097,71,1107,73],[1097,72,1107,74],[1098,4,1108,4],[1099,4,1109,4],[1099,10,1109,10,"runIndexedDBEnvironmentCheck"],[1099,38,1109,38,"runIndexedDBEnvironmentCheck"],[1099,39,1109,38],[1099,41,1109,41],[1100,6,1110,8],[1100,10,1110,12],[1100,11,1110,13],[1100,15,1110,13,"isIndexedDBAvailable"],[1100,41,1110,33],[1100,43,1110,34],[1100,44,1110,35],[1100,46,1110,37],[1101,8,1111,12],[1101,15,1111,19],[1101,20,1111,24],[1102,6,1112,8],[1102,7,1112,9],[1102,13,1113,13],[1103,8,1114,12],[1103,15,1114,19],[1103,19,1114,19,"validateIndexedDBOpenable"],[1103,50,1114,44],[1103,52,1114,45],[1103,53,1114,46],[1103,54,1115,17,"then"],[1103,58,1115,21],[1103,59,1115,22],[1103,65,1115,28],[1103,69,1115,32],[1103,70,1115,33],[1103,71,1116,17,"catch"],[1103,76,1116,22],[1103,77,1116,23],[1103,83,1116,29],[1103,88,1116,34],[1103,89,1116,35],[1104,6,1117,8],[1105,4,1118,4],[1106,4,1119,4],[1107,0,1120,0],[1108,0,1121,0],[1109,4,1122,4],[1109,10,1122,10,"read"],[1109,14,1122,14,"read"],[1109,15,1122,14],[1109,17,1122,17],[1110,6,1123,8],[1110,12,1123,14,"canUseIndexedDB"],[1110,27,1123,29],[1110,30,1123,32],[1110,36,1123,38],[1110,40,1123,42],[1110,41,1123,43,"_canUseIndexedDBPromise"],[1110,64,1123,66],[1111,6,1124,8],[1111,10,1124,12],[1111,11,1124,13,"canUseIndexedDB"],[1111,26,1124,28],[1111,28,1124,30],[1112,8,1125,12],[1112,15,1125,19],[1113,10,1125,21,"heartbeats"],[1113,20,1125,31],[1113,22,1125,33],[1114,8,1125,36],[1114,9,1125,37],[1115,6,1126,8],[1115,7,1126,9],[1115,13,1127,13],[1116,8,1128,12],[1116,14,1128,18,"idbHeartbeatObject"],[1116,32,1128,36],[1116,35,1128,39],[1116,41,1128,45,"readHeartbeatsFromIndexedDB"],[1116,68,1128,72],[1116,69,1128,73],[1116,73,1128,77],[1116,74,1128,78,"app"],[1116,77,1128,81],[1116,78,1128,82],[1117,8,1129,12],[1117,12,1129,16,"idbHeartbeatObject"],[1117,30,1129,34],[1117,32,1129,36,"heartbeats"],[1117,42,1129,46],[1117,44,1129,48],[1118,10,1130,16],[1118,17,1130,23,"idbHeartbeatObject"],[1118,35,1130,41],[1119,8,1131,12],[1119,9,1131,13],[1119,15,1132,17],[1120,10,1133,16],[1120,17,1133,23],[1121,12,1133,25,"heartbeats"],[1121,22,1133,35],[1121,24,1133,37],[1122,10,1133,40],[1122,11,1133,41],[1123,8,1134,12],[1124,6,1135,8],[1125,4,1136,4],[1126,4,1137,4],[1127,4,1138,4],[1127,10,1138,10,"overwrite"],[1127,19,1138,19,"overwrite"],[1127,20,1138,20,"heartbeatsObject"],[1127,36,1138,36],[1127,38,1138,38],[1128,6,1139,8],[1128,12,1139,14,"canUseIndexedDB"],[1128,27,1139,29],[1128,30,1139,32],[1128,36,1139,38],[1128,40,1139,42],[1128,41,1139,43,"_canUseIndexedDBPromise"],[1128,64,1139,66],[1129,6,1140,8],[1129,10,1140,12],[1129,11,1140,13,"canUseIndexedDB"],[1129,26,1140,28],[1129,28,1140,30],[1130,8,1141,12],[1131,6,1142,8],[1131,7,1142,9],[1131,13,1143,13],[1132,8,1144,12],[1132,14,1144,18,"existingHeartbeatsObject"],[1132,38,1144,42],[1132,41,1144,45],[1132,47,1144,51],[1132,51,1144,55],[1132,52,1144,56,"read"],[1132,56,1144,60],[1132,57,1144,61],[1132,58,1144,62],[1133,8,1145,12],[1133,15,1145,19,"writeHeartbeatsToIndexedDB"],[1133,41,1145,45],[1133,42,1145,46],[1133,46,1145,50],[1133,47,1145,51,"app"],[1133,50,1145,54],[1133,52,1145,56],[1134,10,1146,16,"lastSentHeartbeatDate"],[1134,31,1146,37],[1134,33,1146,39,"heartbeatsObject"],[1134,49,1146,55],[1134,50,1146,56,"lastSentHeartbeatDate"],[1134,71,1146,77],[1134,75,1147,20,"existingHeartbeatsObject"],[1134,99,1147,44],[1134,100,1147,45,"lastSentHeartbeatDate"],[1134,121,1147,66],[1135,10,1148,16,"heartbeats"],[1135,20,1148,26],[1135,22,1148,28,"heartbeatsObject"],[1135,38,1148,44],[1135,39,1148,45,"heartbeats"],[1136,8,1149,12],[1136,9,1149,13],[1136,10,1149,14],[1137,6,1150,8],[1138,4,1151,4],[1139,4,1152,4],[1140,4,1153,4],[1140,10,1153,10,"add"],[1140,13,1153,13,"add"],[1140,14,1153,14,"heartbeatsObject"],[1140,30,1153,30],[1140,32,1153,32],[1141,6,1154,8],[1141,12,1154,14,"canUseIndexedDB"],[1141,27,1154,29],[1141,30,1154,32],[1141,36,1154,38],[1141,40,1154,42],[1141,41,1154,43,"_canUseIndexedDBPromise"],[1141,64,1154,66],[1142,6,1155,8],[1142,10,1155,12],[1142,11,1155,13,"canUseIndexedDB"],[1142,26,1155,28],[1142,28,1155,30],[1143,8,1156,12],[1144,6,1157,8],[1144,7,1157,9],[1144,13,1158,13],[1145,8,1159,12],[1145,14,1159,18,"existingHeartbeatsObject"],[1145,38,1159,42],[1145,41,1159,45],[1145,47,1159,51],[1145,51,1159,55],[1145,52,1159,56,"read"],[1145,56,1159,60],[1145,57,1159,61],[1145,58,1159,62],[1146,8,1160,12],[1146,15,1160,19,"writeHeartbeatsToIndexedDB"],[1146,41,1160,45],[1146,42,1160,46],[1146,46,1160,50],[1146,47,1160,51,"app"],[1146,50,1160,54],[1146,52,1160,56],[1147,10,1161,16,"lastSentHeartbeatDate"],[1147,31,1161,37],[1147,33,1161,39,"heartbeatsObject"],[1147,49,1161,55],[1147,50,1161,56,"lastSentHeartbeatDate"],[1147,71,1161,77],[1147,75,1162,20,"existingHeartbeatsObject"],[1147,99,1162,44],[1147,100,1162,45,"lastSentHeartbeatDate"],[1147,121,1162,66],[1148,10,1163,16,"heartbeats"],[1148,20,1163,26],[1148,22,1163,28],[1148,23,1164,20],[1148,26,1164,23,"existingHeartbeatsObject"],[1148,50,1164,47],[1148,51,1164,48,"heartbeats"],[1148,61,1164,58],[1148,63,1165,20],[1148,66,1165,23,"heartbeatsObject"],[1148,82,1165,39],[1148,83,1165,40,"heartbeats"],[1148,93,1165,50],[1149,8,1167,12],[1149,9,1167,13],[1149,10,1167,14],[1150,6,1168,8],[1151,4,1169,4],[1152,2,1170,0],[1153,2,1171,0],[1154,0,1172,0],[1155,0,1173,0],[1156,0,1174,0],[1157,0,1175,0],[1158,2,1176,0],[1158,11,1176,9,"countBytes"],[1158,21,1176,19,"countBytes"],[1158,22,1176,20,"heartbeatsCache"],[1158,37,1176,35],[1158,39,1176,37],[1159,4,1177,4],[1160,4,1178,4],[1160,11,1178,11],[1160,15,1178,11,"base64urlEncodeWithoutPadding"],[1160,50,1178,40],[1161,4,1179,4],[1162,4,1180,4,"JSON"],[1162,8,1180,8],[1162,9,1180,9,"stringify"],[1162,18,1180,18],[1162,19,1180,19],[1163,6,1180,21,"version"],[1163,13,1180,28],[1163,15,1180,30],[1163,16,1180,31],[1164,6,1180,33,"heartbeats"],[1164,16,1180,43],[1164,18,1180,45,"heartbeatsCache"],[1165,4,1180,61],[1165,5,1180,62],[1165,6,1180,63],[1165,7,1180,64],[1165,8,1180,65,"length"],[1165,14,1180,71],[1166,2,1181,0],[1167,2,1182,0],[1168,0,1183,0],[1169,0,1184,0],[1170,0,1185,0],[1171,2,1186,0],[1171,11,1186,9,"getEarliestHeartbeatIdx"],[1171,34,1186,32,"getEarliestHeartbeatIdx"],[1171,35,1186,33,"heartbeats"],[1171,45,1186,43],[1171,47,1186,45],[1172,4,1187,4],[1172,8,1187,8,"heartbeats"],[1172,18,1187,18],[1172,19,1187,19,"length"],[1172,25,1187,25],[1172,30,1187,30],[1172,31,1187,31],[1172,33,1187,33],[1173,6,1188,8],[1173,13,1188,15],[1173,14,1188,16],[1173,15,1188,17],[1174,4,1189,4],[1175,4,1190,4],[1175,8,1190,8,"earliestHeartbeatIdx"],[1175,28,1190,28],[1175,31,1190,31],[1175,32,1190,32],[1176,4,1191,4],[1176,8,1191,8,"earliestHeartbeatDate"],[1176,29,1191,29],[1176,32,1191,32,"heartbeats"],[1176,42,1191,42],[1176,43,1191,43],[1176,44,1191,44],[1176,45,1191,45],[1176,46,1191,46,"date"],[1176,50,1191,50],[1177,4,1192,4],[1177,9,1192,9],[1177,13,1192,13,"i"],[1177,14,1192,14],[1177,17,1192,17],[1177,18,1192,18],[1177,20,1192,20,"i"],[1177,21,1192,21],[1177,24,1192,24,"heartbeats"],[1177,34,1192,34],[1177,35,1192,35,"length"],[1177,41,1192,41],[1177,43,1192,43,"i"],[1177,44,1192,44],[1177,46,1192,46],[1177,48,1192,48],[1178,6,1193,8],[1178,10,1193,12,"heartbeats"],[1178,20,1193,22],[1178,21,1193,23,"i"],[1178,22,1193,24],[1178,23,1193,25],[1178,24,1193,26,"date"],[1178,28,1193,30],[1178,31,1193,33,"earliestHeartbeatDate"],[1178,52,1193,54],[1178,54,1193,56],[1179,8,1194,12,"earliestHeartbeatDate"],[1179,29,1194,33],[1179,32,1194,36,"heartbeats"],[1179,42,1194,46],[1179,43,1194,47,"i"],[1179,44,1194,48],[1179,45,1194,49],[1179,46,1194,50,"date"],[1179,50,1194,54],[1180,8,1195,12,"earliestHeartbeatIdx"],[1180,28,1195,32],[1180,31,1195,35,"i"],[1180,32,1195,36],[1181,6,1196,8],[1182,4,1197,4],[1183,4,1198,4],[1183,11,1198,11,"earliestHeartbeatIdx"],[1183,31,1198,31],[1184,2,1199,0],[1186,2,1201,0],[1187,0,1202,0],[1188,0,1203,0],[1189,0,1204,0],[1190,0,1205,0],[1191,0,1206,0],[1192,0,1207,0],[1193,0,1208,0],[1194,0,1209,0],[1195,0,1210,0],[1196,0,1211,0],[1197,0,1212,0],[1198,0,1213,0],[1199,0,1214,0],[1200,0,1215,0],[1201,0,1216,0],[1202,2,1217,0],[1202,11,1217,9,"registerCoreComponents"],[1202,33,1217,31,"registerCoreComponents"],[1202,34,1217,32,"variant"],[1202,41,1217,39],[1202,43,1217,41],[1203,4,1218,4,"_registerComponent"],[1203,22,1218,22],[1203,23,1218,23],[1203,27,1218,27,"Component"],[1203,47,1218,36],[1203,48,1218,37],[1203,65,1218,54],[1203,67,1218,56,"container"],[1203,76,1218,65],[1203,80,1218,69],[1203,84,1218,73,"PlatformLoggerServiceImpl"],[1203,109,1218,98],[1203,110,1218,99,"container"],[1203,119,1218,108],[1203,120,1218,109],[1203,122,1218,111],[1203,131,1218,120],[1203,132,1218,121],[1203,159,1218,148],[1203,160,1218,149],[1203,161,1218,150],[1204,4,1219,4,"_registerComponent"],[1204,22,1219,22],[1204,23,1219,23],[1204,27,1219,27,"Component"],[1204,47,1219,36],[1204,48,1219,37],[1204,59,1219,48],[1204,61,1219,50,"container"],[1204,70,1219,59],[1204,74,1219,63],[1204,78,1219,67,"HeartbeatServiceImpl"],[1204,98,1219,87],[1204,99,1219,88,"container"],[1204,108,1219,97],[1204,109,1219,98],[1204,111,1219,100],[1204,120,1219,109],[1204,121,1219,110],[1204,148,1219,137],[1204,149,1219,138],[1204,150,1219,139],[1205,4,1220,4],[1206,4,1221,4,"registerVersion"],[1206,19,1221,19],[1206,20,1221,20,"name$q"],[1206,26,1221,26],[1206,28,1221,28,"version$1"],[1206,37,1221,37],[1206,39,1221,39,"variant"],[1206,46,1221,46],[1206,47,1221,47],[1207,4,1222,4],[1208,4,1223,4,"registerVersion"],[1208,19,1223,19],[1208,20,1223,20,"name$q"],[1208,26,1223,26],[1208,28,1223,28,"version$1"],[1208,37,1223,37],[1208,39,1223,39],[1208,48,1223,48],[1208,49,1223,49],[1209,4,1224,4],[1210,4,1225,4,"registerVersion"],[1210,19,1225,19],[1210,20,1225,20],[1210,29,1225,29],[1210,31,1225,31],[1210,33,1225,33],[1210,34,1225,34],[1211,2,1226,0],[1213,2,1228,0],[1214,0,1229,0],[1215,0,1230,0],[1216,0,1231,0],[1217,0,1232,0],[1218,0,1233,0],[1219,2,1234,0,"registerCoreComponents"],[1219,24,1234,22],[1219,25,1234,23],[1219,27,1234,25],[1219,28,1234,26],[1220,0,1234,27],[1220,3]],"functionMap":{"names":["<global>","PlatformLoggerServiceImpl","PlatformLoggerServiceImpl#constructor","PlatformLoggerServiceImpl#getPlatformInfoString","providers.map$argument_0","providers.map.filter$argument_0","isVersionServiceProvider","_addComponent","_addOrOverwriteComponent","_registerComponent","_getProvider","_removeServiceInstance","_isFirebaseApp","_isFirebaseServerAppSettings","_isFirebaseServerApp","_clearComponents","FirebaseAppImpl","FirebaseAppImpl#constructor","Component$argument_1","FirebaseAppImpl#get__automaticDataCollectionEnabled","FirebaseAppImpl#set__automaticDataCollectionEnabled","FirebaseAppImpl#get__name","FirebaseAppImpl#get__options","FirebaseAppImpl#get__config","FirebaseAppImpl#get__container","FirebaseAppImpl#get__isDeleted","FirebaseAppImpl#set__isDeleted","FirebaseAppImpl#checkDestroyed","validateTokenTTL","FirebaseServerAppImpl","FirebaseServerAppImpl#constructor","FinalizationRegistry$argument_0","FirebaseServerAppImpl#toJSON","FirebaseServerAppImpl#get__refCount","FirebaseServerAppImpl#incRefCount","FirebaseServerAppImpl#decRefCount","FirebaseServerAppImpl#automaticCleanup","FirebaseServerAppImpl#get__settings","FirebaseServerAppImpl#checkDestroyed","initializeApp","initializeServerApp","hashCode","reduce$argument_0","getApp","getApps","deleteApp","app.container.getProviders.map$argument_0","registerVersion","onLog","setLogLevel","getDbPromise","openDB$argument_2.upgrade","openDB._catch$argument_0","readHeartbeatsFromIndexedDB","writeHeartbeatsToIndexedDB","computeKey","HeartbeatServiceImpl","HeartbeatServiceImpl#constructor","_storage.read.then$argument_0","HeartbeatServiceImpl#triggerHeartbeat","_heartbeatsCache.heartbeats.some$argument_0","HeartbeatServiceImpl#getHeartbeatsHeader","getUTCDateString","extractHeartbeatsForHeader","heartbeatsToSend.find$argument_0","HeartbeatStorageImpl","HeartbeatStorageImpl#constructor","HeartbeatStorageImpl#runIndexedDBEnvironmentCheck","validateIndexedDBOpenable.then$argument_0","validateIndexedDBOpenable.then._catch$argument_0","HeartbeatStorageImpl#read","HeartbeatStorageImpl#overwrite","HeartbeatStorageImpl#add","countBytes","getEarliestHeartbeatIdx","registerCoreComponents"],"mappings":"AAA;ACsB;ICC;KDE;IEG;iBCK;SDQ;oBEC,sBF;KFE;CDC;AMS;CNG;AOqK;CPO;AQK;CRE;ASQ;CTe;AUU;CVQ;AWS;CXE;AYS;CZE;AaS;CbQ;AcS;CdK;AeM;CfE;AgBsD;ICC;yDCQ,UD;KDC;IGC;KHG;IIC;KJG;IKC;KLG;IMC;KNG;IOC;KPG;IQC;KRE;ISC;KTE;IUC;KVE;IWK;KXI;ChBC;A4BqB;C5BiB;A6BC;ICC;kECiC;aDE;KDS;IGC;KHE;IIC;KJE;IKG;KLQ;IME;KNK;IOI;KPE;IQC;KRG;ISK;KTI;C7BC;AuCwB;CvCuC;AwCC;qBCmC;6BCC,wDD;KDC;CxCmB;A2C8B;C3CS;A4CK;C5CE;A6CkB;iBCiB,6BD;C7CG;A+CS;2D7ByB,4B6B;C/CC;AgDQ;ChDK;AiDU;CjDE;AkDsB;qBCG;aDkB;iBEC;SFI;ClDG;AqDC;CrDqB;AsDC;CtDmB;AuDC;CvDE;AwDoB;ICC;iECc;SDG;KDC;IGQ;sDCmB,wDD;KHkB;IKQ;KLmC;CxDC;A8DC;C9DI;A+DC;qDCQ,4CD;C/D+B;AiEC;ICC;KDG;IEC;sBCM,UD;uBEC,WF;KFE;IKI;KLc;IME;KNa;IOE;KPgB;CjEC;AyEM;CzEK;A0EK;C1Ea;A2EkB;wDzDC,qDyD;kDzDC,gDyD;C3EO"}},"type":"js/module"}]}