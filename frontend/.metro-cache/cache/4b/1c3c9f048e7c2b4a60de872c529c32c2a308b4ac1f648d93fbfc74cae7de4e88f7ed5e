{"dependencies":[{"name":"./wrap-idb-value.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":67,"index":67}}],"key":"OGBTW7H/ooZIE0ffuAGbHXYdREw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.deleteDB = deleteDB;\n  exports.openDB = openDB;\n  Object.defineProperty(exports, \"unwrap\", {\n    enumerable: true,\n    get: function () {\n      return _wrapIdbValue.u;\n    }\n  });\n  Object.defineProperty(exports, \"wrap\", {\n    enumerable: true,\n    get: function () {\n      return _wrapIdbValue.w;\n    }\n  });\n  var _wrapIdbValue = require(_dependencyMap[0], \"./wrap-idb-value.js\");\n  /**\n   * Open a database.\n   *\n   * @param name Name of the database.\n   * @param version Schema version.\n   * @param callbacks Additional callbacks.\n   */\n  function openDB(name, version, {\n    blocked,\n    upgrade,\n    blocking,\n    terminated\n  } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = (0, _wrapIdbValue.w)(request);\n    if (upgrade) {\n      request.addEventListener('upgradeneeded', event => {\n        upgrade((0, _wrapIdbValue.w)(request.result), event.oldVersion, event.newVersion, (0, _wrapIdbValue.w)(request.transaction), event);\n      });\n    }\n    if (blocked) {\n      request.addEventListener('blocked', event => blocked(\n      // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n      event.oldVersion, event.newVersion, event));\n    }\n    openPromise.then(db => {\n      if (terminated) db.addEventListener('close', () => terminated());\n      if (blocking) {\n        db.addEventListener('versionchange', event => blocking(event.oldVersion, event.newVersion, event));\n      }\n    }).catch(() => {});\n    return openPromise;\n  }\n  /**\n   * Delete a database.\n   *\n   * @param name Name of the database.\n   */\n  function deleteDB(name, {\n    blocked\n  } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n      request.addEventListener('blocked', event => blocked(\n      // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n      event.oldVersion, event));\n    }\n    return (0, _wrapIdbValue.w)(request).then(() => undefined);\n  }\n  const readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\n  const writeMethods = ['put', 'add', 'delete', 'clear'];\n  const cachedMethods = new Map();\n  function getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase && !(prop in target) && typeof prop === 'string')) {\n      return;\n    }\n    if (cachedMethods.get(prop)) return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) || !(isWrite || readMethods.includes(targetFuncName))) {\n      return;\n    }\n    const method = async function (storeName, ...args) {\n      // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n      const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n      let target = tx.store;\n      if (useIndex) target = target.index(args.shift());\n      // Must reject if op rejects.\n      // If it's a write operation, must reject if tx.done rejects.\n      // Must reject with op rejection first.\n      // Must resolve with op value.\n      // Must handle both promises (no unhandled rejections)\n      return (await Promise.all([target[targetFuncName](...args), isWrite && tx.done]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n  }\n  (0, _wrapIdbValue.r)(oldTraps => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop)\n  }));\n});","lineCount":105,"map":[[19,2,1,0],[19,6,1,0,"_wrapIdbValue"],[19,19,1,0],[19,22,1,0,"require"],[19,29,1,0],[19,30,1,0,"_dependencyMap"],[19,44,1,0],[20,2,4,0],[21,0,5,0],[22,0,6,0],[23,0,7,0],[24,0,8,0],[25,0,9,0],[26,0,10,0],[27,2,11,0],[27,11,11,9,"openDB"],[27,17,11,15,"openDB"],[27,18,11,16,"name"],[27,22,11,20],[27,24,11,22,"version"],[27,31,11,29],[27,33,11,31],[28,4,11,33,"blocked"],[28,11,11,40],[29,4,11,42,"upgrade"],[29,11,11,49],[30,4,11,51,"blocking"],[30,12,11,59],[31,4,11,61,"terminated"],[32,2,11,72],[32,3,11,73],[32,6,11,76],[32,7,11,77],[32,8,11,78],[32,10,11,80],[33,4,12,4],[33,10,12,10,"request"],[33,17,12,17],[33,20,12,20,"indexedDB"],[33,29,12,29],[33,30,12,30,"open"],[33,34,12,34],[33,35,12,35,"name"],[33,39,12,39],[33,41,12,41,"version"],[33,48,12,48],[33,49,12,49],[34,4,13,4],[34,10,13,10,"openPromise"],[34,21,13,21],[34,24,13,24],[34,28,13,24,"wrap"],[34,43,13,28],[34,45,13,29,"request"],[34,52,13,36],[34,53,13,37],[35,4,14,4],[35,8,14,8,"upgrade"],[35,15,14,15],[35,17,14,17],[36,6,15,8,"request"],[36,13,15,15],[36,14,15,16,"addEventListener"],[36,30,15,32],[36,31,15,33],[36,46,15,48],[36,48,15,51,"event"],[36,53,15,56],[36,57,15,61],[37,8,16,12,"upgrade"],[37,15,16,19],[37,16,16,20],[37,20,16,20,"wrap"],[37,35,16,24],[37,37,16,25,"request"],[37,44,16,32],[37,45,16,33,"result"],[37,51,16,39],[37,52,16,40],[37,54,16,42,"event"],[37,59,16,47],[37,60,16,48,"oldVersion"],[37,70,16,58],[37,72,16,60,"event"],[37,77,16,65],[37,78,16,66,"newVersion"],[37,88,16,76],[37,90,16,78],[37,94,16,78,"wrap"],[37,109,16,82],[37,111,16,83,"request"],[37,118,16,90],[37,119,16,91,"transaction"],[37,130,16,102],[37,131,16,103],[37,133,16,105,"event"],[37,138,16,110],[37,139,16,111],[38,6,17,8],[38,7,17,9],[38,8,17,10],[39,4,18,4],[40,4,19,4],[40,8,19,8,"blocked"],[40,15,19,15],[40,17,19,17],[41,6,20,8,"request"],[41,13,20,15],[41,14,20,16,"addEventListener"],[41,30,20,32],[41,31,20,33],[41,40,20,42],[41,42,20,45,"event"],[41,47,20,50],[41,51,20,55,"blocked"],[41,58,20,62],[42,6,21,8],[43,6,22,8,"event"],[43,11,22,13],[43,12,22,14,"oldVersion"],[43,22,22,24],[43,24,22,26,"event"],[43,29,22,31],[43,30,22,32,"newVersion"],[43,40,22,42],[43,42,22,44,"event"],[43,47,22,49],[43,48,22,50],[43,49,22,51],[44,4,23,4],[45,4,24,4,"openPromise"],[45,15,24,15],[45,16,25,9,"then"],[45,20,25,13],[45,21,25,15,"db"],[45,23,25,17],[45,27,25,22],[46,6,26,8],[46,10,26,12,"terminated"],[46,20,26,22],[46,22,27,12,"db"],[46,24,27,14],[46,25,27,15,"addEventListener"],[46,41,27,31],[46,42,27,32],[46,49,27,39],[46,51,27,41],[46,57,27,47,"terminated"],[46,67,27,57],[46,68,27,58],[46,69,27,59],[46,70,27,60],[47,6,28,8],[47,10,28,12,"blocking"],[47,18,28,20],[47,20,28,22],[48,8,29,12,"db"],[48,10,29,14],[48,11,29,15,"addEventListener"],[48,27,29,31],[48,28,29,32],[48,43,29,47],[48,45,29,50,"event"],[48,50,29,55],[48,54,29,60,"blocking"],[48,62,29,68],[48,63,29,69,"event"],[48,68,29,74],[48,69,29,75,"oldVersion"],[48,79,29,85],[48,81,29,87,"event"],[48,86,29,92],[48,87,29,93,"newVersion"],[48,97,29,103],[48,99,29,105,"event"],[48,104,29,110],[48,105,29,111],[48,106,29,112],[49,6,30,8],[50,4,31,4],[50,5,31,5],[50,6,31,6],[50,7,32,9,"catch"],[50,12,32,14],[50,13,32,15],[50,19,32,21],[50,20,32,23],[50,21,32,24],[50,22,32,25],[51,4,33,4],[51,11,33,11,"openPromise"],[51,22,33,22],[52,2,34,0],[53,2,35,0],[54,0,36,0],[55,0,37,0],[56,0,38,0],[57,0,39,0],[58,2,40,0],[58,11,40,9,"deleteDB"],[58,19,40,17,"deleteDB"],[58,20,40,18,"name"],[58,24,40,22],[58,26,40,24],[59,4,40,26,"blocked"],[60,2,40,34],[60,3,40,35],[60,6,40,38],[60,7,40,39],[60,8,40,40],[60,10,40,42],[61,4,41,4],[61,10,41,10,"request"],[61,17,41,17],[61,20,41,20,"indexedDB"],[61,29,41,29],[61,30,41,30,"deleteDatabase"],[61,44,41,44],[61,45,41,45,"name"],[61,49,41,49],[61,50,41,50],[62,4,42,4],[62,8,42,8,"blocked"],[62,15,42,15],[62,17,42,17],[63,6,43,8,"request"],[63,13,43,15],[63,14,43,16,"addEventListener"],[63,30,43,32],[63,31,43,33],[63,40,43,42],[63,42,43,45,"event"],[63,47,43,50],[63,51,43,55,"blocked"],[63,58,43,62],[64,6,44,8],[65,6,45,8,"event"],[65,11,45,13],[65,12,45,14,"oldVersion"],[65,22,45,24],[65,24,45,26,"event"],[65,29,45,31],[65,30,45,32],[65,31,45,33],[66,4,46,4],[67,4,47,4],[67,11,47,11],[67,15,47,11,"wrap"],[67,30,47,15],[67,32,47,16,"request"],[67,39,47,23],[67,40,47,24],[67,41,47,25,"then"],[67,45,47,29],[67,46,47,30],[67,52,47,36,"undefined"],[67,61,47,45],[67,62,47,46],[68,2,48,0],[69,2,50,0],[69,8,50,6,"readMethods"],[69,19,50,17],[69,22,50,20],[69,23,50,21],[69,28,50,26],[69,30,50,28],[69,38,50,36],[69,40,50,38],[69,48,50,46],[69,50,50,48],[69,62,50,60],[69,64,50,62],[69,71,50,69],[69,72,50,70],[70,2,51,0],[70,8,51,6,"writeMethods"],[70,20,51,18],[70,23,51,21],[70,24,51,22],[70,29,51,27],[70,31,51,29],[70,36,51,34],[70,38,51,36],[70,46,51,44],[70,48,51,46],[70,55,51,53],[70,56,51,54],[71,2,52,0],[71,8,52,6,"cachedMethods"],[71,21,52,19],[71,24,52,22],[71,28,52,26,"Map"],[71,31,52,29],[71,32,52,30],[71,33,52,31],[72,2,53,0],[72,11,53,9,"getMethod"],[72,20,53,18,"getMethod"],[72,21,53,19,"target"],[72,27,53,25],[72,29,53,27,"prop"],[72,33,53,31],[72,35,53,33],[73,4,54,4],[73,8,54,8],[73,10,54,10,"target"],[73,16,54,16],[73,28,54,28,"IDBDatabase"],[73,39,54,39],[73,43,55,8],[73,45,55,10,"prop"],[73,49,55,14],[73,53,55,18,"target"],[73,59,55,24],[73,60,55,25],[73,64,56,8],[73,71,56,15,"prop"],[73,75,56,19],[73,80,56,24],[73,88,56,32],[73,89,56,33],[73,91,56,35],[74,6,57,8],[75,4,58,4],[76,4,59,4],[76,8,59,8,"cachedMethods"],[76,21,59,21],[76,22,59,22,"get"],[76,25,59,25],[76,26,59,26,"prop"],[76,30,59,30],[76,31,59,31],[76,33,60,8],[76,40,60,15,"cachedMethods"],[76,53,60,28],[76,54,60,29,"get"],[76,57,60,32],[76,58,60,33,"prop"],[76,62,60,37],[76,63,60,38],[77,4,61,4],[77,10,61,10,"targetFuncName"],[77,24,61,24],[77,27,61,27,"prop"],[77,31,61,31],[77,32,61,32,"replace"],[77,39,61,39],[77,40,61,40],[77,52,61,52],[77,54,61,54],[77,56,61,56],[77,57,61,57],[78,4,62,4],[78,10,62,10,"useIndex"],[78,18,62,18],[78,21,62,21,"prop"],[78,25,62,25],[78,30,62,30,"targetFuncName"],[78,44,62,44],[79,4,63,4],[79,10,63,10,"isWrite"],[79,17,63,17],[79,20,63,20,"writeMethods"],[79,32,63,32],[79,33,63,33,"includes"],[79,41,63,41],[79,42,63,42,"targetFuncName"],[79,56,63,56],[79,57,63,57],[80,4,64,4],[81,4,65,4],[82,4,66,4],[82,6,66,6,"targetFuncName"],[82,20,66,20],[82,24,66,24],[82,25,66,25,"useIndex"],[82,33,66,33],[82,36,66,36,"IDBIndex"],[82,44,66,44],[82,47,66,47,"IDBObjectStore"],[82,61,66,61],[82,63,66,63,"prototype"],[82,72,66,72],[82,73,66,73],[82,77,67,8],[82,79,67,10,"isWrite"],[82,86,67,17],[82,90,67,21,"readMethods"],[82,101,67,32],[82,102,67,33,"includes"],[82,110,67,41],[82,111,67,42,"targetFuncName"],[82,125,67,56],[82,126,67,57],[82,127,67,58],[82,129,67,60],[83,6,68,8],[84,4,69,4],[85,4,70,4],[85,10,70,10,"method"],[85,16,70,16],[85,19,70,19],[85,34,70,19,"method"],[85,35,70,35,"storeName"],[85,44,70,44],[85,46,70,46],[85,49,70,49,"args"],[85,53,70,53],[85,55,70,55],[86,6,71,8],[87,6,72,8],[87,12,72,14,"tx"],[87,14,72,16],[87,17,72,19],[87,21,72,23],[87,22,72,24,"transaction"],[87,33,72,35],[87,34,72,36,"storeName"],[87,43,72,45],[87,45,72,47,"isWrite"],[87,52,72,54],[87,55,72,57],[87,66,72,68],[87,69,72,71],[87,79,72,81],[87,80,72,82],[88,6,73,8],[88,10,73,12,"target"],[88,16,73,18],[88,19,73,21,"tx"],[88,21,73,23],[88,22,73,24,"store"],[88,27,73,29],[89,6,74,8],[89,10,74,12,"useIndex"],[89,18,74,20],[89,20,75,12,"target"],[89,26,75,18],[89,29,75,21,"target"],[89,35,75,27],[89,36,75,28,"index"],[89,41,75,33],[89,42,75,34,"args"],[89,46,75,38],[89,47,75,39,"shift"],[89,52,75,44],[89,53,75,45],[89,54,75,46],[89,55,75,47],[90,6,76,8],[91,6,77,8],[92,6,78,8],[93,6,79,8],[94,6,80,8],[95,6,81,8],[95,13,81,15],[95,14,81,16],[95,20,81,22,"Promise"],[95,27,81,29],[95,28,81,30,"all"],[95,31,81,33],[95,32,81,34],[95,33,82,12,"target"],[95,39,82,18],[95,40,82,19,"targetFuncName"],[95,54,82,33],[95,55,82,34],[95,56,82,35],[95,59,82,38,"args"],[95,63,82,42],[95,64,82,43],[95,66,83,12,"isWrite"],[95,73,83,19],[95,77,83,23,"tx"],[95,79,83,25],[95,80,83,26,"done"],[95,84,83,30],[95,85,84,9],[95,86,84,10],[95,88,84,12],[95,89,84,13],[95,90,84,14],[96,4,85,4],[96,5,85,5],[97,4,86,4,"cachedMethods"],[97,17,86,17],[97,18,86,18,"set"],[97,21,86,21],[97,22,86,22,"prop"],[97,26,86,26],[97,28,86,28,"method"],[97,34,86,34],[97,35,86,35],[98,4,87,4],[98,11,87,11,"method"],[98,17,87,17],[99,2,88,0],[100,2,89,0],[100,6,89,0,"replaceTraps"],[100,21,89,12],[100,23,89,14,"oldTraps"],[100,31,89,22],[100,36,89,28],[101,4,90,4],[101,7,90,7,"oldTraps"],[101,15,90,15],[102,4,91,4,"get"],[102,7,91,7],[102,9,91,9,"get"],[102,10,91,10,"target"],[102,16,91,16],[102,18,91,18,"prop"],[102,22,91,22],[102,24,91,24,"receiver"],[102,32,91,32],[102,37,91,37,"getMethod"],[102,46,91,46],[102,47,91,47,"target"],[102,53,91,53],[102,55,91,55,"prop"],[102,59,91,59],[102,60,91,60],[102,64,91,64,"oldTraps"],[102,72,91,72],[102,73,91,73,"get"],[102,76,91,76],[102,77,91,77,"target"],[102,83,91,83],[102,85,91,85,"prop"],[102,89,91,89],[102,91,91,91,"receiver"],[102,99,91,99],[102,100,91,100],[103,4,92,4,"has"],[103,7,92,7],[103,9,92,9,"has"],[103,10,92,10,"target"],[103,16,92,16],[103,18,92,18,"prop"],[103,22,92,22],[103,27,92,27],[103,28,92,28],[103,29,92,29,"getMethod"],[103,38,92,38],[103,39,92,39,"target"],[103,45,92,45],[103,47,92,47,"prop"],[103,51,92,51],[103,52,92,52],[103,56,92,56,"oldTraps"],[103,64,92,64],[103,65,92,65,"has"],[103,68,92,68],[103,69,92,69,"target"],[103,75,92,75],[103,77,92,77,"prop"],[103,81,92,81],[104,2,93,0],[104,3,93,1],[104,4,93,2],[104,5,93,3],[105,0,93,4],[105,3]],"functionMap":{"names":["<global>","openDB","request.addEventListener$argument_1","openPromise.then$argument_0","db.addEventListener$argument_1","openPromise.then._catch$argument_0","deleteDB","wrap.then$argument_0","getMethod","method","replaceTraps$argument_0","get","has"],"mappings":"AAA;ACU;kDCI;SDE;4CCG;kDDE;cEG;yCCE,kBD;iDCE,8DD;KFE;eIC,SJ;CDE;AMM;4CJG;gCIE;8BCE,eD;CNC;AQK;mBCiB;KDe;CRG;aUC;SCE,2FD;SEC,yEF;EVC"}},"type":"js/module"}]}